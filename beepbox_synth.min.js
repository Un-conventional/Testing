var beepbox=function(e){"use strict";
/*!
    Copyright (c) 2012-2022 John Nesky and contributing authors

    Permission is hereby granted, free of charge, to any person obtaining a copy of
    this software and associated documentation files (the "Software"), to deal in
    the Software without restriction, including without limitation the rights to
    use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies
    of the Software, and to permit persons to whom the Software is furnished to do
    so, subject to the following conditions:

    The above copyright notice and this permission notice shall be included in all
    copies or substantial portions of the Software.

    THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
    IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
    FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
    AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
    LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
    OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE
    SOFTWARE.
    */var t=e&&e.t||function(e,t,i,n){return new(i||(i=Promise))((function(s,a){function r(e){try{l(n.next(e))}catch(e){a(e)}}function o(e){try{l(n.throw(e))}catch(e){a(e)}}function l(e){var t;e.done?s(e.value):(t=e.value,t instanceof i?t:new i((function(e){e(t)}))).then(r,o)}l((n=n.apply(e,t||[])).next())}))};const i=["chip","FM","noise","spectrum","drumset","harmonics","pulse width","duty cycle","picked string","supersaw","chip (custom)","mod","FM (6-op)"];const n=new class{constructor(){this.statusTable={},this.urlTable={},this.totalSamples=0,this.samplesLoaded=0}};class s extends Event{constructor(e,t){super("sampleloaded"),this.totalSamples=e,this.samplesLoaded=t}}class a extends EventTarget{constructor(){super()}}const r=new a;function o(e,i,a,o,l){return t(this,void 0,void 0,(function*(){const t=new AudioContext({sampleRate:l});let p=!1;const h=u.chipWaves[i],d=u.rawChipWaves[i],m=u.rawRawChipWaves[i];fetch(e).then((e=>e.ok?e.arrayBuffer():(n.statusTable[i]=2,Promise.reject(new Error("Couldn't load sample"))))).then((e=>t.decodeAudioData(e))).then((e=>{const l=c(Array.from(e.getChannelData(0))),u=f(l);h.samples=u,d.samples=l,m.samples=l,o.isUsingAdvancedLoopControls&&(a.chipWaveLoopStart=null!=o.chipWaveLoopStart?o.chipWaveLoopStart:0,a.chipWaveLoopEnd=null!=o.chipWaveLoopEnd?o.chipWaveLoopEnd:l.length-1,a.chipWaveLoopMode=null!=o.chipWaveLoopMode?o.chipWaveLoopMode:0,a.chipWavePlayBackwards=o.chipWavePlayBackwards,a.chipWaveStartOffset=null!=o.chipWaveStartOffset?o.chipWaveStartOffset:0),n.samplesLoaded++,n.statusTable[i]=1,r.dispatchEvent(new s(n.totalSamples,n.samplesLoaded)),p||(p=!0,t.close())})).catch((s=>{n.statusTable[i]=2,alert("Failed to load "+e+":\n"+s),p||(p=!0,t.close())}))}))}function l(e){return new Promise(((t,i)=>{if(!u.willReloadForCustomSamples){const i=document.createElement("script");i.src=e,document.head.appendChild(i),i.addEventListener("load",(e=>{t()}))}}))}function p(e){const t=u.chipWaves[0].samples,i=u.rawRawChipWaves[0].samples;if(0==e){const e=[{name:"paandorasbox kick",expression:4,isSampled:!0,isPercussion:!0,extraSampleDetune:0},{name:"paandorasbox snare",expression:3,isSampled:!0,isPercussion:!0,extraSampleDetune:0},{name:"paandorasbox piano1",expression:3,isSampled:!0,isPercussion:!1,extraSampleDetune:2},{name:"paandorasbox WOW",expression:1,isSampled:!0,isPercussion:!1,extraSampleDetune:0},{name:"paandorasbox overdrive",expression:1,isSampled:!0,isPercussion:!1,extraSampleDetune:-2},{name:"paandorasbox trumpet",expression:3,isSampled:!0,isPercussion:!1,extraSampleDetune:1.2},{name:"paandorasbox saxophone",expression:2,isSampled:!0,isPercussion:!1,extraSampleDetune:-5},{name:"paandorasbox orchestrahit",expression:2,isSampled:!0,isPercussion:!1,extraSampleDetune:4.2},{name:"paandorasbox detatched violin",expression:2,isSampled:!0,isPercussion:!1,extraSampleDetune:4.2},{name:"paandorasbox synth",expression:2,isSampled:!0,isPercussion:!1,extraSampleDetune:-.8},{name:"paandorasbox sonic3snare",expression:2,isSampled:!0,isPercussion:!0,extraSampleDetune:0},{name:"paandorasbox come on",expression:2,isSampled:!0,isPercussion:!1,extraSampleDetune:0},{name:"paandorasbox choir",expression:2,isSampled:!0,isPercussion:!1,extraSampleDetune:-3},{name:"paandorasbox overdriveguitar",expression:2,isSampled:!0,isPercussion:!1,extraSampleDetune:-6.2},{name:"paandorasbox flute",expression:2,isSampled:!0,isPercussion:!1,extraSampleDetune:-6},{name:"paandorasbox legato violin",expression:2,isSampled:!0,isPercussion:!1,extraSampleDetune:-28},{name:"paandorasbox tremolo violin",expression:2,isSampled:!0,isPercussion:!1,extraSampleDetune:-33},{name:"paandorasbox amen break",expression:1,isSampled:!0,isPercussion:!0,extraSampleDetune:-55},{name:"paandorasbox pizzicato violin",expression:2,isSampled:!0,isPercussion:!1,extraSampleDetune:-11},{name:"paandorasbox tim allen grunt",expression:2,isSampled:!0,isPercussion:!1,extraSampleDetune:-20},{name:"paandorasbox tuba",expression:2,isSampled:!0,isPercussion:!1,extraSampleDetune:44},{name:"paandorasbox loopingcymbal",expression:2,isSampled:!0,isPercussion:!1,extraSampleDetune:-17},{name:"paandorasbox standardkick",expression:2,isSampled:!0,isPercussion:!0,extraSampleDetune:-7},{name:"paandorasbox standardsnare",expression:2,isSampled:!0,isPercussion:!0,extraSampleDetune:0},{name:"paandorasbox closedhihat",expression:2,isSampled:!0,isPercussion:!0,extraSampleDetune:5},{name:"paandorasbox foothihat",expression:2,isSampled:!0,isPercussion:!0,extraSampleDetune:4},{name:"paandorasbox openhihat",expression:2,isSampled:!0,isPercussion:!0,extraSampleDetune:-31},{name:"paandorasbox crashcymbal",expression:2,isSampled:!0,isPercussion:!0,extraSampleDetune:-43},{name:"paandorasbox pianoC4",expression:2,isSampled:!0,isPercussion:!1,extraSampleDetune:-42.5},{name:"paandorasbox liver pad",expression:2,isSampled:!0,isPercussion:!1,extraSampleDetune:-22.5},{name:"paandorasbox marimba",expression:2,isSampled:!0,isPercussion:!1,extraSampleDetune:-15.5},{name:"paandorasbox susdotwav",expression:2,isSampled:!0,isPercussion:!1,extraSampleDetune:-24.5},{name:"paandorasbox wackyboxtts",expression:2,isSampled:!0,isPercussion:!1,extraSampleDetune:-17.5},{name:"paandorasbox peppersteak_1",expression:2,isSampled:!0,isPercussion:!1,extraSampleDetune:-42.2},{name:"paandorasbox peppersteak_2",expression:2,isSampled:!0,isPercussion:!1,extraSampleDetune:-47},{name:"paandorasbox vinyl_noise",expression:2,isSampled:!0,isPercussion:!0,extraSampleDetune:-50},{name:"paandorasbeta slap bass",expression:1,isSampled:!0,isPercussion:!1,extraSampleDetune:-56},{name:"paandorasbeta HD EB overdrive guitar",expression:1,isSampled:!0,isPercussion:!1,extraSampleDetune:-60},{name:"paandorasbeta sunsoft bass",expression:1,isSampled:!0,isPercussion:!1,extraSampleDetune:-18.5},{name:"paandorasbeta masculine choir",expression:1,isSampled:!0,isPercussion:!1,extraSampleDetune:-50},{name:"paandorasbeta feminine choir",expression:1,isSampled:!0,isPercussion:!1,extraSampleDetune:-60.5},{name:"paandorasbeta tololoche",expression:1,isSampled:!0,isPercussion:!1,extraSampleDetune:-29.5},{name:"paandorasbeta harp",expression:1,isSampled:!0,isPercussion:!1,extraSampleDetune:-54},{name:"paandorasbeta pan flute",expression:1,isSampled:!0,isPercussion:!1,extraSampleDetune:-58},{name:"paandorasbeta krumhorn",expression:1,isSampled:!0,isPercussion:!1,extraSampleDetune:-46},{name:"paandorasbeta timpani",expression:1,isSampled:!0,isPercussion:!1,extraSampleDetune:-50},{name:"paandorasbeta crowd hey",expression:1,isSampled:!0,isPercussion:!0,extraSampleDetune:-29},{name:"paandorasbeta wario land 4 brass",expression:1,isSampled:!0,isPercussion:!1,extraSampleDetune:-68},{name:"paandorasbeta wario land 4 rock organ",expression:1,isSampled:!0,isPercussion:!1,extraSampleDetune:-63},{name:"paandorasbeta wario land 4 DAOW",expression:1,isSampled:!0,isPercussion:!1,extraSampleDetune:-35},{name:"paandorasbeta wario land 4 hour chime",expression:1,isSampled:!0,isPercussion:!1,extraSampleDetune:-47.5},{name:"paandorasbeta wario land 4 tick",expression:1,isSampled:!0,isPercussion:!0,extraSampleDetune:-12.5},{name:"paandorasbeta kirby kick",expression:1,isSampled:!0,isPercussion:!0,extraSampleDetune:-46.5},{name:"paandorasbeta kirby snare",expression:1,isSampled:!0,isPercussion:!0,extraSampleDetune:-46.5},{name:"paandorasbeta kirby bongo",expression:1,isSampled:!0,isPercussion:!0,extraSampleDetune:-46.5},{name:"paandorasbeta kirby click",expression:1,isSampled:!0,isPercussion:!0,extraSampleDetune:-46.5},{name:"paandorasbeta sonor kick",expression:1,isSampled:!0,isPercussion:!0,extraSampleDetune:-28.5},{name:"paandorasbeta sonor snare",expression:1,isSampled:!0,isPercussion:!0,extraSampleDetune:-28.5},{name:"paandorasbeta sonor snare (left hand)",expression:1,isSampled:!0,isPercussion:!0,extraSampleDetune:-22.5},{name:"paandorasbeta sonor snare (right hand)",expression:1,isSampled:!0,isPercussion:!0,extraSampleDetune:-22.5},{name:"paandorasbeta sonor high tom",expression:1,isSampled:!0,isPercussion:!0,extraSampleDetune:-41.5},{name:"paandorasbeta sonor low tom",expression:1,isSampled:!0,isPercussion:!0,extraSampleDetune:-41.5},{name:"paandorasbeta sonor hihat (closed)",expression:1,isSampled:!0,isPercussion:!0,extraSampleDetune:-17},{name:"paandorasbeta sonor hihat (half opened)",expression:1,isSampled:!0,isPercussion:!0,extraSampleDetune:-21},{name:"paandorasbeta sonor hihat (open)",expression:1,isSampled:!0,isPercussion:!0,extraSampleDetune:-54.5},{name:"paandorasbeta sonor hihat (open tip)",expression:1,isSampled:!0,isPercussion:!0,extraSampleDetune:-43.5},{name:"paandorasbeta sonor hihat (pedal)",expression:1,isSampled:!0,isPercussion:!0,extraSampleDetune:-28},{name:"paandorasbeta sonor crash",expression:1,isSampled:!0,isPercussion:!0,extraSampleDetune:-51},{name:"paandorasbeta sonor crash (tip)",expression:1,isSampled:!0,isPercussion:!0,extraSampleDetune:-50.5},{name:"paandorasbeta sonor ride",expression:1,isSampled:!0,isPercussion:!0,extraSampleDetune:-46}];n.totalSamples+=e.length;const a=u.rawRawChipWaves.length;for(const s of e){const e=u.rawRawChipWaves.length,a={index:e,name:s.name,expression:s.expression,isSampled:s.isSampled,isPercussion:s.isPercussion,extraSampleDetune:s.extraSampleDetune,samples:i},r={index:e,name:s.name,expression:s.expression,isSampled:s.isSampled,isPercussion:s.isPercussion,extraSampleDetune:s.extraSampleDetune,samples:i},o={index:e,name:s.name,expression:s.expression,isSampled:s.isSampled,isPercussion:s.isPercussion,extraSampleDetune:s.extraSampleDetune,samples:t};u.rawRawChipWaves[e]=r,u.rawRawChipWaves.dictionary[s.name]=r,u.rawChipWaves[e]=a,u.rawChipWaves.dictionary[s.name]=a,u.chipWaves[e]=o,u.chipWaves.dictionary[s.name]=a,n.statusTable[e]=0,n.urlTable[e]="legacySamples"}l("samples.js").then((()=>l("samples2.js"))).then((()=>l("samples3.js"))).then((()=>l("drumsamples.js"))).then((()=>l("wario_samples.js"))).then((()=>l("kirby_samples.js"))).then((()=>{const e=[c(kicksample),c(snaresample),c(pianosample),c(WOWsample),c(overdrivesample),c(trumpetsample),c(saxophonesample),c(orchhitsample),c(detatchedviolinsample),c(synthsample),c(sonic3snaresample),c(comeonsample),c(choirsample),c(overdrivensample),c(flutesample),c(legatoviolinsample),c(tremoloviolinsample),c(amenbreaksample),c(pizzicatoviolinsample),c(timallengruntsample),c(tubasample),c(loopingcymbalsample),c(kickdrumsample),c(snaredrumsample),c(closedhihatsample),c(foothihatsample),c(openhihatsample),c(crashsample),c(pianoC4sample),c(liverpadsample),c(marimbasample),c(susdotwavsample),c(wackyboxttssample),c(peppersteak1),c(peppersteak2),c(vinyl),c(slapbass),c(hdeboverdrive),c(sunsoftbass),c(masculinechoir),c(femininechoir),c(southtololoche),c(harp),c(panflute),c(krumhorn),c(timpani),c(crowdhey),c(warioland4brass),c(warioland4organ),c(warioland4daow),c(warioland4hourchime),c(warioland4tick),c(kirbykick),c(kirbysnare),c(kirbybongo),c(kirbyclick),c(funkkick),c(funksnare),c(funksnareleft),c(funksnareright),c(funktomhigh),c(funktomlow),c(funkhihatclosed),c(funkhihathalfopen),c(funkhihatopen),c(funkhihatopentip),c(funkhihatfoot),c(funkcrash),c(funkcrashtip),c(funkride)];let t=0;for(const i of e){const e=a+t;u.rawChipWaves[e].samples=i,u.rawRawChipWaves[e].samples=i,u.chipWaves[e].samples=f(i),n.statusTable[e]=1,n.samplesLoaded++,r.dispatchEvent(new s(n.totalSamples,n.samplesLoaded)),t++}}))}else if(1==e){const e=[{name:"chronoperc1final",expression:4,isSampled:!0,isPercussion:!0,extraSampleDetune:0},{name:"synthkickfm",expression:4,isSampled:!0,isPercussion:!0,extraSampleDetune:0},{name:"mcwoodclick1",expression:4,isSampled:!0,isPercussion:!0,extraSampleDetune:0},{name:"acoustic snare",expression:4,isSampled:!0,isPercussion:!0,extraSampleDetune:0}];n.totalSamples+=e.length;const a=u.rawRawChipWaves.length;for(const s of e){const e=u.rawRawChipWaves.length,a={index:e,name:s.name,expression:s.expression,isSampled:s.isSampled,isPercussion:s.isPercussion,extraSampleDetune:s.extraSampleDetune,samples:i},r={index:e,name:s.name,expression:s.expression,isSampled:s.isSampled,isPercussion:s.isPercussion,extraSampleDetune:s.extraSampleDetune,samples:i},o={index:e,name:s.name,expression:s.expression,isSampled:s.isSampled,isPercussion:s.isPercussion,extraSampleDetune:s.extraSampleDetune,samples:t};u.rawRawChipWaves[e]=r,u.rawRawChipWaves.dictionary[s.name]=r,u.rawChipWaves[e]=a,u.rawChipWaves.dictionary[s.name]=a,u.chipWaves[e]=o,u.chipWaves.dictionary[s.name]=a,n.statusTable[e]=0,n.urlTable[e]="nintariboxSamples"}l("nintaribox_samples.js").then((()=>{const e=[c(chronoperc1finalsample),c(synthkickfmsample),c(woodclicksample),c(acousticsnaresample)];let t=0;for(const i of e){const e=a+t;u.rawChipWaves[e].samples=i,u.rawRawChipWaves[e].samples=i,u.chipWaves[e].samples=f(i),n.statusTable[e]=1,n.samplesLoaded++,r.dispatchEvent(new s(n.totalSamples,n.samplesLoaded)),t++}}))}else if(2==e){const e=[{name:"cat",expression:1,isSampled:!0,isPercussion:!1,extraSampleDetune:-3},{name:"gameboy",expression:1,isSampled:!0,isPercussion:!1,extraSampleDetune:7},{name:"mario",expression:1,isSampled:!0,isPercussion:!1,extraSampleDetune:0},{name:"drum",expression:1,isSampled:!0,isPercussion:!1,extraSampleDetune:4},{name:"yoshi",expression:1,isSampled:!0,isPercussion:!1,extraSampleDetune:-16},{name:"star",expression:1,isSampled:!0,isPercussion:!1,extraSampleDetune:-16},{name:"fire flower",expression:1,isSampled:!0,isPercussion:!1,extraSampleDetune:-1},{name:"dog",expression:1,isSampled:!0,isPercussion:!1,extraSampleDetune:-1},{name:"oink",expression:1,isSampled:!0,isPercussion:!1,extraSampleDetune:3},{name:"swan",expression:1,isSampled:!0,isPercussion:!1,extraSampleDetune:1},{name:"face",expression:1,isSampled:!0,isPercussion:!1,extraSampleDetune:-12}];n.totalSamples+=e.length;const a=u.rawRawChipWaves.length;for(const s of e){const e=u.rawRawChipWaves.length,a={index:e,name:s.name,expression:s.expression,isSampled:s.isSampled,isPercussion:s.isPercussion,extraSampleDetune:s.extraSampleDetune,samples:i},r={index:e,name:s.name,expression:s.expression,isSampled:s.isSampled,isPercussion:s.isPercussion,extraSampleDetune:s.extraSampleDetune,samples:i},o={index:e,name:s.name,expression:s.expression,isSampled:s.isSampled,isPercussion:s.isPercussion,extraSampleDetune:s.extraSampleDetune,samples:t};u.rawRawChipWaves[e]=r,u.rawRawChipWaves.dictionary[s.name]=r,u.rawChipWaves[e]=a,u.rawChipWaves.dictionary[s.name]=a,u.chipWaves[e]=o,u.chipWaves.dictionary[s.name]=a,n.statusTable[e]=0,n.urlTable[e]="marioPaintboxSamples"}l("mario_paintbox_samples.js").then((()=>{const e=[c(catpaintboxsample),c(gameboypaintboxsample),c(mariopaintboxsample),c(drumpaintboxsample),c(yoshipaintboxsample),c(starpaintboxsample),c(fireflowerpaintboxsample),c(dogpaintbox),c(oinkpaintbox),c(swanpaintboxsample),c(facepaintboxsample)];let t=0;for(const i of e){const e=a+t;u.rawChipWaves[e].samples=i,u.rawRawChipWaves[e].samples=i,u.chipWaves[e].samples=f(i),n.statusTable[e]=1,n.samplesLoaded++,r.dispatchEvent(new s(n.totalSamples,n.samplesLoaded)),t++}}))}else console.log("invalid set of built-in samples")}class u{}function c(e){let t=0;for(let i=0;i<e.length;i++)t+=e[i];const i=t/e.length;for(let t=0;t<e.length;t++)e[t]-=i;return f(e),e.push(0),new Float32Array(e)}function h(e){let t=0;c(e);for(let i=0;i<e.length-1;i++)t+=Math.abs(e[i]);const i=t/(e.length-1);for(let t=0;t<e.length-1;t++)e[t]=e[t]/i;return new Float32Array(e)}function f(e){let t=0,i=new Float32Array(e.length);for(let n=0;n<e.length;n++)i[n]=t,t+=e[n];return i}function d(e){return e/(2*u.pulseWidthRange)}function m(e,t,i){let n=u.chipNoises[e].samples;if(null==n){if(n=new Float32Array(u.chipNoiseLength+1),u.chipNoises[e].samples=n,0==e){let e=1;for(let t=0;t<u.chipNoiseLength;t++){n[t]=2*(1&e)-1;let i=e>>1;1==(e+i&1)&&(i+=16384),e=i}}else if(1==e)for(let e=0;e<u.chipNoiseLength;e++)n[e]=2*Math.random()-1;else if(2==e){let e=1;for(let t=0;t<u.chipNoiseLength;t++){n[t]=2*(1&e)-1;let i=e>>1;1==(e+i&1)&&(i+=32768),e=i}}else if(3==e){let e=1;for(let t=0;t<u.chipNoiseLength;t++){n[t]=2*(1&e)-1;let i=e>>1;1==(e+i&1)&&(i+=40),e=i}}else if(4==e)y(n,u.chipNoiseLength,10,11,1,1,0),y(n,u.chipNoiseLength,11,14,.6578,.6578,0),t(n,u.chipNoiseLength),i(n,1/Math.sqrt(u.chipNoiseLength));else if(5==e)for(var s=1,a=0;a<u.chipNoiseLength;a++){n[a]=2*(1&s)-1,1==(s+(r=s>>1)&1)&&(r+=40),s=r}else if(6==e)y(n,u.chipNoiseLength,1,10,1,1,0),y(n,u.chipNoiseLength,20,14,-2,-2,0),t(n,u.chipNoiseLength),i(n,1/Math.sqrt(u.chipNoiseLength));else if(7==e)for(s=1,a=0;a<u.chipNoiseLength;a++){n[a]=4*(1&s)*(14*Math.random()+1)-8,1==(s+(r=s>>1)&1)&&(r+=60),s=r}else if(8==e)for(s=1,a=0;a<u.chipNoiseLength;a++){n[a]=(1&s)/2-.5,1==(s+(r=s>>1)&1)&&(r-=40),s=r}else if(9==e){let e=1;for(let t=0;t<u.chipNoiseLength;t++){n[t]=2*(1&e)-1.1;let i=e>>1;1==(e+i&1)&&(i+=131080),e=i}}else if(10==e)for(let e=0;e<u.chipNoiseLength;e++)n[e]=Math.round(Math.random());else if(11==e)for(s=1,a=0;a<u.chipNoiseLength;a++){var r;n[a]=Math.round(1&s),1==(s+(r=s>>1)&1)&&(r-=40),s=r}else if(12==e)for(let e=0;e<u.chipNoiseLength;e++){var o=Math.random();n[e]=Math.pow(o,Math.clz32(o))}else if(13==e){var l,p,c,h,f=0,d=0,m=0;f=d=m=l=p=c=h=0;for(let e=0;e<u.chipNoiseLength;e++){f=.99886*f+.0555179*(g=2*Math.random()-1),d=.99332*d+.0750759*g,m=.969*m+.153852*g,l=.8665*l+.3104856*g,p=.55*p+.5329522*g,c=-.7616*c-.016898*g,n[e]=f+d+m+l+p+c+h+.5362*g,n[e]*=.44,h=.115926*g}}else{if(14!=e)throw new Error("Unrecognized drum index: "+e);var v=0;for(let e=0;e<u.chipNoiseLength;e++){var g=2*Math.random()-1;n[e]=(v+.02*g)/1.02,v=n[e],n[e]*=14}}n[u.chipNoiseLength]=n[0]}return n}function y(e,t,i,n,s,a,r){const o=0|Math.pow(2,i),l=Math.min(t>>1,0|Math.pow(2,n)),p=m(0,null,null);let u=0;for(let c=o;c<l;c++){let o=s+(a-s)*(Math.log2(c)-i)/(n-i),l=Math.pow(2,7*(o-1)+1)*o;l*=Math.pow(c/2048,r),u+=l,l*=p[c];const h=.61803398875*c*c*Math.PI*2;e[c]=Math.cos(h)*l,e[t-c]=Math.sin(h)*l}return u}function v(e=0){const t=new Float32Array(u.sineWaveLength+1),i=u.sineWaveLength/4;for(let n=0;n<u.sineWaveLength+1;n++)t[n]=2*+(Math.abs(n-i)<e*u.sineWaveLength/2||Math.abs(n-u.sineWaveLength-i)<e*u.sineWaveLength/2)-1;return t}function g(e=!1){const t=new Float32Array(u.sineWaveLength+1);for(let i=0;i<u.sineWaveLength+1;i++)t[i]=2*(i+u.sineWaveLength/4)/u.sineWaveLength%2-1,t[i]=e?-t[i]:t[i];return t}function b(e,t,i){let n=u.arpeggioPatterns[e-1];return null!=n?(2==e&&0==t&&(n=[0,0,1,1]),n[i%n.length]):i%e}function S(e){const t={};for(let i=0;i<e.length;i++){const n=e[i];n.index=i,t[n.name]=n}const i=e;return i.dictionary=t,i}function w(e){return 0!=(1024&e)}function k(e){return 0!=(2048&e)}function q(e){return 0!=(128&e)}function F(e){return 0!=(256&e)}function T(e){return 0!=(512&e)}function M(e){return 0!=(32&e)}function z(e){return 0!=(8&e)}function P(e){return 0!=(16&e)}function x(e){return 0!=(4&e)}function H(e){return 0!=(2&e)}function G(e){return 0!=(64&e)}function I(e){return 0!=(1&e)}u.thresholdVal=-10,u.kneeVal=40,u.ratioVal=12,u.attackVal=0,u.releaseVal=.25,u.willReloadForCustomSamples=!1,u.jsonFormat="Unbox",u.scales=S([{name:"Free",realName:"chromatic",flags:[!0,!0,!0,!0,!0,!0,!0,!0,!0,!0,!0,!0]},{name:"Major",realName:"ionian",flags:[!0,!1,!0,!1,!0,!0,!1,!0,!1,!0,!1,!0]},{name:"Minor",realName:"aeolian",flags:[!0,!1,!0,!0,!1,!0,!1,!0,!0,!1,!0,!1]},{name:"Mixolydian",realName:"mixolydian",flags:[!0,!1,!0,!1,!0,!0,!1,!0,!1,!0,!0,!1]},{name:"Lydian",realName:"lydian",flags:[!0,!1,!0,!1,!0,!1,!0,!0,!1,!0,!1,!0]},{name:"Dorian",realName:"dorian",flags:[!0,!1,!0,!0,!1,!0,!1,!0,!1,!0,!0,!1]},{name:"Phrygian",realName:"phrygian",flags:[!0,!0,!1,!0,!1,!0,!1,!0,!0,!1,!0,!1]},{name:"Locrian",realName:"locrian",flags:[!0,!0,!1,!0,!1,!0,!0,!1,!0,!1,!0,!1]},{name:"Lydian Dominant",realName:"lydian dominant",flags:[!0,!1,!0,!1,!0,!1,!0,!0,!1,!0,!0,!1]},{name:"Phrygian Dominant",realName:"phrygian dominant",flags:[!0,!0,!1,!1,!0,!0,!1,!0,!0,!1,!0,!1]},{name:"Harmonic Major",realName:"harmonic major",flags:[!0,!1,!0,!1,!0,!0,!1,!0,!0,!1,!1,!0]},{name:"Harmonic Minor",realName:"harmonic minor",flags:[!0,!1,!0,!0,!1,!0,!1,!0,!0,!1,!1,!0]},{name:"Melodic Minor",realName:"melodic minor",flags:[!0,!1,!0,!0,!1,!0,!1,!0,!1,!0,!1,!0]},{name:"Blues Major",realName:"blues major",flags:[!0,!1,!0,!0,!0,!1,!1,!0,!1,!0,!1,!1]},{name:"Blues",realName:"blues",flags:[!0,!1,!1,!0,!1,!0,!0,!0,!1,!1,!0,!1]},{name:"Altered",realName:"altered",flags:[!0,!0,!1,!0,!0,!1,!0,!1,!0,!1,!0,!1]},{name:"Major Pentatonic",realName:"major pentatonic",flags:[!0,!1,!0,!1,!0,!1,!1,!0,!1,!0,!1,!1]},{name:"Minor Pentatonic",realName:"minor pentatonic",flags:[!0,!1,!1,!0,!1,!0,!1,!0,!1,!1,!0,!1]},{name:"Whole Tone",realName:"whole tone",flags:[!0,!1,!0,!1,!0,!1,!0,!1,!0,!1,!0,!1]},{name:"Octatonic",realName:"octatonic",flags:[!0,!1,!0,!0,!1,!0,!0,!1,!0,!0,!1,!0]},{name:"Hexatonic",realName:"hexatonic",flags:[!0,!1,!1,!0,!0,!1,!1,!0,!0,!1,!1,!0]},{name:"No Dabbing (MB)",realName:"no dabbing",flags:[!0,!0,!1,!0,!0,!0,!0,!0,!0,!1,!0,!1]},{name:"Jacked Toad (TB)",realName:"jacked toad",flags:[!0,!1,!0,!0,!1,!0,!0,!0,!0,!1,!0,!0]},{name:"Test Scale (TB)",realName:"**t",flags:[!0,!0,!1,!1,!1,!0,!0,!1,!1,!0,!0,!1]},{name:"Custom",realName:"custom",flags:[!0,!1,!0,!0,!1,!1,!1,!0,!0,!1,!0,!0]}]),u.keys=S([{name:"C",isWhiteKey:!0,basePitch:12},{name:"C♯",isWhiteKey:!1,basePitch:13},{name:"D",isWhiteKey:!0,basePitch:14},{name:"D♯",isWhiteKey:!1,basePitch:15},{name:"E",isWhiteKey:!0,basePitch:16},{name:"F",isWhiteKey:!0,basePitch:17},{name:"F♯",isWhiteKey:!1,basePitch:18},{name:"G",isWhiteKey:!0,basePitch:19},{name:"G♯",isWhiteKey:!1,basePitch:20},{name:"A",isWhiteKey:!0,basePitch:21},{name:"A♯",isWhiteKey:!1,basePitch:22},{name:"B",isWhiteKey:!0,basePitch:23}]),u.blackKeyNameParents=[-1,1,-1,1,-1,1,-1,-1,1,-1,1,-1],u.tempoMin=1,u.tempoMax=1e3,u.octaveMin=-2,u.octaveMax=2,u.echoDelayRange=24,u.echoDelayStepTicks=4,u.echoSustainRange=8,u.echoShelfHz=4e3,u.echoShelfGain=Math.pow(2,-.5),u.reverbShelfHz=8e3,u.reverbShelfGain=Math.pow(2,-1.5),u.reverbRange=32,u.reverbDelayBufferSize=16384,u.reverbDelayBufferMask=u.reverbDelayBufferSize-1,u.beatsPerBarMin=1,u.beatsPerBarMax=64,u.barCountMin=1,u.barCountMax=1024,u.instrumentCountMin=1,u.layeredInstrumentCountMax=10,u.patternInstrumentCountMax=10,u.partsPerBeat=24,u.ticksPerPart=2,u.ticksPerArpeggio=3,u.arpeggioPatterns=[[0],[0,1],[0,1,2,1],[0,1,2,3],[0,1,2,3,4],[0,1,2,3,4,5],[0,1,2,3,4,5,6],[0,1,2,3,4,5,6,7]],u.rhythms=S([{name:"x4",stepsPerBeat:.25,roundUpThresholds:[3]},{name:"x2",stepsPerBeat:.5,roundUpThresholds:[3]},{name:"x1.3",stepsPerBeat:.75,roundUpThresholds:[3]},{name:"x1",stepsPerBeat:1,roundUpThresholds:[3]},{name:"÷1.3",stepsPerBeat:1.5,roundUpThresholds:[3]},{name:"÷2",stepsPerBeat:2,roundUpThresholds:[3,9]},{name:"÷3 (Triplets)",stepsPerBeat:3,roundUpThresholds:[5,12,18]},{name:"÷4 (Standard)",stepsPerBeat:4,roundUpThresholds:[3,9,17,21]},{name:"÷6",stepsPerBeat:6,roundUpThresholds:null},{name:"÷8",stepsPerBeat:8,roundUpThresholds:null},{name:"÷12",stepsPerBeat:12,roundUpThresholds:null},{name:"Freehand",stepsPerBeat:24,roundUpThresholds:null}]),u.instrumentTypeNames=["chip","FM","noise","spectrum","drumset","harmonics","PWM","duty cycle","Picked String","supersaw","custom chip","mod","FM6op"],u.instrumentTypeHasSpecialInterval=[!0,!0,!1,!1,!1,!0,!1,!1,!1,!1,!1],u.chipBaseExpression=.03375,u.fmBaseExpression=.03,u.noiseBaseExpression=.19,u.spectrumBaseExpression=.3,u.drumsetBaseExpression=.45,u.harmonicsBaseExpression=.025,u.pwmBaseExpression=.04725,u.supersawBaseExpression=.061425,u.pickedStringBaseExpression=.025,u.distortionBaseVolume=.011,u.bitcrusherBaseVolume=.01,u.rawChipWaves=S([{name:"rounded",expression:.94,samples:c([0,.2,.4,.5,.6,.7,.8,.85,.9,.95,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,.95,.9,.85,.8,.7,.6,.5,.4,.2,0,-.2,-.4,-.5,-.6,-.7,-.8,-.85,-.9,-.95,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-.95,-.9,-.85,-.8,-.7,-.6,-.5,-.4,-.2])},{name:"triangle",expression:1,samples:c([1/15,.2,5/15,7/15,.6,11/15,13/15,1,1,13/15,11/15,.6,7/15,5/15,.2,1/15,-1/15,-.2,-5/15,-7/15,-.6,-11/15,-13/15,-1,-1,-13/15,-11/15,-.6,-7/15,-5/15,-.2,-1/15])},{name:"square",expression:.5,samples:c([1,-1])},{name:"1/4 pulse",expression:.5,samples:c([1,-1,-1,-1])},{name:"1/8 pulse",expression:.5,samples:c([1,-1,-1,-1,-1,-1,-1,-1])},{name:"sawtooth",expression:.65,samples:c([1/31,3/31,5/31,7/31,9/31,11/31,13/31,15/31,17/31,19/31,21/31,23/31,25/31,27/31,29/31,1,-1,-29/31,-27/31,-25/31,-23/31,-21/31,-19/31,-17/31,-15/31,-13/31,-11/31,-9/31,-7/31,-5/31,-3/31,-1/31])},{name:"double saw",expression:.5,samples:c([0,-.2,-.4,-.6,-.8,-1,1,-.8,-.6,-.4,-.2,1,.8,.6,.4,.2])},{name:"double pulse",expression:.4,samples:c([1,1,1,1,1,-1,-1,-1,1,1,1,1,-1,-1,-1,-1])},{name:"spiky",expression:.4,samples:c([1,-1,1,-1,1,0])},{name:"sine",expression:.88,samples:h([8,9,11,12,13,14,15,15,15,15,14,14,13,11,10,9,7,6,4,3,2,1,0,0,0,0,1,1,2,4,5,6])},{name:"flute",expression:.8,samples:h([3,4,6,8,10,11,13,14,15,15,14,13,11,8,5,3])},{name:"harp",expression:.8,samples:h([0,3,3,3,4,5,5,6,7,8,9,11,11,13,13,15,15,14,12,11,10,9,8,7,7,5,4,3,2,1,0,0])},{name:"sharp clarinet",expression:.38,samples:h([0,0,0,1,1,8,8,9,9,9,8,8,8,8,8,9,9,7,9,9,10,4,0,0,0,0,0,0,0,0,0,0])},{name:"soft clarinet",expression:.45,samples:h([0,1,5,8,9,9,9,9,9,9,9,11,11,12,13,12,10,9,7,6,4,3,3,3,1,1,1,1,1,1,1,1])},{name:"alto sax",expression:.3,samples:h([5,5,6,4,3,6,8,7,2,1,5,6,5,4,5,7,9,11,13,14,14,14,14,13,10,8,7,7,4,3,4,2])},{name:"bassoon",expression:.35,samples:h([9,9,7,6,5,4,4,4,4,5,7,8,9,10,11,13,13,11,10,9,7,6,4,2,1,1,1,2,2,5,11,14])},{name:"trumpet",expression:.22,samples:h([10,11,8,6,5,5,5,6,7,7,7,7,6,6,7,7,7,7,7,6,6,6,6,6,6,6,6,7,8,9,11,14])},{name:"electric guitar",expression:.2,samples:h([11,12,12,10,6,6,8,0,2,4,8,10,9,10,1,7,11,3,6,6,8,13,14,2,0,12,8,4,13,11,10,13])},{name:"organ",expression:.2,samples:h([11,10,12,11,14,7,5,5,12,10,10,9,12,6,4,5,13,12,12,10,12,5,2,2,8,6,6,5,8,3,2,1])},{name:"pan flute",expression:.35,samples:h([1,4,7,6,7,9,7,7,11,12,13,15,13,11,11,12,13,10,7,5,3,6,10,7,3,3,1,0,1,0,1,0])},{name:"glitch",expression:.5,samples:c},{name:"trapezoid",expression:1,samples:c([1/15,.4,10/15,14/15,1,1,1,1,1,1,1,1,14/15,10/15,.4,1/15,-1/15,-.4,-10/15,-14/15,-1,-1,-1,-1,-1,-1,-1,-1,-14/15,-10/15,-.4,-1/15])},{name:"modbox 10% pulse",expression:.5,samples:h([1,-1,-1,-1,-1,-1,-1,-1,-1,-1])},{name:"modbox sunsoft bass",expression:1,samples:h([0,.1875,.3125,.5625,.5,.75,.875,1,1,.6875,.5,.625,.625,.5,.375,.5625,.4375,.5625,.4375,.4375,.3125,.1875,.1875,.375,.5625,.5625,.5625,.5625,.5625,.4375,.25,0])},{name:"modbox loud pulse",expression:.5,samples:h([1,.7,.1,.1,0,0,0,0,0,.1,.2,.15,.25,.125,.215,.345,4])},{name:"modbox sax",expression:.5,samples:h([1/15,.2,5/15,9,.06])},{name:"modbox guitar",expression:.5,samples:h([-.5,3.5,3,-.5,-.25,-1])},{name:"modbox sine",expression:.5,samples:h([0,.05,.125,.2,.25,.3,.425,.475,.525,.625,.675,.725,.775,.8,.825,.875,.9,.925,.95,.975,.98,.99,.995,1,.995,.99,.98,.975,.95,.925,.9,.875,.825,.8,.775,.725,.675,.625,.525,.475,.425,.3,.25,.2,.125,.05,0,-.05,-.125,-.2,-.25,-.3,-.425,-.475,-.525,-.625,-.675,-.725,-.775,-.8,-.825,-.875,-.9,-.925,-.95,-.975,-.98,-.99,-.995,-1,-.995,-.99,-.98,-.975,-.95,-.925,-.9,-.875,-.825,-.8,-.775,-.725,-.675,-.625,-.525,-.475,-.425,-.3,-.25,-.2,-.125,-.05])},{name:"modbox atari bass",expression:.5,samples:h([1,1,1,1,0,1,0,1,1,0,0,1,0,0,0])},{name:"modbox atari pulse",expression:.5,samples:h([1,0,1,1,1,1,1,1,1,1,1,1,1,1,1])},{name:"modbox 1% pulse",expression:.5,samples:h([1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1])},{name:"modbox curved sawtooth",expression:.5,samples:h([1,.5,1/3,1/4])},{name:"modbox viola",expression:.45,samples:h([-.9,-1,-.85,-.775,-.7,-.6,-.5,-.4,-.325,-.225,-.2,-.125,-.1,-.11,-.125,-.15,-.175,-.18,-.2,-.21,-.22,-.21,-.2,-.175,-.15,-.1,-.5,.75,.11,.175,.2,.25,.26,.275,.26,.25,.225,.2,.19,.18,.19,.2,.21,.22,.23,.24,.25,.26,.275,.28,.29,.3,.29,.28,.27,.26,.25,.225,.2,.175,.15,.1,.075,0,-.01,-.025,.025,.075,.2,.3,.475,.6,.75,.85,.85,1,.99,.95,.8,.675,.475,.275,.01,-.15,-.3,-.475,-.5,-.6,-.71,-.81,-.9,-1,-.9])},{name:"modbox brass",expression:.45,samples:h([-1,-.95,-.975,-.9,-.85,-.8,-.775,-.65,-.6,-.5,-.475,-.35,-.275,-.2,-.125,-.05,0,.075,.125,.15,.2,.21,.225,.25,.225,.21,.2,.19,.175,.125,.1,.075,.06,.05,.04,.025,.04,.05,.1,.15,.225,.325,.425,.575,.7,.85,.95,1,.9,.675,.375,.2,.275,.4,.5,.55,.6,.625,.65,.65,.65,.65,.64,.6,.55,.5,.4,.325,.25,.15,.05,-.05,-.15,-.275,-.35,-.45,-.55,-.65,-.7,-.78,-.825,-.9,-.925,-.95,-.975])},{name:"modbox acoustic bass",expression:.5,samples:h([1,0,.1,-.1,-.2,-.4,-.3,-1])},{name:"modbox lyre",expression:.45,samples:h([1,-1,4,2.15,4.13,5.15,0,-.05,1])},{name:"modbox ramp pulse",expression:.5,samples:h([6.1,-2.9,1.4,-2.9])},{name:"modbox piccolo",expression:.5,samples:h([1,4,2,1,-.1,-1,-.12])},{name:"modbox squaretooth",expression:.5,samples:h([.2,1,2.6,1,0,-2.4])},{name:"modbox flatline",expression:1,samples:h([1,.9,.8,.7,.6,.5,.4,.3,.2,.1,0,.1,.2,.3,.4,.5,.6,.7,.8,.9])},{name:"modbox pnryshk a (u5)",expression:.4,samples:h([1,.9,.8,.7,.6,.5,.4,.3,.2,.1,0])},{name:"modbox pnryshk b (riff)",expression:.5,samples:h([1,-.9,.8,-.7,.6,-.5,.4,-.3,.2,-.1,0,-.1,.2,-.3,.4,-.5,.6,-.7,.8,-.9,1])},{name:"sandbox shrill lute",expression:.94,samples:h([1,1.5,1.25,1.2,1.3,1.5])},{name:"sandbox bassoon",expression:.5,samples:h([1,-1,1,1,1,1,1,1,1,1,1,1,0])},{name:"sandbox shrill bass",expression:.5,samples:h([0,1,0,0,1,0,1,0,0,0])},{name:"sandbox nes pulse",expression:.4,samples:h([2.1,-2.2,1.2,3])},{name:"sandbox saw bass",expression:.25,samples:h([1,1,1,1,0,2,1,2,3,1,-2,1,4,1,4,2,1,6,-3,4,2,1,5,1,4,1,5,6,7,1,6,1,4,1,9])},{name:"sandbox euphonium",expression:.3,samples:h([0,1,2,1,2,1,4,2,5,0,-2,1,5,1,2,1,2,4,5,1,5,-2,5,10,1])},{name:"sandbox shrill pulse",expression:.3,samples:h([2,0,4,1,4,6,7,3])},{name:"sandbox r-sawtooth",expression:.2,samples:h([6.1,-2.9,1.4,-2.9])},{name:"sandbox recorder",expression:.2,samples:h([5,-5.1,4,-4.1,3,-3.1,2,-2.1,1,-1.1,6])},{name:"sandbox narrow saw",expression:1.2,samples:h([.1,-1.3,.13/-.3,-.26,.13/-.7,.13/-.9,.13/-.11,.13/-.31,.13/-.51,.13/-.71,.13/-.91,.13/-.12,-.40625,-.25,.13/-.72,.13/-.92,-1,1,.13/.92,.13/.72,.25,.40625,.13/.12,.13/.91,.13/.71,.13/.51,.13/.31,.13/.11,.13/.9,.13/.7,.26,.13/.3,.13])},{name:"sandbox deep square",expression:1,samples:h([1,2.25,1,-1,-2.25,-1])},{name:"sandbox ring pulse",expression:1,samples:h([1,-1,-1,-1,-1,-1,-1,-1,1,-1,-1,-1,-1,-1,-1,-1,1,-1,-1,-1,-1,-1,-1,-1,1,-1,-1,-1,-1,-1,-1,-1,1,-1,-1,-1,-1,-1,-1,-1,1,-1,-1,-1,-1,-1,-1,-1,1,-1,-1,-1,-1,-1,-1,-1,1,-1,-1,-1,-1,-1,-1,-1,1,-1,-1,-1,-1,-1,-1,-1])},{name:"sandbox double sine",expression:1,samples:h([1,1.1,1.2,1.3,1.4,1.5,1.6,1.7,1.8,1.9,1.8,1.7,1.6,1.5,1.4,1.3,1.2,1.1,1,0,-1,-1.1,-1.2,-1.3,-1.4,-1.5,-1.6,-1.7,-1.8,-1.9,-1.8,-1.7,-1.6,-1.5,-1.4,-1.3,-1.2,-1.1,-1])},{name:"sandbox contrabass",expression:.5,samples:h([4.2,6.9,1.337,6.66])},{name:"sandbox double bass",expression:.4,samples:h([0,.1875,.3125,.5625,.5,.75,.875,1,-1,-.6875,-.5,-.625,-.625,-.5,-.375,-.5625,-.4375,-.5625,-.4375,-.4375,-.3125,-.1875,.1875,.375,.5625,-.5625,.5625,.5625,.5625,.4375,.25,0])},{name:"haileybox test1",expression:.5,samples:h([1,.5,-1])},{name:"brucebox pokey 4bit lfsr",expression:.5,samples:h([1,-1,-1,-1,1,1,1,1,-1,1,-1,1,1,-1,-1])},{name:"brucebox pokey 5step bass",expression:.5,samples:h([1,-1,1,-1,1])},{name:"brucebox isolated spiky",expression:.5,samples:h([1,-1,1,-1,1,-1])},{name:"nerdbox unnamed 1",expression:.5,samples:h([.2,4,.7,-.4,-1,.5,-.5/.6])},{name:"nerdbox unnamed 2",expression:.5,samples:h([2,5/55,-9,1,-55,18.5/-26])},{name:"zefbox semi-square",expression:1,samples:h([1,1.5,2,2.5,2.5,2.5,2,1.5,1])},{name:"zefbox deep square",expression:1,samples:h([1,2.25,1,-1,-2.25,-1])},{name:"zefbox squaretal",expression:.7,samples:h([1.5,1,1.5,-1.5,-1,-1.5])},{name:"zefbox saw wide",expression:.65,samples:h([0,-.4,-.8,-1.2,-1.6,-2,0,-.4,-.8,-1.2,-1.6])},{name:"zefbox saw narrow",expression:.65,samples:h([1,.5,1,.5,1,.5,1,2,1,2,1])},{name:"zefbox deep sawtooth",expression:.5,samples:h([0,2,3,4,4.5,5,5.5,6,6.25,6.5,6.75,7,6.75,6.5,6.25,6,5.5,5,4.5,4,3,2,1])},{name:"zefbox sawtal",expression:.3,samples:h([1.5,1,1.25,-.5,1.5,-.5,0,-1.5,1.5,0,.5,-1.5,.5,1.25,-1,-1.5])},{name:"zefbox deep sawtal",expression:.7,samples:h([.75,.25,.5,-.5,.5,-.5,-.25,-.75])},{name:"zefbox pulse",expression:.5,samples:h([1,-2,-2,-1.5,-1.5,-1.25,-1.25,-1,-1])},{name:"zefbox triple pulse",expression:.4,samples:h([1,1,1,1,1,-1,-1,1.5,1,1,1,1,-1,-1,-1,1.5])},{name:"zefbox high pulse",expression:.2,samples:h([1,-2,2,-3,3,-4,5,-4,3,-3,2,-2,1])},{name:"zefbox deep pulse",expression:.2,samples:h([1,2,2,-2,-2,-3,-4,-4,-5,-5,-5,-5,0,-1,-2])},{name:"wackybox guitar string",expression:.6,samples:h([0,63,63,63,63,19,63,63,63,63,63,63,63,63,63,63,11,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,27,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,34,63,63,63,63])},{name:"wackybox intense",expression:.6,samples:h([36,25,33,35,18,51,22,40,27,37,31,33,25,29,41,23,31,31,45,20,37,23,29,26,42,29,33,26,31,27,40,25,40,26,37,24,41,32,0,32,33,29,32,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31])},{name:"wackybox buzz wave",expression:.6,samples:h([0,1,1,2,4,4,4,4,5,5,6,6,6,7,8,8,8,9,9,9,9,9,9,8,8,8,11,15,23,62,61,60,58,56,56,54,53,52,50,49,48,47,47,45,45,45,44,44,43,43,42,42,42,42,42,42,42,42,42,42,42,43,43,53])},{name:"todbox 1/3 pulse",expression:.5,samples:c([1,-1,-1])},{name:"todbox 1/5 pulse",expression:.5,samples:c([1,-1,-1,-1,-1])},{name:"todbox slap bass",expression:.5,samples:h([1,.5,0,.5,1.25,.5,-.25,.1,-.1,.1,1.1,2.1,3,3.5,2.9,3.3,2.7,2.9,2.3,2,1.9,1.8,1,.7,.9,.8,.4,.1,0,.2,.4,.6,.5,.8])},{name:"todbox harsh wave",expression:.45,samples:h([1,-1,-1,-1,.5,.5,.5,.7,.39,1.3,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1])},{name:"todbox accordian",expression:.5,samples:h([0,1,1,2,2,1.5,1.5,.8,0,-2,-3.25,-4,-4.5,-5.5,-6,-5.75,-5.5,-5,-5,-5,-6,-6,-6,-5,-4,-3,-2,-1,.75,1,2,3,4,5,6,6.5,7.5,8,7.75,6,5.25,5,5,5,5,5,4.25,3.75,3.25,2.75,1.25,-.75,-2,-.75,1.25,1.25,2,2,2,2,1.5,-1,-2,-1,1.5,2,2.75,2.75,2.75,3,2.75,-1,-2,-2.5,-2,-1,-2.25,-2.75,-2,-3,-1.75,1,2,3.5,4,5.25,6,8,9.75,10,9.5,9,8.5,7.5,6.5,5.25,5,4.5,4,4,4,3.25,2.5,2,1,-.5,-2,-3.5,-4,-4,-4,-3.75,-3,-2,-1])},{name:"todbox beta banana wave",expression:.8,samples:h([0,.2,.4,.5,.6,.7,.8,.85,.9,.95,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,.95,.9,.85,.8,.7,.6,.5,.4,.2,0])},{name:"todbox beta test wave",expression:.5,samples:h([56,0,-52,16,3,3,2,-35,20,147,-53,0,0,5,-6])},{name:"todbox beta real snare",expression:1,samples:h([0,-.01208,-.02997,-.04382,-.06042,-.07529,-.09116,-.10654,-.12189,-.13751,-.15289,-.16849,-.18387,-.19974,-.21484,-.23071,-.24557,-.26144,-.27731,-.29141,-.3035,-.32416,-.34406,-.32947,-.31158,-.33725,-.37579,-.39746,-.40201,-.40906,-.4418,-.47229,-.47379,-.47733,-.45239,-.33954,-.22894,-.22443,-.32138,-.46371,-.57178,-.61081,-.59998,-.61459,-.62189,-.43979,-.19217,-.12643,-.17252,-.20956,-.20981,-.19217,-.22845,-.34332,-.50629,-.64307,-.72922,-.81384,-.87857,-.90149,-.88687,-.86169,-.87781,-.80478,-.52493,-.31308,-.33249,-.39395,-.39017,-.30301,-.19949,-.13071,-.02493,.14307,.34961,.52542,.63223,.68613,.7471,.87305,.98184,.98889,.97052,.99066,.99747,.99344,.99469,.99393,.9957,.99393,.99521,.99469,.9942,.99521,.9942,.99521,.99469,.99469,.99521,.9942,.99545,.99445,.99469,.99493,.9942,.99521,.99393,.99493,.99469,.99445,.9957,.99445,.99521,.99469,.99469,.99521,.9942,.99545,.99445,.99445,.99493,.9942,.99545,.9942,.99493,.99493,.9942,.99545,.99445,.99521,.99469,.99445,.99545,.99368,.99393,.99445,.99268,.97983,.97229,.95944,.88486,.76773,.64481,.53098,.39847,.19318,-.03827,-.20325,-.39319,-.68765,-.88461,-.93448,-.96069,-.97681,-.98715,-.99042,-.99142,-.99091,-.99142,-.99219,-.99091,-.99219,-.99066,-.99142,-.99142,-.99118,-.99191,-.99066,-.99191,-.99142,-.99142,-.99191,-.99091,-.99219,-.99118,-.99142,-.99167,-.99091,-.99219,-.99091,-.99167,-.99142,-.99091,-.99191,-.99091,-.99191,-.99142,-.99118,-.99191,-.99066,-.99191,-.99118,-.99142,-.99191,-.99066,-.99191,-.99091,-.99167,-.99191,-.99118,-.99219,-.99091,-.99191,-.99142,-.99142,-.99243,-.98865,-.98764,-.99219,-.98083,-.92517,-.9277,-.91486,-.59042,-.15189,.02945,.05667,.06195,.00629,-.18008,-.56497,-.8801,-.9277,-.92871,-.97705,-.99167,-.98663,-.99118,-.99042,-.99219,-.99142,-.99118,-.98941,-.99219,-1,-.9758,-.95993,-.99948,-.98236,-.84659,-.7486,-.70679,-.59747,-.48035,-.41687,-.36826,-.29745,-.18185,-.06219,.02164,.07907,.13123,.18033,.1962,.15692,.14053,.20251,.2753,.30905,.29092,.27252,.30402,.32416,.32214,.35239,.3967,.43198,.4942,.58487,.64154,.65967,.6705,.67026,.66522,.6554,.66119,.70627,.75842,.78738,.7894,.78763,.80402,.85944,.94559,.9899,.9816,.98007,.99368,.99393,.98538,.9758,.97101,.93802,.81812,.64633,.46649,.28613,.14685,.08966,.12543,.20325,.24557,.18866,.02795,-.20175,-.44205,-.58713,-.57629,-.41385,-.14255,.18033,.47882,.68311,.72314,.62064,.48309,.43073,.53577,.72794,.9025,.97354,.97,.98083,.99191,.99319,.99493,.99393,.99521,.99393,.99545,.9942,.99493,.99493,.99445,.99545,.9942,.99545,.99243,.98917,.98386,.97781,.95844,.89066,.81561,.78134,.77277,.75995,.73022,.67126,.57178,.47,.38361,.29419,.20703,.14734,.15866,.25162,.35818,.45062,.5675,.69748,.81232,.89697,.95062,.97656,.98615,.99191,.99219,.99243,.99368,.99368,.97028,.95566,.94559,.82617,.59973,.38361,.23901,.15338,.12921,.11206,.04382,-.12946,-.43552,-.72644,-.89847,-.95465,-.95541,-.97229,-.99268,-.99319,-.9884,-.99142,-.99167,-.99091,-.9884,-.98965,-.99368,-.97455,-.9501,-.94684,-.96219,-.98514,-.99243,-.98889,-.98917,-.99142,-.99219,-.99091,-.99191,-.99142,-.99142,-.99191,-.99066,-.99167,-.99091,-.99142,-.99191,-.99091,-.99191,-.99091,-.99167,-.99167,-.99091,-.99219,-.99091,-.99191,-.99142,-.99118,-.99191,-.99066,-.99191,-.99091,-.99118,-.99243,-.98941,-.98462,-.96976,-.9632,-.96194,-.87305,-.66196,-.44809,-.29495,-.18085,-.11813,-.11334,-.18564,-.34885,-.58237,-.8045,-.93726,-.97806,-.97354,-.97531,-.9899,-.99368,-.98941,-.99219,-.99091,-.99142,-.99167,-.99091,-.99191,-.99118,-.99219,-.98236,-.97781,-.97656,-.95135,-.87204,-.71335,-.52139,-.34232,-.17783,-.00906,.14886,.3045,.48889,.67404,.8403,.94128,.97681,.98462,.98337,.99142,.99521,.99493,.9942,.99445,.99521,.99393,.99545,.99445,.99521,.99521,.99445,.9957,.99445,.99521,.99469,.99445,.99521,.9942,.99521,.99445,.99445,.99521,.99445,.99545,.99445,.99469,.99493,.99393,.99493,.99445,.99393,.98285,.97781,.97479,.92844,.82114,.66095,.52417,.46826,.46722,.47934,.47379,.47076,.48209,.42014,.25439,.10074,-.00302,-.08966,-.16068,-.21436,-.2204,-.15137,-.00476,.18536,.37631,.52292,.62164,.70425,.74835,.72366,.63928,.52567,.40805,.35666,.42896,.60175,.802,.92743,.96548,.97632,.98337,.99066,.99521,.9942,.99368,.99292,.9884,.98083,.96774,.93323,.8544,.6947,.47202,.20425,-.0889,-.36423,-.60025,-.77481,-.90173,-.96017,-.97028,-.98108,-.9884,-.99219,-.9899,-.99219,-.99142,-.99142,-.99219,-.99091,-.99243,-.99066,-.99142,-.99142,-.99118,-.99191,-.99066,-.99167,-.99142,-.99142,-.99219,-.99091,-.99191,-.99118,-.99142,-.99191,-.99091,-.99191,-.99091,-.99167,-.99191,-.99118,-.99219,-.99091,-.99167,-.99142,-.99142,-.99219,-.99091,-.99191,-.99142,-.99118,-.98917,-.99042,-.99445,-.9733,-.9559,-.96219,-.8967,-.72241,-.55112,-.44809,-.39319,-.37833,-.35641,-.2627,-.1423,-.11282,-.13525,-.11536,-.09671,-.11511,-.1806,-.26874,-.33374,-.42215,-.51358,-.44785,-.3045,-.28613,-.30527,-.25037,-.1539,-.08286,-.11157,-.12592,-.00327,.13803,.19141,.1282,.01788,-.03952,-.12592,-.26773,-.34634,-.31384,-.1806,-.0108,.13574,.2612,.36975,.46573,.55087,.63626,.73022,.83072,.92014,.97177,.98587,.98413,.99167,.99445,.99292,.99219,.9874,.98007,.96472,.92239,.82166,.69067,.57959,.54962,.59695,.64255,.64633,.60629,.55942,.5491,.58966,.61887,.56952,.54181,.59518,.63248,.63876,.65463,.73398,.88312,.96927,.97101,.97958,.99344,.9942,.99268,.99493,.99469,.99445,.99521,.99445,.99545,.9942,.99493,.99493,.9942,.99545,.9942,.99493,.9942,.99393,.9942,.9884,.98309,.98309,.96069,.88461,.7937,.72064,.65765,.59998,.53247,.49268,.48615,.44205,.38034,.36447,.38715,.39294,.32645,.19595,.07782,-.05893,-.27832,-.48309,-.62619,-.72995,-.79999,-.84583,-.82166,-.73575,-.67227,-.65491,-.6496,-.66397,-.70175,-.72894,-.74658,-.76724,-.7952,-.82846,-.86523,-.90527,-.94382,-.89948,-.69849,-.47479,-.31662,-.15414,-.00729,.07077,.08237,.04431,-.02292,-.11761,-.24307,-.36926,-.45087,-.4617,-.4025,-.30679,-.17529,0,.14331,.24179,.36774,.49545,.56522,.57907,.56775,.53851,.51132,.48688,.41913,.26044,.00955,-.26297,-.46396,-.62341,-.82214,-.94684,-.96774,-.97531,-.98413,-.99017,-.9899,-.99219,-.99066,-.99142,-.99167,-.99118,-.99219,-.9899,-.99118,-.99368,-.99142,-.97757,-.97403,-.98007,-.9617,-.86826,-.67783,-.52719,-.48788,-.4549,-.43146,-.47681,-.54105,-.57983,-.60904,-.62317,-.59949,-.55566,-.52063,-.52115,-.55112,-.56244,-.58337,-.6554,-.73373,-.77228,-.74759,-.6889,-.64609,-.61887,-.5806,-.50351,-.40729,-.33929,-.3511,-.42944,-.47028,-.42267,-.32718,-.20224,-.0564,.04556,.10529,.1763,.26169,.33197,.32138,.23776,.20956,.23148,.20352,.23325,.39267,.52719,.58438,.62289,.66345,.70023,.66296,.5433,.42618,.33475,.24533,.14105,.03851,.01358,.09143,.22845,.34961,.41711,.4874,.58914,.69519,.78186,.84357,.89822,.95389,.98135,.98615,.99167,.99243,.99445,.9942,.99469,.99493,.99393,.99545,.99445,.99521,.99469,.99445,.99521,.9942,.99469,.98965,.98715,.98563,.96295,.91736,.86624,.82367,.77554,.68411,.53549,.38916,.2612,.11435,-.04053,-.18161,-.23172,-.19394,-.15237,-.1073,-.02997,.08588,.2262,.34305,.44104,.5574,.65765,.71259,.69217,.65363,.69748,.79572,.89368,.95514,.97733,.98413,.98816,.99243,.99445,.99243,.97302,.96674,.97983,.90378,.71005,.51056,.40451,.40982,.41559,.32996,.24356,.18866,.11411,.05365,.01157,-.03247,-.09216,-.16095,-.23248,-.31662,-.39771,-.48663,-.59647,-.71536,-.82013,-.85287,-.82947,-.84937,-.92215,-.97177,-.98663,-.98816,-.98438,-.99091,-.99219,-.99091,-.99191,-.99042,-.99191,-.99091,-.99142,-.99191,-.99091,-.99191,-.99091,-.99167,-.99142])},{name:"ultrabox shortened od guitar",expression:.5,samples:h([-.82785,-.67621,-.40268,-.43817,-.45468,-.22531,-.18329,.2475,.71246,.52155,.56082,.48395,.3399,.46957,.27744,.42313,.47104,.18796,.1293,-.13901,-.07431,-.16348,-.74857,-.73206,-.35181,-.26227,-.41882,-.27786,-.19806,-.19867,.18643,.24808,.08847,-.06964,.06912,.20474,-.05304,.29416,.31967,.14243,.27521,-.23932,-.14752,.1236,-.26123,-.26111,.06616,.2652,.0809,.1524,.16254,-.12061,.04562,.00131,.0405,.08182,-.21729,-.17041,-.16312,-.08563,.0639,.05099,.05627,.02728,.00726,-.13028,-.05673,-.14969,-.17645,.35492,.16766,-.00897,.24326,-.00461,-.04456,.01776,-.0495,-.01221,.02039,.07684,.13397,.3985,.35962,.13754,.4231,.27161,-.17609,.03659,.10635,-.21909,-.22046,-.20258,-.40973,-.4028,-.40521,-.66284])},{name:"7/16 pulse",expression:.5,samples:c([1,1,1,1,1,1,1,-1,-1,-1,-1,-1,-1,-1,-1,-1])},{name:"3/8 pulse",expression:.5,samples:c([1,1,1,-1,-1,-1,-1,-1])},{name:"5/16 pulse",expression:.5,samples:c([1,1,1,1,1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1])},{name:"3/16 pulse",expression:.5,samples:c([1,1,1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1])},{name:"1/16 pulse",expression:.5,samples:c([1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1])},{name:"VRC6 Sawtooth",expression:.65,samples:c([-1.5,-1,-.5,0,.5,1,1.5])},{name:"VRC6 Sawtooth HI",expression:.65,samples:c([-.6,-.1,-.9,-.3,.3,.9,1.5])},{name:"Soft Buzzer Hi",expression:1,samples:c([1,.648,.407,.287,.191,.139,.095,.069,.048,.036,.024,.018,.012,.008,.005,0,0,.005,.008,.012,.018,.024,.036,.048,.069,.095,.139,.191,.287,.407,.648,1])},{name:"Soft Buzzer Lo",expression:1,samples:c([0,.005,.008,.012,.018,.024,.036,.048,.069,.095,.139,.191,.287,.407,.648,1,1,.648,.407,.287,.191,.139,.095,.069,.048,.036,.024,.018,.012,.008,.005,0])},{name:"Hard Buzzer Hi",expression:1,samples:c([1,.648,.407,.287,.191,.139,.095,.069,.048,.036,.024,.018,.012,.008,.005,0])},{name:"Hard Buzzer Lo",expression:1,samples:c([0,.005,.008,.012,.018,.024,.036,.048,.069,.095,.139,.191,.287,.407,.648,1])},{name:"ST Timer Sine",expression:1,samples:c([.069,.139,.407,.648,1,.648,.407,.139,.069,.024,.008,.005,0,.005,.008,.024])},{name:"ST Timer Square",expression:1,samples:c([.069,.048,.036,.024,.018,.012,.008,.005,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,.005,.008,.012,.018,.024,.036,.048,.069,.095,.139,.191,.287,.407,.648,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,.648,.407,.287,.191,.139,.095])},{name:"ST Timer Buzzer 1",expression:.5,samples:c([0,.005,.008,.012,.018,.024,.036,.048,.069,.095,.139,.191,.287,.407,.648,1,1,.648,.407,.287,.191,.139,.095,.069,.048,.036,.024,.018,.012,.008,.005,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0])},{name:"ST Timer Buzzer 2",expression:.5,samples:c([1,.648,.407,.287,.191,.139,.095,.069,.048,.036,.024,.018,.012,.008,.005,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,.005,.008,.012,.018,.024,.036,.048,.069,.095,.139,.191,.287,.407,.648,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0])},{name:"ST Timer Buzzer 3",expression:.5,samples:c([0,.005,.008,.012,.018,.024,.036,.048,.069,.095,.139,.191,.287,.407,.648,1,1,.648,.407,.287,.191,.139,.095,.069,.048,.036,.024,.018,.012,.008,.005,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,.648,.407,.287,.191,.139,.095,.069,.048,.036,.024,.018,.012,.008,.005,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,.648,.407,.287,.191,.139,.095,.069,.048,.036,.024,.018,.012,.008,.005,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,.005,.008,.012,.018,.024,.036,.048,.069,.095,.139,.191,.287,.407,.648,1])},{name:"ST Timer Buzzer 4",expression:.5,samples:c([1,.648,.407,.287,.191,.139,.095,.069,.048,.036,.024,.018,.012,.008,.005,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,.005,.008,.012,.018,.024,.036,.048,.069,.095,.139,.191,.287,.407,.648,1,1,.648,.407,.287,.191,.139,.095,.069,.048,.036,.024,.018,.012,.008,.005,0])},{name:"Sharkfin",expression:1,samples:c([0,.005,.008,.012,.018,.024,.036,.048,.069,.095,.139,.191,.287,.407,.648,1,1,.933,.867,.8,.733,.667,.6,.533,.467,.4,.333,.267,.2,.133,.067,0])},{name:"M Tooth",expression:1,samples:c([0,.005,.008,.012,.018,.024,.036,.048,.069,.095,.139,.191,.287,.407,.648,1,1,.933,.933,.867,.867,.8,.8,.733,.733,.8,.8,.867,.867,.933,.933,1,1,.648,.407,.287,.191,.139,.095,.069,.048,.036,.024,.018,.012,.008,.005,0])},{name:"Great Tooth",expression:1,samples:c([0,.005,.008,.012,.018,.024,.036,.048,.069,.095,.139,.191,.287,.407,.648,1,1,.933,.867,.8,.8,.867,.933,1,1,.933,.867,.8,.8,.867,.933,1,1,.648,.407,.287,.191,.139,.095,.069,.048,.036,.024,.018,.012,.008,.005,0])},{name:"Lance Tooth",expression:1,samples:c([0,.005,.008,.012,.018,.024,.036,.048,.069,.095,.139,.191,.287,.407,.648,1,1,.933,.933,.867,.867,.8,.8,.6,.6,.8,.8,.867,.867,.933,.933,1,1,.648,.407,.287,.191,.139,.095,.069,.048,.036,.024,.018,.012,.008,.005,0,.8,.867,.933,1,1,.933,.867,0,0,.867,.933,1,1,.933,.867,0,0,.867,.933,1,1,.933,.867,0,0,.867,.933,1,1,.933,.867,.8])},{name:"Champ Tooth",expression:1,samples:c([0,.005,.008,.012,.018,.024,.036,.048,.069,.095,.139,.191,.287,.407,.648,1,1,.933,.933,.867,.867,.8,.8,.733,.733,.8,.8,.867,.867,.933,.933,1,1,.648,.407,.287,.191,.139,.095,.069,.048,.036,.024,.018,.012,.008,.005,0,0,.005,.008,.012,.018,.024,.036,.048,.533,.6,.667,.733,.8,.867,.933,1,1,.648,.407,.287,.191,.139,.095,.069,.069,.095,.139,.191,.287,.407,.648,1,1,.933,.867,.8,.733,.667,.6,.533,.048,.036,.024,.018,.012,.008,.005,0])},{name:"Skip Tooth",expression:1,samples:c([1,.648,.407,.287,.191,.139,.095,.069,.048,.036,.024,.018,.012,.008,.005,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0])},{name:"Double Tooth",expression:1,samples:c([1,.933,.867,.8,.733,.667,.6,.533,.467,.4,.333,.267,.2,.133,.067,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,.933,.867,.8,.733,.667,.6,.533,.467,.4,.333,.267,.2,.133,.067,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0])},{name:"Alt Skip Tooth",expression:1,samples:c([0,.067,.133,.2,.267,.333,.4,.467,.533,.6,.667,.733,.8,.867,.933,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,.067,.133,.2,.267,.333,.4,.467,.533,.6,.667,.733,.8,.867,.933,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,.067,.133,.2,.267,.333,.4,.467,.533,.6,.667,.733,.8,.867,.933,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,.933,.867,.8,.733,.667,.6,.533,.467,.4,.333,.267,.2,.133,.067,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,.933,.867,.8,.733,.667,.6,.533,.467,.4,.333,.267,.2,.133,.067,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,.933,.867,.8,.733,.667,.6,.533,.467,.4,.333,.267,.2,.133,.067,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0])},{name:"Old_Obelisco",expression:.5,samples:c([-24,-24,-24,-24,-23,-23,-23,-23,-22,-22,-22,-22,-21,-21,-19,-19,-17,-17,-15,-15,-12,-12,-7,-7,0,0,8,8,16,16,24,24,24,24,16,16,8,8,0,0,-7,-7,-12,-12,-15,-15,-17,-17,-19,-19,-21,-21,-22,-22,-22,-22,-23,-23,-23,-23,-24,-24,-24,-24])},{name:"Old_Half Obelisco ↑",expression:.5,samples:c([-24,-24,-24,-24,-24,-24,-24,-24,-23,-23,-23,-23,-23,-23,-23,-23,-22,-22,-22,-22,-22,-22,-22,-22,-21,-21,-21,-21,-19,-19,-19,-19,-17,-17,-17,-17,-15,-15,-15,-15,-12,-12,-12,-12,-7,-7,-7,-7,0,0,0,0,8,8,8,8,16,16,16,16,24,24,24,24])},{name:"Old_Half Obelisco ↓",expression:.5,samples:c([24,24,24,24,16,16,16,16,8,8,8,8,0,0,0,0,-7,-7,-7,-7,-12,-12,-12,-12,-15,-15,-15,-15,-17,-17,-17,-17,-19,-19,-19,-19,-21,-21,-21,-21,-22,-22,-22,-22,-22,-22,-22,-22,-23,-23,-23,-23,-23,-23,-23,-23,-24,-24,-24,-24,-24,-24,-24,-24])},{name:"Old_Pseudo Sine",expression:.5,samples:c([-24,-24,-24,-24,-24,-24,-24,-24,-24,-24,-22,-22,-22,-22,-20,-20,-20,-20,-12,-12,-12,-12,8,8,8,8,15,15,15,15,24,24,24,24,15,15,15,15,8,8,8,8,-12,-12,-12,-12,-20,-20,-20,-20,-22,-22,-22,-22,-24,-24,-24,-24,-24,-24,-24,-24,-24,-24])},{name:"Old_ST Kick",expression:.5,samples:c([-24,-24,-24,-24,-24,-24,-24,-24,-24,-24,-24,-24,-24,-16,-0,9,17,19,23,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,23,19,17,9,-0,-16,-24,-24,-24,-24,-24,-24,-24,-24,-24,-24,-24,-24,-24])},{name:"Old_C64 TriPulse",expression:.5,samples:h([-24,-24,-24,-24,-24,-24,-24,-24,-24,0,-24,-24,-24,-24,-24,-24,-17,-24,-5,4,14,-8,8,4,9,11,16,14,15,19,21,24,24,21,19,15,14,16,11,9,4,8,-8,14,4,-6,-24,-17,-24,-24,-24,-24,-24,0,-24,-24,-24,-24,-24,-24,-24,-24,-24,-24])},{name:"Old_C64 PulseSaw",expression:.5,samples:h([-1,1,-23,-24,-23,-24,-23,-24,-18,-24,-23,-24,-23,-21,-16,-13,-10,-24,-23,-24,-23,-24,-23,-24,-18,-24,-23,-7,4,17,19,20,21,22,23,24,-23,-24,-23,-24,-18,-24,-23,-24,-23,-21,-16,-13,-10,-24,-23,-24,-23,-24,-23,-24,-18,-24,-23,-24,-23,-24,-3,-2])},{name:"Old_C64 SawTri",expression:.5,samples:h([0,-24,-24,-23,-23,-24,-24,-21,-20,-24,-24,-23,-23,-24,-24,-17,-16,-24,-24,-23,-23,-24,-24,-21,-20,-24,-24,-23,-23,-24,17,20,22,24,-24,-23,-23,-24,-24,-21,-20,-24,-24,-23,-23,-24,-24,-17,-16,-24,-24,-23,-23,-24,-24,-21,-20,-24,-24,-23,-23,-24,-24,-2])},{name:"Old_C64 All",expression:.5,samples:h([-9,-24,-23,-24,-23,-24,-23,-24,-20,-24,-23,-24,-23,-24,-23,-20,-18,-24,-23,-24,-23,-24,-23,-24,-20,-24,-23,-24,-23,-24,18,20,22,24,-24,-23,-24,-23,-24,-21,-20,-23,-24,-23,-24,-23,-24,-20,-18,-23,-24,-23,-24,-23,-24,-21,-20,-23,-24,-23,-24,-23,-24,-11])},{name:"Old_Alt sawtooth",expression:.65,samples:c([-1/31,-3/31,-5/31,-7/31,-9/31,-11/31,-13/31,-15/31,-17/31,-19/31,-21/31,-23/31,-25/31,-27/31,-29/31,-1,1,29/31,27/31,25/31,23/31,21/31,19/31,17/31,15/31,13/31,11/31,9/31,7/31,5/31,3/31,1/31])},{name:"Old_Rising Saw",expression:.5,samples:h([-23,-22,-21,-21,-20,-19,-18,-18,-17,-16,-15,-15,-14,-13,-12,-12,-11,-10,-9,-9,-8,-7,-6,-6,-5,-4,-3,-3,-2,-1,0,0,1,2,3,3,4,5,6,6,7,8,9,9,10,11,12,12,13,14,15,15,16,17,18,18,19,20,21,21,22,23,24,24])},{name:"Old_Falling Saw",expression:.5,samples:h([23,22,21,21,20,19,18,18,17,16,15,15,14,13,12,12,11,10,9,9,8,7,6,6,5,4,3,3,2,1,-0,-0,-1,-2,-3,-3,-4,-5,-6,-6,-7,-8,-9,-9,-10,-11,-12,-12,-13,-14,-15,-15,-16,-17,-18,-18,-19,-20,-21,-21,-22,-23,-24,-24])},{name:"Old_Sync Buzzer Test",expression:.5,samples:h([24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,22,18,15,11,7,4,1,-2,-6,-9,-12,-15,-18,-20,-22,-24,-24,-22,-20,-18,-15,-12,-9,-6,-2,1,4,7,11,15,18,23])},{name:"Old_Atari Pokey 1",expression:.5,samples:h([24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,-24,-24,-24,-24,-24,-24,-24,-24,-24,-24,-24,-24,24,24,24,24,-24,-24,-24,-24,-24,-24,-24,-24,24,24,24,24,24,24,24,24,-24,-24,-24,-24,-24,-24,-24,-24,24,24,24,24,24,-24,-24,-24,-24])},{name:"Old_Atari Pokey 2",expression:.5,samples:h([-24,-24,-24,-24,-24,-24,-24,-24,-24,-24,-24,-24,24,24,24,24,-24,-24,-24,-24,-24,-24,-24,24,24,24,24,24,24,24,24,24,-24,-24,-24,-24,-24,-24,-24,-24,24,24,24,24,24,-24,-24,-24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24])},{name:"Old_M Tooth",expression:1,samples:c([0,.005,.008,.012,.018,.024,.036,.048,.069,.095,.139,.191,.287,.407,.648,1,1,.933,.867,.8,.733,.667,.6,.533,.467,.4,.333,.267,.2,.133,.067,0,0,.067,.133,.2,.267,.333,.4,.467,.533,.6,.667,.733,.8,.867,.933,1,1,.648,.407,.287,.191,.139,.095,.069,.048,.036,.024,.018,.012,.008,.005,0])},{name:"Old_W Tooth",expression:1,samples:c([0,.005,.008,.012,.018,.024,.036,.048,.069,.095,.139,.191,.287,.407,.648,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,.933,.867,.8,.733,.667,.6,.533,.467,.4,.333,.267,.2,.133,.067,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,.067,.133,.2,.267,.333,.4,.467,.533,.6,.667,.733,.8,.867,.933,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,.648,.407,.287,.191,.139,.095,.069,.048,.036,.024,.018,.012,.008,.005,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0])},{name:"TESTWAVE",expression:1,samples:c([0,1/15,2/15,.2,4/15,5/15,.4,7/15,8/15,.6,10/15,11/15,.8,13/15,14/15,1])}]),u.chipWaves=function(e){const t=new Array(e.length),i={};for(let n=0;n<t.length;n++){t[n]=Object.assign([],e[n]);const s=t[n];s.index=n,i[s.name]=s}for(let e in i)i[e].samples=f(i[e].samples);const n=t;return n.dictionary=i,n}(u.rawChipWaves),u.rawRawChipWaves=u.rawChipWaves,u.firstIndexForSamplesInChipWaveList=u.chipWaves.length,u.chipNoises=S([{name:"retro",expression:.25,basePitch:69,pitchFilterMult:1024,isSoft:!1,samples:null},{name:"white",expression:1,basePitch:69,pitchFilterMult:8,isSoft:!0,samples:null},{name:"clang",expression:.4,basePitch:69,pitchFilterMult:1024,isSoft:!1,samples:null},{name:"buzz",expression:.3,basePitch:69,pitchFilterMult:1024,isSoft:!1,samples:null},{name:"hollow",expression:1.5,basePitch:96,pitchFilterMult:1,isSoft:!0,samples:null},{name:"shine",expression:1,basePitch:69,pitchFilterMult:1024,isSoft:!1,samples:null},{name:"deep",expression:1.5,basePitch:120,pitchFilterMult:1024,isSoft:!0,samples:null},{name:"cutter",expression:.005,basePitch:96,pitchFilterMult:1024,isSoft:!1,samples:null},{name:"metallic",expression:1,basePitch:96,pitchFilterMult:1024,isSoft:!1,samples:null},{name:"static",expression:1,basePitch:96,pitchFilterMult:1024,isSoft:!1,samples:null},{name:"1-bit white",expression:.5,basePitch:74.41,pitchFilterMult:1024,isSoft:!1,samples:null},{name:"1-bit metallic",expression:.5,basePitch:86.41,pitchFilterMult:1024,isSoft:!1,samples:null},{name:"crackling",expression:.9,basePitch:69,pitchFilterMult:1024,isSoft:!1,samples:null},{name:"pink",expression:1,basePitch:69,pitchFilterMult:8,isSoft:!0,samples:null},{name:"brownian",expression:1,basePitch:69,pitchFilterMult:8,isSoft:!0,samples:null}]),u.filterFreqStep=1/4,u.filterFreqRange=34,u.filterFreqReferenceSetting=28,u.filterFreqReferenceHz=8e3,u.filterFreqMaxHz=u.filterFreqReferenceHz*Math.pow(2,u.filterFreqStep*(u.filterFreqRange-1-u.filterFreqReferenceSetting)),u.filterFreqMinHz=8,u.filterGainRange=15,u.filterGainCenter=7,u.filterGainStep=.5,u.filterMaxPoints=8,u.filterTypeNames=["low-pass","high-pass","peak"],u.filterMorphCount=10,u.filterSimpleCutRange=11,u.filterSimplePeakRange=8,u.fadeInRange=10,u.fadeOutTicks=[-24,-12,-6,-3,-1,6,12,24,48,72,96],u.fadeOutNeutral=4,u.drumsetFadeOutTicks=48,u.transitions=S([{name:"normal",isSeamless:!1,continues:!1,slides:!1,slideTicks:3,includeAdjacentPatterns:!1},{name:"interrupt",isSeamless:!0,continues:!1,slides:!1,slideTicks:3,includeAdjacentPatterns:!0},{name:"continue",isSeamless:!0,continues:!0,slides:!1,slideTicks:3,includeAdjacentPatterns:!0},{name:"slide",isSeamless:!0,continues:!1,slides:!0,slideTicks:3,includeAdjacentPatterns:!0},{name:"slide in pattern",isSeamless:!0,continues:!1,slides:!0,slideTicks:3,includeAdjacentPatterns:!1}]),u.vibratos=S([{name:"none",amplitude:0,type:0,delayTicks:0},{name:"light",amplitude:.15,type:0,delayTicks:0},{name:"delayed",amplitude:.3,type:0,delayTicks:37},{name:"heavy",amplitude:.45,type:0,delayTicks:0},{name:"shaky",amplitude:.1,type:1,delayTicks:0}]),u.vibratoTypes=S([{name:"normal",periodsSeconds:[.14],period:.14},{name:"shaky",periodsSeconds:[.11,.17798,.33],period:266.97}]),u.arpSpeedScale=[0,.0625,.125,.2,.25,1/3,.4,.5,2/3,.75,.8,.9,1,1.1,1.2,1.3,1.4,1.5,1.6,1.7,1.8,1.9,2,2.1,2.2,2.3,2.4,2.5,2.6,2.7,2.8,2.9,3,3.1,3.2,3.3,3.4,3.5,3.6,3.7,3.8,3.9,4,4.15,4.3,4.5,4.8,5,5.5,6,8,16,32,64,128,1024],u.dutyCycleSpeedScale=[0,.0625,.125,.2,.25,1/3,.4,.5,2/3,.75,.8,.9,1,1.1,1.2,1.3,1.4,1.5,1.6,1.7,1.8,1.9,2,2.1,2.2,2.3,2.4,2.5,2.6,2.7,2.8,2.9,3,3.1,3.2,3.3,3.4,3.5,3.6,3.7,3.8,3.9,4,4.15,4.3,4.5,4.8,5,5.5,6,8,16,32,64,128,1024,2048,8192,16384,32768,65536,131072,262144,524288],u.unisons=S([{name:"none",voices:1,spread:0,offset:0,expression:1.4,sign:1},{name:"shimmer",voices:2,spread:.018,offset:0,expression:.8,sign:1},{name:"hum",voices:2,spread:.045,offset:0,expression:1,sign:1},{name:"honky tonk",voices:2,spread:.09,offset:0,expression:1,sign:1},{name:"dissonant",voices:2,spread:.25,offset:0,expression:.9,sign:1},{name:"fifth",voices:2,spread:3.5,offset:3.5,expression:.9,sign:1},{name:"octave",voices:2,spread:6,offset:6,expression:.8,sign:1},{name:"bowed",voices:2,spread:.02,offset:0,expression:1,sign:-1},{name:"piano",voices:2,spread:.01,offset:0,expression:1,sign:.7},{name:"warbled",voices:2,spread:.25,offset:.05,expression:.9,sign:-.8},{name:"hecking gosh",voices:2,spread:6.25,offset:-6,expression:.8,sign:-.7},{name:"spinner",voices:2,spread:.02,offset:0,expression:1,sign:1},{name:"detune",voices:1,spread:0,offset:.25,expression:1,sign:1},{name:"rising",voices:2,spread:1,offset:.7,expression:.95,sign:1},{name:"vibrate",voices:2,spread:3.5,offset:7,expression:.975,sign:1},{name:"fourths",voices:2,spread:4,offset:4,expression:.95,sign:1},{name:"bass",voices:1,spread:0,offset:-7,expression:1,sign:1},{name:"dirty",voices:2,spread:0,offset:.1,expression:.975,sign:1},{name:"stationary",voices:2,spread:3.5,offset:0,expression:.9,sign:1},{name:"recurve",voices:2,spread:.005,offset:0,expression:1,sign:1},{name:"voiced",voices:2,spread:9.5,offset:0,expression:1,sign:1},{name:"fluctuate",voices:2,spread:12,offset:0,expression:1,sign:1},{name:"thin",voices:1,spread:0,offset:50,expression:1,sign:1},{name:"inject",voices:2,spread:6,offset:.4,expression:1,sign:1},{name:"askewed",voices:2,spread:0,offset:.42,expression:.7,sign:1},{name:"resonance",voices:2,spread:.0025,offset:.1,expression:.8,sign:-1.5},{name:"FART",voices:2,spread:13,offset:-5,expression:1,sign:-3}]),u.effectNames=["reverb","chorus","panning","distortion","bitcrusher","note filter","echo","pitch shift","detune","vibrato","transition type","chord type"],u.effectOrder=[2,10,11,7,8,9,5,3,4,1,6,0],u.noteSizeMax=6,u.volumeRange=50,u.volumeLogScale=.1428,u.panCenter=50,u.panMax=2*u.panCenter,u.panDelaySecondsMax=.001,u.chorusRange=8,u.chorusPeriodSeconds=2,u.chorusDelayRange=.0034,u.chorusDelayOffsets=[[1.51,2.1,3.35],[1.47,2.15,3.25]],u.chorusPhaseOffsets=[[0,2.1,4.2],[3.2,5.3,1]],u.chorusMaxDelay=u.chorusDelayRange*(1+u.chorusDelayOffsets[0].concat(u.chorusDelayOffsets[1]).reduce(((e,t)=>Math.max(e,t)))),u.chords=S([{name:"simultaneous",customInterval:!1,arpeggiates:!1,strumParts:0,singleTone:!1},{name:"strum",customInterval:!1,arpeggiates:!1,strumParts:1,singleTone:!1},{name:"arpeggio",customInterval:!1,arpeggiates:!0,strumParts:0,singleTone:!0},{name:"custom interval",customInterval:!0,arpeggiates:!1,strumParts:0,singleTone:!0}]),u.maxChordSize=9,u.operatorCount=4,u.maxPitchOrOperatorCount=Math.max(u.maxChordSize,u.operatorCount+2),u.algorithms=S([{name:"1←(2 3 4)",carrierCount:1,associatedCarrier:[1,1,1,1],modulatedBy:[[2,3,4],[],[],[]]},{name:"1←(2 3←4)",carrierCount:1,associatedCarrier:[1,1,1,1],modulatedBy:[[2,3],[],[4],[]]},{name:"1←2←(3 4)",carrierCount:1,associatedCarrier:[1,1,1,1],modulatedBy:[[2],[3,4],[],[]]},{name:"1←(2 3)←4",carrierCount:1,associatedCarrier:[1,1,1,1],modulatedBy:[[2,3],[4],[4],[]]},{name:"1←2←3←4",carrierCount:1,associatedCarrier:[1,1,1,1],modulatedBy:[[2],[3],[4],[]]},{name:"1←3 2←4",carrierCount:2,associatedCarrier:[1,2,1,2],modulatedBy:[[3],[4],[],[]]},{name:"1 2←(3 4)",carrierCount:2,associatedCarrier:[1,2,2,2],modulatedBy:[[],[3,4],[],[]]},{name:"1 2←3←4",carrierCount:2,associatedCarrier:[1,2,2,2],modulatedBy:[[],[3],[4],[]]},{name:"(1 2)←3←4",carrierCount:2,associatedCarrier:[1,2,2,2],modulatedBy:[[3],[3],[4],[]]},{name:"(1 2)←(3 4)",carrierCount:2,associatedCarrier:[1,2,2,2],modulatedBy:[[3,4],[3,4],[],[]]},{name:"1 2 3←4",carrierCount:3,associatedCarrier:[1,2,3,3],modulatedBy:[[],[],[4],[]]},{name:"(1 2 3)←4",carrierCount:3,associatedCarrier:[1,2,3,3],modulatedBy:[[4],[4],[4],[]]},{name:"1 2 3 4",carrierCount:4,associatedCarrier:[1,2,3,4],modulatedBy:[[],[],[],[]]},{name:"1←(2 3) 2←4",carrierCount:2,associatedCarrier:[1,2,1,2],modulatedBy:[[2,3],[4],[],[]]},{name:"1←(2 (3 (4",carrierCount:3,associatedCarrier:[1,2,3,3],modulatedBy:[[2,3,4],[3,4],[4],[]]}]),u.algorithms6Op=S([{name:"Custom",carrierCount:1,associatedCarrier:[1,1,1,1,1,1],modulatedBy:[[2,3,4,5,6],[],[],[],[],[]]},{name:"1←2←3←4←5←6",carrierCount:1,associatedCarrier:[1,1,1,1,1,1],modulatedBy:[[2],[3],[4],[5],[6],[]]},{name:"1←3 2←4←5←6",carrierCount:2,associatedCarrier:[1,2,2,2,2,2],modulatedBy:[[3],[4],[],[5],[6],[]]},{name:"1←3←4 2←5←6",carrierCount:2,associatedCarrier:[1,1,1,2,2,2],modulatedBy:[[3],[5],[4],[],[6],[]]},{name:"1←4 2←5 3←6",carrierCount:3,associatedCarrier:[1,2,3,1,2,3],modulatedBy:[[4],[5],[6],[],[],[]]},{name:"1←3 2←(4 5←6)",carrierCount:2,associatedCarrier:[1,2,2,2,2,2],modulatedBy:[[3],[4,5],[],[],[6],[]]},{name:"1←(3 4) 2←5←6",carrierCount:2,associatedCarrier:[1,2,2,2,2,2],modulatedBy:[[3,4],[5],[],[],[6],[]]},{name:"1←3 2←(4 5 6)",carrierCount:2,associatedCarrier:[1,2,2,2,2,2],modulatedBy:[[3],[4,5,6],[],[],[],[]]},{name:"1←3 2←(4 5)←6",carrierCount:2,associatedCarrier:[1,2,2,2,2,2],modulatedBy:[[3],[4,5],[],[6],[6],[]]},{name:"1←3 2←4←(5 6)",carrierCount:2,associatedCarrier:[1,2,2,2,2,2],modulatedBy:[[3],[4],[],[5,6],[],[]]},{name:"1←(2 3 4 5 6)",carrierCount:1,associatedCarrier:[1,1,1,1,1,1],modulatedBy:[[2,3,4,5,6],[],[],[],[],[]]},{name:"1←(2 3←5 4←6)",carrierCount:1,associatedCarrier:[1,1,1,1,1,1],modulatedBy:[[2,3,4],[],[5],[6],[],[]]},{name:"1←(2 3 4←5←6)",carrierCount:1,associatedCarrier:[1,1,1,1,1,1],modulatedBy:[[2,3,4],[],[],[5],[6],[]]},{name:"1←4←5 (2 3)←6",carrierCount:3,associatedCarrier:[1,2,3,1,2,3],modulatedBy:[[4],[6],[6],[5],[],[]]},{name:"1←(3 4)←5 2←6",carrierCount:2,associatedCarrier:[1,2,2,2,2,2],modulatedBy:[[3,4],[6],[5],[5],[],[]]},{name:"(1 2)←4 3←(5 6)",carrierCount:3,associatedCarrier:[1,2,3,1,2,3],modulatedBy:[[4],[4],[5,6],[],[],[]]},{name:"(1 2)←5 (3 4)←6",carrierCount:4,associatedCarrier:[1,2,3,4,4,4],modulatedBy:[[5],[5],[6],[6],[],[]]},{name:"(1 2 3)←(4 5 6)",carrierCount:3,associatedCarrier:[1,2,3,1,2,3],modulatedBy:[[4,5,6],[4,5,6],[4,5,6],[],[],[]]},{name:"1←5 (2 3 4)←6",carrierCount:4,associatedCarrier:[1,2,3,4,4,4],modulatedBy:[[5],[6],[6],[6],[],[]]},{name:"1 2←5 (3 4)←6",carrierCount:4,associatedCarrier:[1,2,3,4,4,4],modulatedBy:[[],[5],[6],[6],[],[]]},{name:"1 2 (3 4 5)←6",carrierCount:5,associatedCarrier:[1,2,3,4,5,5],modulatedBy:[[],[],[6],[6],[6],[]]},{name:"1 2 3 (4 5)←6",carrierCount:5,associatedCarrier:[1,2,3,4,5,5],modulatedBy:[[],[],[],[6],[6],[]]},{name:"1 2←4 3←(5 6)",carrierCount:3,associatedCarrier:[1,2,3,3,3,3],modulatedBy:[[],[4],[5,6],[],[],[]]},{name:"1←4 2←(5 6) 3",carrierCount:3,associatedCarrier:[1,2,3,3,3,3],modulatedBy:[[4],[5,6],[],[],[],[]]},{name:"1 2 3←5 4←6",carrierCount:4,associatedCarrier:[1,2,3,4,4,4],modulatedBy:[[],[],[5],[6],[],[]]},{name:"1 (2 3)←5←6 4",carrierCount:4,associatedCarrier:[1,2,3,4,4,4],modulatedBy:[[],[5],[5],[],[6],[]]},{name:"1 2 3←5←6 4",carrierCount:4,associatedCarrier:[1,2,3,4,4,4],modulatedBy:[[],[],[5,6],[],[],[]]},{name:"(1 2 3 4 5)←6",carrierCount:5,associatedCarrier:[1,2,3,4,5,5],modulatedBy:[[6],[6],[6],[6],[6],[]]},{name:"1 2 3 4 5←6",carrierCount:5,associatedCarrier:[1,2,3,4,5,5],modulatedBy:[[],[],[],[],[6],[]]},{name:"1 2 3 4 5 6",carrierCount:6,associatedCarrier:[1,2,3,4,5,6],modulatedBy:[[],[],[],[],[],[]]},{name:"1←(2 (3 (4 (5 (6",carrierCount:5,associatedCarrier:[1,2,3,4,5,5],modulatedBy:[[2,3,4,5,6],[3,4,5,6],[4,5,6],[5,6],[6],[]]},{name:"1←(2(3(4(5(6",carrierCount:1,associatedCarrier:[1,1,1,1,1,1],modulatedBy:[[2,3,4,5,6],[3,4,5,6],[4,5,6],[5,6],[6],[]]},{name:"1←4(2←5(3←6",carrierCount:3,associatedCarrier:[1,2,3,1,2,3],modulatedBy:[[2,3,4],[3,5],[6],[],[],[]]},{name:"1←4(2←5 3←6",carrierCount:3,associatedCarrier:[1,2,3,1,2,3],modulatedBy:[[2,3,4],[5],[6],[],[],[]]}]),u.operatorCarrierInterval=[0,.04,-.073,.091,.061,.024],u.operatorAmplitudeMax=15,u.operatorFrequencies=S([{name:"0.12×",mult:.125,hzOffset:0,amplitudeSign:1},{name:"0.25×",mult:.25,hzOffset:0,amplitudeSign:1},{name:"0.5×",mult:.5,hzOffset:0,amplitudeSign:1},{name:"0.75×",mult:.75,hzOffset:0,amplitudeSign:1},{name:"1×",mult:1,hzOffset:0,amplitudeSign:1},{name:"~1×",mult:1,hzOffset:1.5,amplitudeSign:-1},{name:"2×",mult:2,hzOffset:0,amplitudeSign:1},{name:"~2×",mult:2,hzOffset:-1.3,amplitudeSign:-1},{name:"3×",mult:3,hzOffset:0,amplitudeSign:1},{name:"3.5×",mult:3.5,hzOffset:-.05,amplitudeSign:1},{name:"4×",mult:4,hzOffset:0,amplitudeSign:1},{name:"~4×",mult:4,hzOffset:-2.4,amplitudeSign:-1},{name:"5×",mult:5,hzOffset:0,amplitudeSign:1},{name:"6×",mult:6,hzOffset:0,amplitudeSign:1},{name:"7×",mult:7,hzOffset:0,amplitudeSign:1},{name:"8×",mult:8,hzOffset:0,amplitudeSign:1},{name:"9×",mult:9,hzOffset:0,amplitudeSign:1},{name:"10×",mult:10,hzOffset:0,amplitudeSign:1},{name:"11×",mult:11,hzOffset:0,amplitudeSign:1},{name:"12×",mult:12,hzOffset:0,amplitudeSign:1},{name:"13×",mult:13,hzOffset:0,amplitudeSign:1},{name:"14×",mult:14,hzOffset:0,amplitudeSign:1},{name:"15×",mult:15,hzOffset:0,amplitudeSign:1},{name:"16×",mult:16,hzOffset:0,amplitudeSign:1},{name:"17×",mult:17,hzOffset:0,amplitudeSign:1},{name:"18×",mult:18,hzOffset:0,amplitudeSign:1},{name:"19×",mult:19,hzOffset:0,amplitudeSign:1},{name:"20×",mult:20,hzOffset:0,amplitudeSign:1},{name:"~20×",mult:20,hzOffset:-5,amplitudeSign:-1},{name:"25×",mult:25,hzOffset:0,amplitudeSign:1},{name:"50×",mult:50,hzOffset:0,amplitudeSign:1},{name:"75×",mult:75,hzOffset:0,amplitudeSign:1},{name:"100×",mult:100,hzOffset:0,amplitudeSign:1}]),u.envelopes=S([{name:"none",type:1,speed:0},{name:"note size",type:0,speed:0},{name:"punch",type:2,speed:0},{name:"flare -1",type:3,speed:128},{name:"flare 1",type:3,speed:32},{name:"flare 2",type:3,speed:8},{name:"flare 3",type:3,speed:2},{name:"twang -1",type:4,speed:128},{name:"twang 1",type:4,speed:32},{name:"twang 2",type:4,speed:8},{name:"twang 3",type:4,speed:2},{name:"swell -1",type:5,speed:128},{name:"swell 1",type:5,speed:32},{name:"swell 2",type:5,speed:8},{name:"swell 3",type:5,speed:2},{name:"tremolo0",type:6,speed:8},{name:"tremolo1",type:6,speed:4},{name:"tremolo2",type:6,speed:2},{name:"tremolo3",type:6,speed:1},{name:"tremolo4",type:7,speed:4},{name:"tremolo5",type:7,speed:2},{name:"tremolo6",type:7,speed:1},{name:"decay -1",type:8,speed:40},{name:"decay 1",type:8,speed:10},{name:"decay 2",type:8,speed:7},{name:"decay 3",type:8,speed:4},{name:"wibble-1",type:9,speed:96},{name:"wibble 1",type:9,speed:24},{name:"wibble 2",type:9,speed:12},{name:"wibble 3",type:9,speed:4},{name:"linear-2",type:11,speed:256},{name:"linear-1",type:11,speed:128},{name:"linear 1",type:11,speed:32},{name:"linear 2",type:11,speed:8},{name:"linear 3",type:11,speed:2},{name:"rise -2",type:12,speed:256},{name:"rise -1",type:12,speed:128},{name:"rise 1",type:12,speed:32},{name:"rise 2",type:12,speed:8},{name:"rise 3",type:12,speed:2},{name:"flute 1",type:9,speed:16},{name:"flute 2",type:9,speed:8},{name:"flute 3",type:9,speed:4},{name:"tripolo1",type:6,speed:9},{name:"tripolo2",type:6,speed:6},{name:"tripolo3",type:6,speed:3},{name:"tripolo4",type:7,speed:9},{name:"tripolo5",type:7,speed:6},{name:"tripolo6",type:7,speed:3},{name:"pentolo1",type:6,speed:10},{name:"pentolo2",type:6,speed:5},{name:"pentolo3",type:6,speed:2.5},{name:"pentolo4",type:7,speed:10},{name:"pentolo5",type:7,speed:5},{name:"pentolo6",type:7,speed:2.5},{name:"flutter 1",type:6,speed:14},{name:"flutter 2",type:7,speed:11},{name:"water-y flutter",type:6,speed:9},{name:"blip 1",type:13,speed:6},{name:"blip 2",type:13,speed:16},{name:"blip 3",type:13,speed:32}]),u.feedbacks=S([{name:"1⟲",indices:[[1],[],[],[]]},{name:"2⟲",indices:[[],[2],[],[]]},{name:"3⟲",indices:[[],[],[3],[]]},{name:"4⟲",indices:[[],[],[],[4]]},{name:"1⟲ 2⟲",indices:[[1],[2],[],[]]},{name:"3⟲ 4⟲",indices:[[],[],[3],[4]]},{name:"1⟲ 2⟲ 3⟲",indices:[[1],[2],[3],[]]},{name:"2⟲ 3⟲ 4⟲",indices:[[],[2],[3],[4]]},{name:"1⟲ 2⟲ 3⟲ 4⟲",indices:[[1],[2],[3],[4]]},{name:"1→2",indices:[[],[1],[],[]]},{name:"1→3",indices:[[],[],[1],[]]},{name:"1→4",indices:[[],[],[],[1]]},{name:"2→3",indices:[[],[],[2],[]]},{name:"2→4",indices:[[],[],[],[2]]},{name:"3→4",indices:[[],[],[],[3]]},{name:"1→3 2→4",indices:[[],[],[1],[2]]},{name:"1→4 2→3",indices:[[],[],[2],[1]]},{name:"1→2→3→4",indices:[[],[1],[2],[3]]},{name:"1↔2 3↔4",indices:[[2],[1],[4],[3]]},{name:"1↔4 2↔3",indices:[[4],[3],[2],[1]]},{name:"2→1→4→3→2",indices:[[2],[3],[4],[1]]},{name:"1→2→3→4→1",indices:[[4],[1],[2],[3]]},{name:"(1 2 3)→4",indices:[[],[],[],[1,2,3]]},{name:"ALL",indices:[[1,2,3,4],[1,2,3,4],[1,2,3,4],[1,2,3,4]]}]),u.feedbacks6Op=S([{name:"Custom",indices:[[2,3,4,5,6],[],[],[],[],[]]},{name:"1⟲",indices:[[1],[],[],[],[],[]]},{name:"2⟲",indices:[[],[2],[],[],[],[]]},{name:"3⟲",indices:[[],[],[3],[],[],[]]},{name:"4⟲",indices:[[],[],[],[4],[],[]]},{name:"5⟲",indices:[[],[],[],[],[5],[]]},{name:"6⟲",indices:[[],[],[],[],[],[6]]},{name:"1⟲ 2⟲",indices:[[1],[2],[],[],[],[]]},{name:"3⟲ 4⟲",indices:[[],[],[3],[4],[],[]]},{name:"1⟲ 2⟲ 3⟲",indices:[[1],[2],[3],[],[],[]]},{name:"2⟲ 3⟲ 4⟲",indices:[[],[2],[3],[4],[],[]]},{name:"1⟲ 2⟲ 3⟲ 4⟲",indices:[[1],[2],[3],[4],[],[]]},{name:"1⟲ 2⟲ 3⟲ 4⟲ 5⟲",indices:[[1],[2],[3],[4],[5],[]]},{name:"1⟲ 2⟲ 3⟲ 4⟲ 5⟲ 6⟲",indices:[[1],[2],[3],[4],[5],[6]]},{name:"1→2",indices:[[],[1],[],[],[],[]]},{name:"1→3",indices:[[],[],[1],[],[],[]]},{name:"1→4",indices:[[],[],[],[1],[],[]]},{name:"1→5",indices:[[],[],[],[],[1],[]]},{name:"1→6",indices:[[],[],[],[],[],[1]]},{name:"2→3",indices:[[],[],[2],[],[],[]]},{name:"2→4",indices:[[],[],[],[2],[],[]]},{name:"3→4",indices:[[],[],[],[3],[],[]]},{name:"4→5",indices:[[],[],[],[],[4],[]]},{name:"1→4 2→5 3→6",indices:[[],[],[],[1],[2],[3]]},{name:"1→5 2→6 3→4",indices:[[],[],[],[3],[1],[2]]},{name:"1→2→3→4→5→6",indices:[[],[1],[2],[3],[4],[5]]},{name:"2→1→6→5→4→3→2",indices:[[2],[3],[4],[5],[6],[1]]},{name:"1→2→3→4→5→6→1",indices:[[6],[1],[2],[3],[4],[5]]},{name:"1↔2 3↔4 5↔6",indices:[[2],[1],[4],[3],[6],[5]]},{name:"1↔4 2↔5 3↔6",indices:[[4],[5],[6],[1],[2],[3]]},{name:"(1,2,3,4,5)→6",indices:[[],[],[],[],[],[1,2,3,4,5]]},{name:"ALL",indices:[[1,2,3,4,5,6],[1,2,3,4,5,6],[1,2,3,4,5,6],[1,2,3,4,5,6],[1,2,3,4,5,6],[1,2,3,4,5,6]]}]),u.chipNoiseLength=32768,u.spectrumNoiseLength=32768,u.spectrumBasePitch=24,u.spectrumControlPoints=30,u.spectrumControlPointsPerOctave=7,u.spectrumControlPointBits=3,u.spectrumMax=(1<<u.spectrumControlPointBits)-1,u.harmonicsControlPoints=28,u.harmonicsRendered=64,u.harmonicsRenderedForPickedString=256,u.harmonicsControlPointBits=3,u.harmonicsMax=(1<<u.harmonicsControlPointBits)-1,u.harmonicsWavelength=2048,u.pulseWidthRange=50,u.pulseWidthStepPower=.5,u.supersawVoiceCount=7,u.supersawDynamismMax=6,u.supersawSpreadMax=12,u.supersawShapeMax=6,u.pitchChannelCountMin=1,u.pitchChannelCountMax=60,u.noiseChannelCountMin=0,u.noiseChannelCountMax=60,u.modChannelCountMin=0,u.modChannelCountMax=60,u.noiseInterval=6,u.pitchesPerOctave=12,u.drumCount=12,u.pitchOctaves=8,u.modCount=6,u.maxPitch=u.pitchOctaves*u.pitchesPerOctave,u.maximumTonesPerChannel=2*u.maxChordSize,u.pitchShiftRange=49,u.justIntonationSemitones=function(e,t){const i=[[1,1],[16,15],[9,8],[6,5],[5,4],[4,3],[45,32],[3,2],[8,5],[5,3],[16,9],[15,8],[2,1]],n=(e-1)/(2*t),s=[];for(let e=0;e<n;e++)for(let a=0;a<t;a++){const[r,o]=i[t-a];s.push(Math.log2(o/r)*t-t*(n-1-e))}for(let e=0;e<n;e++)for(let n=0;n<t;n++){const[a,r]=i[n];s.push(Math.log2(a/r)*t+t*e)}return s.push(t*n),s}(u.pitchShiftRange,u.pitchesPerOctave),u.pitchShiftCenter=u.pitchShiftRange>>1,u.detuneCenter=200,u.detuneMax=400,u.detuneMin=0,u.songDetuneMin=0,u.songDetuneMax=500,u.unisonVoicesMin=1,u.unisonVoicesMax=2,u.unisonSpreadMin=-96,u.unisonSpreadMax=96,u.unisonOffsetMin=-96,u.unisonOffsetMax=96,u.unisonExpressionMin=-2,u.unisonExpressionMax=2,u.unisonSignMin=-2,u.unisonSignMax=2,u.sineWaveLength=256,u.sineWaveMask=u.sineWaveLength-1,u.sineWave=function(){const e=new Float32Array(u.sineWaveLength+1);for(let t=0;t<u.sineWaveLength+1;t++)e[t]=Math.sin(t*Math.PI*2/u.sineWaveLength);return e}(),u.pickedStringDispersionCenterFreq=6e3,u.pickedStringDispersionFreqScale=.3,u.pickedStringDispersionFreqMult=4,u.pickedStringShelfHz=4e3,u.distortionRange=8,u.stringSustainRange=15,u.stringDecayRate=.12,u.enableAcousticSustain=!1,u.sustainTypeNames=["bright","acoustic"],u.bitcrusherFreqRange=14,u.bitcrusherOctaveStep=.5,u.bitcrusherQuantizationRange=8,u.maxEnvelopeCount=12,u.defaultAutomationRange=13,u.instrumentAutomationTargets=S([{name:"none",computeIndex:null,displayName:"none",interleave:!1,isFilter:!1,maxCount:1,effect:null,compatibleInstruments:null},{name:"noteVolume",computeIndex:0,displayName:"note volume",interleave:!1,isFilter:!1,maxCount:1,effect:null,compatibleInstruments:null},{name:"pulseWidth",computeIndex:2,displayName:"pulse width",interleave:!1,isFilter:!1,maxCount:1,effect:null,compatibleInstruments:[6,7,9]},{name:"stringSustain",computeIndex:3,displayName:"sustain",interleave:!1,isFilter:!1,maxCount:1,effect:null,compatibleInstruments:[8]},{name:"unison",computeIndex:4,displayName:"unison",interleave:!1,isFilter:!1,maxCount:1,effect:null,compatibleInstruments:[0,5,8,10,6,7,2,3]},{name:"operatorFrequency",computeIndex:5,displayName:"fm# freq",interleave:!0,isFilter:!1,maxCount:u.operatorCount+2,effect:null,compatibleInstruments:[1,12]},{name:"operatorAmplitude",computeIndex:11,displayName:"fm# volume",interleave:!1,isFilter:!1,maxCount:u.operatorCount+2,effect:null,compatibleInstruments:[1,12]},{name:"feedbackAmplitude",computeIndex:17,displayName:"fm feedback",interleave:!1,isFilter:!1,maxCount:1,effect:null,compatibleInstruments:[1,12]},{name:"pitchShift",computeIndex:18,displayName:"pitch shift",interleave:!1,isFilter:!1,maxCount:1,effect:7,compatibleInstruments:null},{name:"detune",computeIndex:19,displayName:"detune",interleave:!1,isFilter:!1,maxCount:1,effect:8,compatibleInstruments:null},{name:"vibratoDepth",computeIndex:20,displayName:"vibrato range",interleave:!1,isFilter:!1,maxCount:1,effect:9,compatibleInstruments:null},{name:"noteFilterAllFreqs",computeIndex:1,displayName:"n. filter freqs",interleave:!1,isFilter:!0,maxCount:1,effect:5,compatibleInstruments:null},{name:"noteFilterFreq",computeIndex:21,displayName:"n. filter # freq",interleave:!1,isFilter:!0,maxCount:u.filterMaxPoints,effect:5,compatibleInstruments:null},{name:"decimalOffset",computeIndex:37,displayName:"decimal offset",interleave:!1,isFilter:!1,maxCount:1,effect:null,compatibleInstruments:[6,7,9]},{name:"supersawDynamism",computeIndex:38,displayName:"dynamism",interleave:!1,isFilter:!1,maxCount:1,effect:null,compatibleInstruments:[9]},{name:"supersawSpread",computeIndex:39,displayName:"spread",interleave:!1,isFilter:!1,maxCount:1,effect:null,compatibleInstruments:[9]},{name:"supersawShape",computeIndex:40,displayName:"saw↔pulse",interleave:!1,isFilter:!1,maxCount:1,effect:null,compatibleInstruments:[9]}]),u.operatorWaves=S([{name:"sine",samples:u.sineWave},{name:"triangle",samples:function(){const e=new Float32Array(u.sineWaveLength+1);for(let t=0;t<u.sineWaveLength+1;t++)e[t]=Math.asin(Math.sin(t*Math.PI*2/u.sineWaveLength))/(Math.PI/2);return e}()},{name:"pulse width",samples:v()},{name:"sawtooth",samples:g()},{name:"ramp",samples:g(!0)},{name:"trapezoid",samples:function(e=2){const t=new Float32Array(u.sineWaveLength+1);for(let i=0;i<u.sineWaveLength+1;i++)t[i]=Math.max(-1,Math.min(1,Math.asin(Math.sin(i*Math.PI*2/u.sineWaveLength))*e));return t}(2)},{name:"quasi-sine",samples:function(){const e=new Float32Array(u.sineWaveLength+1);for(let t=0;t<u.sineWaveLength+1;t++)e[t]=Math.round(Math.sin(t*Math.PI*2/u.sineWaveLength));return e}()}]),u.pwmOperatorWaves=S([{name:"1%",samples:v(.01)},{name:"5%",samples:v(.05)},{name:"12.5%",samples:v(.125)},{name:"25%",samples:v(.25)},{name:"33%",samples:v(1/3)},{name:"50%",samples:v(.5)},{name:"66%",samples:v(2/3)},{name:"75%",samples:v(.75)},{name:"87.5%",samples:v(.875)},{name:"95%",samples:v(.95)},{name:"99%",samples:v(.99)}]),u.barEditorHeight=10,u.modulators=S([{name:"none",pianoName:"None",maxRawVol:6,newNoteVol:6,forSong:!0,convertRealFactor:0,associatedEffect:12,promptName:"No Mod Setting",promptDesc:["No setting has been chosen yet, so this modulator will have no effect. Try choosing a setting with the dropdown, then click this '?' again for more info.","[$LO - $HI]"]},{name:"song volume",pianoName:"Volume",maxRawVol:100,newNoteVol:100,forSong:!0,convertRealFactor:0,associatedEffect:12,promptName:"Song Volume",promptDesc:["This setting affects the overall volume of the song, just like the main volume slider.","At $HI, the volume will be unchanged from default, and it will get gradually quieter down to $LO.","[MULTIPLICATIVE] [$LO - $HI] [%]"]},{name:"tempo",pianoName:"Tempo",maxRawVol:u.tempoMax-u.tempoMin,newNoteVol:Math.ceil((u.tempoMax-u.tempoMin)/2),forSong:!0,convertRealFactor:u.tempoMin,associatedEffect:12,promptName:"Song Tempo",promptDesc:["This setting controls the speed your song plays at, just like the tempo slider.","When you first make a note for this setting, it will default to your current tempo. Raising it speeds up the song, up to $HI BPM, and lowering it slows it down, to a minimum of $LO BPM.","Note that you can make a 'swing' effect by rapidly changing between two tempo values.","[OVERWRITING] [$LO - $HI] [BPM]"]},{name:"song reverb",pianoName:"Reverb",maxRawVol:2*u.reverbRange,newNoteVol:u.reverbRange,forSong:!0,convertRealFactor:-u.reverbRange,associatedEffect:12,promptName:"Song Reverb",promptDesc:["This setting affects the overall reverb of your song. It works by multiplying existing reverb for instruments, so those with no reverb set will be unaffected.","At $MID, all instruments' reverb will be unchanged from default. This increases up to double the reverb value at $HI, or down to no reverb at $LO.","[MULTIPLICATIVE] [$LO - $HI]"]},{name:"next bar",pianoName:"Next Bar",maxRawVol:1,newNoteVol:1,forSong:!0,convertRealFactor:0,associatedEffect:12,promptName:"Go To Next Bar",promptDesc:["This setting functions a little different from most. Wherever a note is placed, the song will jump immediately to the next bar when it is encountered.","This jump happens at the very start of the note, so the length of a next-bar note is irrelevant. Also, the note can be value 0 or 1, but the value is also irrelevant - wherever you place a note, the song will jump.","You can make mixed-meter songs or intro sections by cutting off unneeded beats with a next-bar modulator.","[$LO - $HI]"]},{name:"note volume",pianoName:"Note Vol.",maxRawVol:u.volumeRange,newNoteVol:Math.ceil(u.volumeRange/2),forSong:!1,convertRealFactor:Math.ceil(-u.volumeRange/2),associatedEffect:12,promptName:"Note Volume",promptDesc:["This setting affects the volume of your instrument as if its note size had been scaled.","At $MID, an instrument's volume will be unchanged from default. This means you can still use the volume sliders to mix the base volume of instruments. The volume gradually increases up to $HI, or decreases down to mute at $LO.","This setting was the default for volume modulation in JummBox for a long time. Due to some new effects like distortion and bitcrush, note volume doesn't always allow fine volume control. Also, this modulator affects the value of FM modulator waves instead of just carriers. This can distort the sound which may be useful, but also may be undesirable. In those cases, use the 'mix volume' modulator instead, which will always just scale the volume with no added effects.","For display purposes, this mod will show up on the instrument volume slider, as long as there is not also an active 'mix volume' modulator anyhow. However, as mentioned, it works more like changing note volume.","[MULTIPLICATIVE] [$LO - $HI]"]},{name:"pan",pianoName:"Pan",maxRawVol:u.panMax,newNoteVol:Math.ceil(u.panMax/2),forSong:!1,convertRealFactor:0,associatedEffect:2,promptName:"Instrument Panning",promptDesc:["This setting controls the panning of your instrument, just like the panning slider.","At $LO, your instrument will sound like it is coming fully from the left-ear side. At $MID it will be right in the middle, and at $HI, it will sound like it's on the right.","[OVERWRITING] [$LO - $HI] [L-R]"]},{name:"reverb",pianoName:"Reverb",maxRawVol:u.reverbRange,newNoteVol:0,forSong:!1,convertRealFactor:0,associatedEffect:0,promptName:"Instrument Reverb",promptDesc:["This setting controls the reverb of your insturment, just like the reverb slider.","At $LO, your instrument will have no reverb. At $HI, it will be at maximum.","[OVERWRITING] [$LO - $HI]"]},{name:"distortion",pianoName:"Distortion",maxRawVol:u.distortionRange-1,newNoteVol:0,forSong:!1,convertRealFactor:0,associatedEffect:3,promptName:"Instrument Distortion",promptDesc:["This setting controls the amount of distortion for your instrument, just like the distortion slider.","At $LO, your instrument will have no distortion. At $HI, it will be at maximum.","[OVERWRITING] [$LO - $HI]"]},{name:"fm slider 1",pianoName:"FM 1",maxRawVol:15,newNoteVol:15,forSong:!1,convertRealFactor:0,associatedEffect:12,promptName:"FM Slider 1",promptDesc:["This setting affects the strength of the first FM slider, just like the corresponding slider on your instrument.","It works in a multiplicative way, so at $HI your slider will sound the same is its default value, and at $LO it will sound like it has been moved all the way to the left.","For the full range of control with this mod, move your underlying slider all the way to the right.","[MULTIPLICATIVE] [$LO - $HI] [%]"]},{name:"fm slider 2",pianoName:"FM 2",maxRawVol:15,newNoteVol:15,forSong:!1,convertRealFactor:0,associatedEffect:12,promptName:"FM Slider 2",promptDesc:["This setting affects the strength of the second FM slider, just like the corresponding slider on your instrument.","It works in a multiplicative way, so at $HI your slider will sound the same is its default value, and at $LO it will sound like it has been moved all the way to the left.","For the full range of control with this mod, move your underlying slider all the way to the right.","[MULTIPLICATIVE] [$LO - $HI] [%]"]},{name:"fm slider 3",pianoName:"FM 3",maxRawVol:15,newNoteVol:15,forSong:!1,convertRealFactor:0,associatedEffect:12,promptName:"FM Slider 3",promptDesc:["This setting affects the strength of the third FM slider, just like the corresponding slider on your instrument.","It works in a multiplicative way, so at $HI your slider will sound the same is its default value, and at $LO it will sound like it has been moved all the way to the left.","For the full range of control with this mod, move your underlying slider all the way to the right.","[MULTIPLICATIVE] [$LO - $HI] [%]"]},{name:"fm slider 4",pianoName:"FM 4",maxRawVol:15,newNoteVol:15,forSong:!1,convertRealFactor:0,associatedEffect:12,promptName:"FM Slider 4",promptDesc:["This setting affects the strength of the fourth FM slider, just like the corresponding slider on your instrument.","It works in a multiplicative way, so at $HI your slider will sound the same is its default value, and at $LO it will sound like it has been moved all the way to the left.","For the full range of control with this mod, move your underlying slider all the way to the right.","[MULTIPLICATIVE] [$LO - $HI] [%]"]},{name:"fm feedback",pianoName:"FM Feedback",maxRawVol:15,newNoteVol:15,forSong:!1,convertRealFactor:0,associatedEffect:12,promptName:"FM Feedback",promptDesc:["This setting affects the strength of the FM feedback slider, just like the corresponding slider on your instrument.","It works in a multiplicative way, so at $HI your slider will sound the same is its default value, and at $LO it will sound like it has been moved all the way to the left.","For the full range of control with this mod, move your underlying slider all the way to the right.","[MULTIPLICATIVE] [$LO - $HI] [%]"]},{name:"pulse width",pianoName:"Pulse Width",maxRawVol:2*u.pulseWidthRange,newNoteVol:u.pulseWidthRange,forSong:!1,convertRealFactor:0,associatedEffect:12,promptName:"Pulse Width",promptDesc:["This setting controls the width of this instrument's pulse wave, just like the pulse width slider.","At $HI, your instrument will sound like a pure square wave (on 50% of the time). It will gradually sound narrower down to $LO, where it will be inaudible (as it is on 0% of the time).","Changing pulse width randomly between a few values is a common strategy in chiptune music to lend some personality to a lead instrument.","[OVERWRITING] [$LO - $HI] [%Duty]"]},{name:"detune",pianoName:"Detune",maxRawVol:u.detuneMax-u.detuneMin,newNoteVol:u.detuneCenter,forSong:!1,convertRealFactor:-u.detuneCenter,associatedEffect:8,promptName:"Instrument Detune",promptDesc:["This setting controls the detune for this instrument, just like the detune slider.","At $MID, your instrument will have no detune applied. Each tick corresponds to one cent, or one-hundredth of a pitch. Thus, each change of 100 ticks corresponds to one half-step of detune, up to two half-steps up at $HI, or two half-steps down at $LO.","[OVERWRITING] [$LO - $HI] [cents]"]},{name:"vibrato depth",pianoName:"Vibrato Depth",maxRawVol:50,newNoteVol:0,forSong:!1,convertRealFactor:0,associatedEffect:9,promptName:"Vibrato Depth",promptDesc:["This setting controls the amount that your pitch moves up and down by during vibrato, just like the vibrato depth slider.","At $LO, your instrument will have no vibrato depth so its vibrato would be inaudible. This increases up to $HI, where an extreme pitch change will be noticeable.","[OVERWRITING] [$LO - $HI] [pitch ÷25]"]},{name:"song detune",pianoName:"Detune",maxRawVol:u.songDetuneMax-u.songDetuneMin,newNoteVol:Math.ceil((u.songDetuneMax-u.songDetuneMin)/2),forSong:!0,convertRealFactor:-250,associatedEffect:12,promptName:"Song Detune",promptDesc:["This setting controls the overall detune of the entire song. There is no associated slider.","At $MID, your song will have no extra detune applied and sound unchanged from default. Each tick corresponds to four cents, or four hundredths of a pitch. Thus, each change of 25 ticks corresponds to one half-step of detune, up to 10 half-steps up at $HI, or 10 half-steps down at $LO.","[MULTIPLICATIVE] [$LO - $HI] [cents x4]"]},{name:"vibrato speed",pianoName:"Vibrato Speed",maxRawVol:30,newNoteVol:0,forSong:!1,convertRealFactor:0,associatedEffect:9,promptName:"Vibrato Speed",promptDesc:["This setting controls the speed your instrument will vibrato at, just like the slider.","A setting of $LO means there will be no oscillation, and vibrato will be disabled. Higher settings will increase the speed, up to a dramatic trill at the max value, $HI.","[OVERWRITING] [$LO - $HI]"]},{name:"vibrato delay",pianoName:"Vibrato Delay",maxRawVol:50,newNoteVol:0,forSong:!1,convertRealFactor:0,associatedEffect:9,promptName:"Vibrato Delay",promptDesc:["This setting controls the amount of time vibrato will be held off for before triggering for every new note, just like the slider.","A setting of $LO means there will be no delay. A setting of 24 corresponds to one full beat of delay. As a sole exception to this scale, setting delay to $HI will completely disable vibrato (as if it had infinite delay).","[OVERWRITING] [$LO - $HI] [beats ÷24]"]},{name:"arp speed",pianoName:"Arp Speed",maxRawVol:50,newNoteVol:12,forSong:!1,convertRealFactor:0,associatedEffect:11,promptName:"Arpeggio Speed",promptDesc:["This setting controls the speed at which your instrument's chords arpeggiate, just like the arpeggio speed slider.","Each setting corresponds to a different speed, from the slowest to the fastest. The speeds are listed below.","[0-4]: x0, x1/16, x⅛, x⅕, x¼,","[5-9]: x⅓, x⅖, x½, x⅔, x¾,","[10-14]: x⅘, x0.9, x1, x1.1, x1.2,","[15-19]: x1.3, x1.4, x1.5, x1.6, x1.7,","[20-24]: x1.8, x1.9, x2, x2.1, x2.2,","[25-29]: x2.3, x2.4, x2.5, x2.6, x2.7,","[30-34]: x2.8, x2.9, x3, x3.1, x3.2,","[35-39]: x3.3, x3.4, x3.5, x3.6, x3.7,","[40-44]: x3.8, x3.9, x4, x4.15, x4.3,","[45-50]: x4.5, x4.8, x5, x5.5, x6, x8","[OVERWRITING] [$LO - $HI]"]},{name:"pan delay",pianoName:"Pan Delay",maxRawVol:20,newNoteVol:10,forSong:!1,convertRealFactor:0,associatedEffect:2,promptName:"Panning Delay",promptDesc:["This setting controls the delay applied to panning for your instrument, just like the pan delay slider.","With more delay, the panning effect will generally be more pronounced. $MID is the default value, whereas $LO will remove any delay at all. No delay can be desirable for chiptune songs.","[OVERWRITING] [$LO - $HI]"]},{name:"reset arp",pianoName:"Reset Arp",maxRawVol:1,newNoteVol:1,forSong:!1,convertRealFactor:0,associatedEffect:11,promptName:"Reset Arpeggio",promptDesc:["This setting functions a little different from most. Wherever a note is placed, the arpeggio of this instrument will reset at the very start of that note. This is most noticeable with lower arpeggio speeds. The lengths and values of notes for this setting don't matter, just the note start times.","This mod can be used to sync up your apreggios so that they always sound the same, even if you are using an odd-ratio arpeggio speed or modulating arpeggio speed.","[$LO - $HI]"]},{name:"eq filter",pianoName:"EQFlt",maxRawVol:10,newNoteVol:0,forSong:!1,convertRealFactor:0,associatedEffect:12,promptName:"EQ Filter",promptDesc:["This setting controls a few separate things for your instrument's EQ filter.","When the option 'morph' is selected, your modulator values will indicate a sub-filter index of your EQ filter to 'morph' to over time. For example, a change from 0 to 1 means your main filter (default) will morph to sub-filter 1 over the specified duration. You can shape the main filter and sub-filters in the large filter editor ('+' button). If your two filters' number, type, and order of filter dots all match up, the morph will happen smoothly and you'll be able to hear them changing. If they do not match up, the filters will simply jump between each other.","Note that filters will morph based on endpoints in the pattern editor. So, if you specify a morph from sub-filter 1 to 4 but do not specifically drag in new endpoints for 2 and 3, it will morph directly between 1 and 4 without going through the others.","If you target Dot X or Dot Y, you can finely tune the coordinates of a single dot for your filter. The number of available dots to choose is dependent on your main filter's dot count.","[OVERWRITING] [$LO - $HI]"]},{name:"note filter",pianoName:"N.Flt",maxRawVol:10,newNoteVol:0,forSong:!1,convertRealFactor:0,associatedEffect:5,promptName:"Note Filter",promptDesc:["This setting controls a few separate things for your instrument's note filter.","When the option 'morph' is selected, your modulator values will indicate a sub-filter index of your note filter to 'morph' to over time. For example, a change from 0 to 1 means your main filter (default) will morph to sub-filter 1 over the specified duration. You can shape the main filter and sub-filters in the large filter editor ('+' button). If your two filters' number, type, and order of filter dots all match up, the morph will happen smoothly and you'll be able to hear them changing. If they do not match up, the filters will simply jump between each other.","Note that filters will morph based on endpoints in the pattern editor. So, if you specify a morph from sub-filter 1 to 4 but do not specifically drag in new endpoints for 2 and 3, it will morph directly between 1 and 4 without going through the others.","If you target Dot X or Dot Y, you can finely tune the coordinates of a single dot for your filter. The number of available dots to choose is dependent on your main filter's dot count.","[OVERWRITING] [$LO - $HI]"]},{name:"bit crush",pianoName:"Bitcrush",maxRawVol:u.bitcrusherQuantizationRange-1,newNoteVol:Math.round(u.bitcrusherQuantizationRange/2),forSong:!1,convertRealFactor:0,associatedEffect:4,promptName:"Instrument Bit Crush",promptDesc:["This setting controls the bit crush of your instrument, just like the bit crush slider.","At a value of $LO, no bit crush will be applied. This increases and the bit crush effect gets more noticeable up to the max value, $HI.","[OVERWRITING] [$LO - $HI]"]},{name:"freq crush",pianoName:"Freq Crush",maxRawVol:u.bitcrusherFreqRange-1,newNoteVol:Math.round(u.bitcrusherFreqRange/2),forSong:!1,convertRealFactor:0,associatedEffect:4,promptName:"Instrument Frequency Crush",promptDesc:["This setting controls the frequency crush of your instrument, just like the freq crush slider.","At a value of $LO, no frequency crush will be applied. This increases and the frequency crush effect gets more noticeable up to the max value, $HI.","[OVERWRITING] [$LO - $HI]"]},{name:"echo",pianoName:"Echo",maxRawVol:u.echoSustainRange-1,newNoteVol:0,forSong:!1,convertRealFactor:0,associatedEffect:6,promptName:"Instrument Echo Sustain",promptDesc:["This setting controls the echo sustain (echo loudness) of your instrument, just like the echo slider.","At $LO, your instrument will have no echo sustain and echo will not be audible. Echo sustain increases and the echo effect gets more noticeable up to the max value, $HI.","[OVERWRITING] [$LO - $HI]"]},{name:"echo delay",pianoName:"Echo Delay",maxRawVol:u.echoDelayRange,newNoteVol:0,forSong:!1,convertRealFactor:0,associatedEffect:12,promptName:"Instrument Echo Delay",promptDesc:["This setting controls the echo delay of your instrument, just like the echo delay slider.","At $LO, your instrument will have very little echo delay, and this increases up to 2 beats of delay at $HI.","[OVERWRITING] [$LO - $HI] [~beats ÷12]"]},{name:"chorus",pianoName:"Chorus",maxRawVol:u.chorusRange-1,newNoteVol:0,forSong:!1,convertRealFactor:0,associatedEffect:1,promptName:"Instrument Chorus",promptDesc:["This setting controls the chorus strength of your instrument, just like the chorus slider.","At $LO, the chorus effect will be disabled. The strength of the chorus effect increases up to the max value, $HI.","[OVERWRITING] [$LO - $HI]"]},{name:"eq filt cut",pianoName:"EQFlt Cut",maxRawVol:u.filterSimpleCutRange-1,newNoteVol:u.filterSimpleCutRange-1,forSong:!1,convertRealFactor:0,associatedEffect:12,promptName:"EQ Filter Cutoff Frequency",promptDesc:["This setting controls the filter cut position of your instrument, just like the filter cut slider.","This setting is roughly analagous to the horizontal position of a single low-pass dot on the advanced filter editor. At lower values, a wider range of frequencies is cut off.","[OVERWRITING] [$LO - $HI]"]},{name:"eq filt peak",pianoName:"EQFlt Peak",maxRawVol:u.filterSimplePeakRange-1,newNoteVol:0,forSong:!1,convertRealFactor:0,associatedEffect:12,promptName:"EQ Filter Peak Gain",promptDesc:["This setting controls the filter peak position of your instrument, just like the filter peak slider.","This setting is roughly analagous to the vertical position of a single low-pass dot on the advanced filter editor. At lower values, the cutoff frequency will not be emphasized, and at higher values you will hear emphasis on the cutoff frequency.","[OVERWRITING] [$LO - $HI]"]},{name:"note filt cut",pianoName:"N.Flt Cut",maxRawVol:u.filterSimpleCutRange-1,newNoteVol:u.filterSimpleCutRange-1,forSong:!1,convertRealFactor:0,associatedEffect:5,promptName:"Note Filter Cutoff Frequency",promptDesc:["This setting controls the filter cut position of your instrument, just like the filter cut slider.","This setting is roughly analagous to the horizontal position of a single low-pass dot on the advanced filter editor. At lower values, a wider range of frequencies is cut off.","[OVERWRITING] [$LO - $HI]"]},{name:"note filt peak",pianoName:"N.Flt Peak",maxRawVol:u.filterSimplePeakRange-1,newNoteVol:0,forSong:!1,convertRealFactor:0,associatedEffect:5,promptName:"Note Filter Peak Gain",promptDesc:["This setting controls the filter peak position of your instrument, just like the filter peak slider.","This setting is roughly analagous to the vertical position of a single low-pass dot on the advanced filter editor. At lower values, the cutoff frequency will not be emphasized, and at higher values you will hear emphasis on the cutoff frequency.","[OVERWRITING] [$LO - $HI]"]},{name:"pitch shift",pianoName:"Pitch Shift",maxRawVol:u.pitchShiftRange-1,newNoteVol:u.pitchShiftCenter,forSong:!1,convertRealFactor:-u.pitchShiftCenter,associatedEffect:7,promptName:"Pitch Shift",promptDesc:["This setting controls the pitch offset of your instrument, just like the pitch shift slider.","At $MID your instrument will have no pitch shift. This increases as you decrease toward $LO pitches (half-steps) at the low end, or increases towards +$HI pitches at the high end.","[OVERWRITING] [$LO - $HI] [pitch]"]},{name:"sustain",pianoName:"Sustain",maxRawVol:u.stringSustainRange-1,newNoteVol:0,forSong:!1,convertRealFactor:0,associatedEffect:12,promptName:"Picked String Sustain",promptDesc:["This setting controls the sustain of your picked string instrument, just like the sustain slider.","At $LO, your instrument will have minimum sustain and sound 'plucky'. This increases to a more held sound as your modulator approaches the maximum, $HI.","[OVERWRITING] [$LO - $HI]"]},{name:"mix volume",pianoName:"Mix Vol.",maxRawVol:u.volumeRange,newNoteVol:Math.ceil(u.volumeRange/2),forSong:!1,convertRealFactor:Math.ceil(-u.volumeRange/2),associatedEffect:12,promptName:"Mix Volume",promptDesc:["This setting affects the volume of your instrument as if its volume slider had been moved.","At $MID, an instrument's volume will be unchanged from default. This means you can still use the volume sliders to mix the base volume of instruments, since this setting and the default value work multiplicatively. The volume gradually increases up to $HI, or decreases down to mute at $LO.","Unlike the 'note volume' setting, mix volume is very straightforward and simply affects the resultant instrument volume after all effects are applied.","[MULTIPLICATIVE] [$LO - $HI]"]},{name:"fm slider 5",pianoName:"FM 5",maxRawVol:15,newNoteVol:15,forSong:!1,convertRealFactor:0,associatedEffect:12,promptName:"FM Slider 5",promptDesc:["This setting affects the strength of the fifth FM slider, just like the corresponding slider on your instrument.","It works in a multiplicative way, so at $HI your slider will sound the same is its default value, and at $LO it will sound like it has been moved all the way to the left.","For the full range of control with this mod, move your underlying slider all the way to the right.","[MULTIPLICATIVE] [$LO - $HI] [%]"]},{name:"fm slider 6",pianoName:"FM 6",maxRawVol:15,newNoteVol:15,forSong:!1,convertRealFactor:0,associatedEffect:12,promptName:"FM Slider 6",promptDesc:["This setting affects the strength of the sixth FM slider, just like the corresponding slider on your instrument.","It works in a multiplicative way, so at $HI your slider will sound the same is its default value, and at $LO it will sound like it has been moved all the way to the left.","For the full range of control with this mod, move your underlying slider all the way to the right.","[MULTIPLICATIVE] [$LO - $HI] [%]"]},{name:"decimal offset",pianoName:"Decimal Offset",maxRawVol:100,newNoteVol:0,forSong:!1,convertRealFactor:0,invertSliderIndicator:!0,associatedEffect:12,promptName:"Decimal Offset",promptDesc:["This setting controls the decimal offset that is subtracted from the pulse width; use this for creating values like 12.5 or 6.25.","[$LO - $HI]"]},{name:"envelope speed",pianoName:"EnvelopeSpd",maxRawVol:50,newNoteVol:12,forSong:!1,convertRealFactor:0,associatedEffect:12,promptName:"Envelope Speed",promptDesc:["This setting controls how fast all of the envelopes for the instrument play.","At $LO, your instrument's envelopes will be frozen, and at values near there they will change very slowly. At 12, the envelopes will work as usual, performing at normal speed. This increases up to $HI, where the envelopes will change very quickly. The speeds are given below:","[0-4]: x0, x1/16, x⅛, x⅕, x¼,","[5-9]: x⅓, x⅖, x½, x⅔, x¾,","[10-14]: x⅘, x0.9, x1, x1.1, x1.2,","[15-19]: x1.3, x1.4, x1.5, x1.6, x1.7,","[20-24]: x1.8, x1.9, x2, x2.1, x2.2,","[25-29]: x2.3, x2.4, x2.5, x2.6, x2.7,","[30-34]: x2.8, x2.9, x3, x3.1, x3.2,","[35-39]: x3.3, x3.4, x3.5, x3.6, x3.7,","[40-44]: x3.8, x3.9, x4, x4.15, x4.3,","[45-50]: x4.5, x4.8, x5, x5.5, x6, x8","[OVERWRITING] [$LO - $HI]"]},{name:"dynamism",pianoName:"Dynamism",maxRawVol:u.supersawDynamismMax,newNoteVol:0,forSong:!1,convertRealFactor:0,associatedEffect:12,promptName:"Supersaw Dynamism",promptDesc:["This setting controls the supersaw dynamism of your instrument, just like the dynamism slider.","At $LO, your instrument will have only a single pulse contributing. Increasing this will raise the contribution of other waves which is similar to a chorus effect. The effect gets more noticeable up to the max value, $HI.","[OVERWRITING] [$LO - $HI]"]},{name:"spread",pianoName:"Spread",maxRawVol:u.supersawSpreadMax,newNoteVol:0,forSong:!1,convertRealFactor:0,associatedEffect:12,promptName:"Supersaw Spread",promptDesc:["This setting controls the supersaw spread of your instrument, just like the spread slider.","At $LO, all the pulses in your supersaw will be at the same frequency. Increasing this value raises the frequency spread of the contributing waves, up to a dissonant spread at the max value, $HI.","[OVERWRITING] [$LO - $HI]"]},{name:"saw shape",pianoName:"Saw Shape",maxRawVol:u.supersawShapeMax,newNoteVol:0,forSong:!1,convertRealFactor:0,associatedEffect:12,promptName:"Supersaw Shape",promptDesc:["This setting controls the supersaw shape of your instrument, just like the Saw↔Pulse slider.","As the slider's name implies, this effect will give you a sawtooth wave at $LO, and a full pulse width wave at $HI. Values in between will be a blend of the two.","[OVERWRITING] [$LO - $HI] [%]"]},{name:"dutyCycle Speed",pianoName:"Cycle Speed",maxRawVol:2*u.pulseWidthRange,newNoteVol:2*u.pulseWidthRange,forSong:!1,convertRealFactor:0,associatedEffect:12,promptName:"Duty Cycle Speed",promptDesc:["This setting controls the speed at which Duty Cycle cycles between pulse widths, just like the arpeggio speed slider.","Each setting corresponds to a different speed, from the slowest to the fastest. The speeds are listed below.","[0-4]: x0, x1/16, x⅛, x⅕, x¼,","[5-9]: x⅓, x⅖, x½, x⅔, x¾,","[10-14]: x⅘, x0.9, x1, x1.1, x1.2,","[15-19]: x1.3, x1.4, x1.5, x1.6, x1.7,","[20-24]: x1.8, x1.9, x2, x2.1, x2.2,","[25-29]: x2.3, x2.4, x2.5, x2.6, x2.7,","[30-34]: x2.8, x2.9, x3, x3.1, x3.2,","[35-39]: x3.3, x3.4, x3.5, x3.6, x3.7,","[40-44]: x3.8, x3.9, x4, x4.15, x4.3,","[45-50]: x4.5, x4.8, x5, x5.5, x6, x8","[51-55]: x16, x32, x64, x128, x1024","[56-59]: x2048, x8192, x16384, x32768, x65536","[60-64]: x131072, x262144, x524288, x1048576","[OVERWRITING] [$LO - $HI]"]}]),/Android|webOS|iPhone|iPad|iPod|BlackBerry|IEMobile|Opera Mini|android|ipad|playbook|silk/i.test(navigator.userAgent);class D{static valueToPreset(e){var t;const i=e>>6,n=63&e;return null===(t=D.presetCategories[i])||void 0===t?void 0:t.presets[n]}static midiProgramToPresetValue(e){for(let t=0;t<D.presetCategories.length;t++){const i=D.presetCategories[t];for(let n=0;n<i.presets.length;n++){const s=i.presets[n];if(s.generalMidi&&s.midiProgram==e)return(t<<6)+n}}return null}static nameToPresetValue(e){for(let t=0;t<D.presetCategories.length;t++){const i=D.presetCategories[t];for(let n=0;n<i.presets.length;n++){if(i.presets[n].name==e)return(t<<6)+n}}return null}static instrumentToPreset(e){var t;return null===(t=D.presetCategories[0].presets.dictionary)||void 0===t?void 0:t[null==i?void 0:i[e]]}}function O(e,t){for(let i=0;i<e.length;i++)e[i]*=t}function C(e){if(!function(e){return!(!e||e&e-1)}(e))throw new Error("FFT array length must be a power of 2.");return Math.round(Math.log(e)/Math.log(2))}function W(e,t){const i=C(t);if(t<4)throw new Error("FFT array length must be at least 4.");for(let n=i-1;n>=2;n--){const i=1<<n,s=i>>1,a=i<<1,r=2*Math.PI/a,o=Math.cos(r),l=Math.sin(r),p=2*o;for(let n=0;n<t;n+=a){const t=n,a=t+s,r=t+i,u=r+s,c=r+i,h=e[t],f=e[r];e[t]=h+f,e[a]*=2,e[r]=h-f,e[u]*=2;let d=o,m=-l,y=1,v=0;for(let i=1;i<s;i++){const n=t+i,s=r-i,a=r+i,o=c-i,l=e[n],u=e[s],h=e[a],f=e[o],g=l-u,b=h+f;e[n]=l+u,e[s]=f-h,e[a]=g*d-b*m,e[o]=b*d+g*m;const S=p*d-y,w=p*m-v;y=d,v=m,d=S,m=w}}}for(let i=0;i<t;i+=4){const t=i+1,n=i+2,s=i+3,a=e[i],r=2*e[t],o=e[n],l=2*e[s],p=a+o,u=a-o;e[i]=p+r,e[t]=p-r,e[n]=u+l,e[s]=u-l}!function(e,t){const i=C(t);if(i>16)throw new Error("FFT array length must not be greater than 2^16.");const n=16-i;for(let i=0;i<t;i++){let t;if(t=(43690&i)>>1|(21845&i)<<1,t=(52428&t)>>2|(13107&t)<<2,t=(61680&t)>>4|(3855&t)<<4,t=(t>>8|(255&t)<<8)>>n,t>i){let n=e[i];e[i]=e[t],e[t]=n}}}(e,t)}D.version="0.0.11",D.versionDisplayName="Unbox "+D.version,D.releaseNotesURL="./patch_notes.html",D.informationURL="./information.html",D.isOnMac=/^Mac/i.test(navigator.platform)||/Mac OS X/i.test(navigator.userAgent)||/^(iPhone|iPad|iPod)/i.test(navigator.platform)||/(iPhone|iPad|iPod)/i.test(navigator.userAgent),D.ctrlSymbol=D.isOnMac?"⌘":"Ctrl+",D.ctrlName=D.isOnMac?"command":"control",D.presetCategories=S([{name:"Custom Instruments",presets:S([{name:i[0],customType:0},{name:i[1],customType:1},{name:i[2],customType:2},{name:i[3],customType:3},{name:i[4],customType:4},{name:i[5],customType:5},{name:i[6],customType:6},{name:i[7],customType:7},{name:i[8],customType:8},{name:i[9],customType:9},{name:i[10],customType:10},{name:i[12],customType:12}])},{name:"Retro Presets",presets:S([{name:"square wave",midiProgram:80,settings:{type:"chip",eqFilter:[],effects:["aliasing"],transition:"interrupt",fadeInSeconds:0,fadeOutTicks:-1,chord:"arpeggio",wave:"square",unison:"none",envelopes:[]}},{name:"triangle wave",midiProgram:71,settings:{type:"chip",eqFilter:[],effects:["aliasing"],transition:"interrupt",fadeInSeconds:0,fadeOutTicks:-1,chord:"arpeggio",wave:"triangle",unison:"none",envelopes:[]}},{name:"sawtooth wave",midiProgram:81,settings:{type:"chip",eqFilter:[],effects:["aliasing"],transition:"interrupt",fadeInSeconds:0,fadeOutTicks:-1,chord:"arpeggio",wave:"sawtooth",unison:"none",envelopes:[]}},{name:"square lead",midiProgram:80,generalMidi:!0,settings:{type:"chip",eqFilter:[{type:"low-pass",cutoffHz:8e3,linearGain:.3536}],effects:["aliasing"],transition:"normal",fadeInSeconds:0,fadeOutTicks:-3,chord:"simultaneous",wave:"square",unison:"hum",envelopes:[]}},{name:"sawtooth lead 1",midiProgram:81,generalMidi:!0,settings:{type:"chip",eqFilter:[{type:"low-pass",cutoffHz:4e3,linearGain:.5}],effects:["aliasing"],transition:"normal",fadeInSeconds:0,fadeOutTicks:-3,chord:"simultaneous",wave:"sawtooth",unison:"shimmer",envelopes:[]}},{name:"sawtooth lead 2",midiProgram:81,settings:{type:"chip",eqFilter:[{type:"low-pass",cutoffHz:6727.17,linearGain:1}],effects:["vibrato","aliasing"],vibrato:"light",transition:"normal",fadeInSeconds:.0125,fadeOutTicks:72,chord:"simultaneous",wave:"sawtooth",unison:"hum",envelopes:[]}},{name:"chip noise",midiProgram:116,isNoise:!0,settings:{type:"noise",transition:"hard",effects:["aliasing"],chord:"arpeggio",filterCutoffHz:4e3,filterResonance:0,filterEnvelope:"steady",wave:"retro"}},{name:"supersaw lead",midiProgram:81,settings:{type:"supersaw",eqFilter:[{type:"low-pass",cutoffHz:6727.17,linearGain:2}],effects:["reverb"],reverb:67,fadeInSeconds:0,fadeOutTicks:-6,pulseWidth:50,dynamism:100,spread:58,shape:0,envelopes:[]}},{name:"FM twang",midiProgram:32,settings:{type:"FM",eqFilter:[],effects:[],transition:"normal",fadeInSeconds:0,fadeOutTicks:-3,chord:"simultaneous",algorithm:"1←(2 3 4)",feedbackType:"1⟲",feedbackAmplitude:0,operators:[{frequency:"1×",amplitude:15},{frequency:"1×",amplitude:15},{frequency:"1×",amplitude:0},{frequency:"1×",amplitude:0}],envelopes:[{target:"operatorAmplitude",envelope:"twang 2",index:1}]}},{name:"FM bass",midiProgram:36,settings:{type:"FM",eqFilter:[],effects:[],transition:"normal",fadeInSeconds:0,fadeOutTicks:-3,chord:"custom interval",algorithm:"1←(2 3←4)",feedbackType:"1⟲",feedbackAmplitude:0,operators:[{frequency:"2×",amplitude:11},{frequency:"1×",amplitude:7},{frequency:"1×",amplitude:9},{frequency:"20×",amplitude:3}],envelopes:[{target:"operatorAmplitude",envelope:"twang 2",index:1},{target:"operatorAmplitude",envelope:"twang 3",index:2},{target:"operatorAmplitude",envelope:"twang 2",index:3}]}},{name:"FM flute",midiProgram:73,settings:{type:"FM",eqFilter:[],effects:[],transition:"normal",fadeInSeconds:.0263,fadeOutTicks:-3,chord:"simultaneous",algorithm:"1←(2 3 4)",feedbackType:"1⟲",feedbackAmplitude:0,operators:[{frequency:"1×",amplitude:15},{frequency:"1×",amplitude:6},{frequency:"1×",amplitude:0},{frequency:"1×",amplitude:0}],envelopes:[{target:"operatorAmplitude",envelope:"twang 2",index:1}]}},{name:"FM organ",midiProgram:16,settings:{type:"FM",eqFilter:[],effects:["vibrato"],vibrato:"delayed",transition:"normal",fadeInSeconds:.0263,fadeOutTicks:-3,chord:"custom interval",algorithm:"1←3 2←4",feedbackType:"1⟲ 2⟲",feedbackAmplitude:0,operators:[{frequency:"1×",amplitude:14},{frequency:"2×",amplitude:14},{frequency:"1×",amplitude:11},{frequency:"2×",amplitude:11}],envelopes:[]}},{name:"FM sine",midiProgram:55,settings:{type:"FM",eqFilter:[],eqFilterType:!0,eqSimpleCut:10,eqSimplePeak:0,envelopeSpeed:12,discreteEnvelope:!1,effects:[],panDelay:10,fadeInSeconds:0,fadeOutTicks:-1,algorithm:"1 2 3 4",feedbackType:"1⟲",feedbackAmplitude:0,operators:[{frequency:"1×",amplitude:15,waveform:"sine",pulseWidth:5},{frequency:"1×",amplitude:0,waveform:"sine",pulseWidth:5},{frequency:"1×",amplitude:0,waveform:"sine"},{frequency:"1×",amplitude:0,waveform:"sine"},{frequency:"1×",amplitude:0,waveform:"sine"},{frequency:"1×",amplitude:0,waveform:"sine"}],envelopes:[]}},{name:"NES Pulse",midiProgram:80,settings:{type:"custom chip",effects:["aliasing"],transition:"normal",fadeInSeconds:0,fadeOutTicks:-3,chord:"arpeggio",eqFilter:[{type:"low-pass",cutoffHz:8e3,linearGain:.5}],unison:"none",vibrato:"none",envelopes:[],customChipWave:[-24,-24,-24,-24,-23,-23,-23,-23,-22,-22,-22,-22,-21,-21,-21,-21,-20,-20,-20,-20,-19,-19,-19,-19,-18,-18,-18,-18,-17,-17,-17,-17,24,24,24,24,23,23,23,23,22,22,22,22,21,21,21,21,20,20,20,20,19,19,19,19,18,18,18,18,17,17,17,17]}},{name:"Gameboy Pulse",midiProgram:80,settings:{type:"custom chip",effects:["aliasing"],transition:"normal",fadeInSeconds:0,fadeOutTicks:-3,chord:"arpeggio",eqFilter:[{type:"low-pass",cutoffHz:8e3,linearGain:.5}],unison:"none",envelopes:[],customChipWave:[-24,-20,-17,-15,-13,-13,-11,-11,-11,-9,-9,-9,-9,-7,-7,-7,-7,-7,-5,-5,-5,-5,-5,-5,-3,-3,-3,-3,-3,-3,-3,-3,24,20,17,15,13,13,11,11,11,9,9,9,9,7,7,7,7,7,5,5,5,5,5,5,3,3,3,3,3,3,3,3]}},{name:"VRC6 Sawtooth",midiProgram:81,settings:{type:"custom chip",effects:["aliasing"],transition:"normal",fadeInSeconds:0,fadeOutTicks:-3,chord:"arpeggio",eqFilter:[{type:"low-pass",cutoffHz:8e3,linearGain:.5}],unison:"none",envelopes:[],customChipWave:[-24,-20,-16,-13,-10,-8,-6,-5,-4,-4,0,0,0,0,4,4,4,4,4,4,8,8,8,8,8,8,8,8,12,12,12,12,12,12,12,12,16,16,16,16,16,16,16,16,20,20,20,20,20,20,20,20,24,24,24,24,24,24,24,24,24,24,24,24]}},{name:"Atari Square",midiProgram:80,settings:{type:"custom chip",effects:["aliasing"],transition:"normal",fadeInSeconds:0,fadeOutTicks:-3,chord:"arpeggio",eqFilter:[{type:"low-pass",cutoffHz:4e3,linearGain:.5}],unison:"none",envelopes:[],customChipWave:[-24,-24,-24,-23,-23,-23,-22,-22,-22,-21,-21,-21,-20,-20,-20,-19,-19,-19,-18,-18,-18,-17,-17,-17,-16,-16,-16,-15,-15,-15,-14,-14,-14,-13,-13,-13,24,24,24,23,23,23,22,22,22,21,21,21,20,20,20,19,19,19,18,18,18,17,17,17,16,16,15,15]}},{name:"Atari Bass",midiProgram:36,settings:{type:"custom chip",effects:["aliasing"],transition:"interrupt",fadeInSeconds:0,fadeOutTicks:-3,chord:"arpeggio",eqFilter:[{type:"low-pass",cutoffHz:4e3,linearGain:.5}],unison:"none",envelopes:[],customChipWave:[-24,-24,-24,-24,-24,-24,-24,-24,-24,24,24,24,24,24,24,-24,-24,-24,24,24,24,-24,-24,-24,24,24,24,-24,-24,-24,24,24,-24,-24,-24,-24,-24,-24,-24,-24,-24,24,24,24,24,24,24,-24,-24,24,24,24,24,24,-24,-24,-24,-24,24,24,-24,-24,24,24]}},{name:"Sunsoft Bass",midiProgram:36,settings:{type:"custom chip",effects:["aliasing"],transition:"normal",fadeInSeconds:0,fadeOutTicks:-3,chord:"arpeggio",eqFilter:[{type:"low-pass",cutoffHz:4e3,linearGain:.5}],unison:"none",envelopes:[],customChipWave:[24,24,15,15,9,9,-4,-4,0,0,-13,-13,-19,-19,-24,-24,-24,-24,-10,-10,0,0,-7,-7,-7,-7,0,0,6,6,-4,-4,3,3,-4,-4,3,3,3,3,9,9,15,15,15,15,6,6,-4,-4,-4,-4,-4,-4,-4,-4,-4,-4,3,3,12,12,24,24]}}])},{name:"Keyboard Presets",presets:S([{name:"grand piano 1",midiProgram:0,generalMidi:!0,settings:{type:"Picked String",eqFilter:[{type:"high-pass",cutoffHz:148.65,linearGain:.7071},{type:"peak",cutoffHz:2e3,linearGain:2.8284}],effects:["note filter","reverb"],noteFilter:[{type:"low-pass",cutoffHz:8e3,linearGain:.125}],reverb:67,transition:"normal",fadeInSeconds:0,fadeOutTicks:48,chord:"simultaneous",harmonics:[100,100,86,86,86,71,71,71,0,86,71,71,71,57,57,71,57,14,57,57,57,57,57,57,57,57,29,57],unison:"piano",stringSustain:79,envelopes:[{target:"noteFilterAllFreqs",envelope:"note size"}]}},{name:"bright piano",midiProgram:1,generalMidi:!0,settings:{type:"Picked String",eqFilter:[{type:"low-pass",cutoffHz:1681.79,linearGain:.7071},{type:"high-pass",cutoffHz:148.65,linearGain:.5},{type:"peak",cutoffHz:3363.59,linearGain:1.4142}],effects:["reverb"],reverb:33,transition:"normal",fadeInSeconds:0,fadeOutTicks:24,chord:"simultaneous",harmonics:[100,100,86,86,71,71,0,71,71,71,71,71,71,14,57,57,57,57,57,57,29,57,57,57,57,57,57,57],unison:"piano",stringSustain:86,envelopes:[]}},{name:"electric grand",midiProgram:2,generalMidi:!0,settings:{type:"chip",eqFilter:[],effects:["note filter"],noteFilter:[{type:"low-pass",cutoffHz:2378.41,linearGain:.5}],transition:"normal",fadeInSeconds:0,fadeOutTicks:48,chord:"simultaneous",wave:"1/8 pulse",unison:"shimmer",envelopes:[{target:"noteFilterAllFreqs",envelope:"twang 3"}]}},{name:"honky-tonk piano",midiProgram:3,generalMidi:!0,settings:{type:"Picked String",eqFilter:[{type:"low-pass",cutoffHz:5656.85,linearGain:.3536}],effects:["reverb"],reverb:33,transition:"normal",fadeInSeconds:0,fadeOutTicks:48,chord:"simultaneous",harmonics:[100,100,86,71,86,71,43,71,43,43,57,57,57,29,57,57,57,57,57,57,43,57,57,57,43,43,43,43],unison:"honky tonk",stringSustain:71,envelopes:[]}},{name:"electric piano 1",midiProgram:4,generalMidi:!0,settings:{type:"harmonics",eqFilter:[],effects:["note filter"],noteFilter:[{type:"low-pass",cutoffHz:3363.59,linearGain:.5}],transition:"normal",fadeInSeconds:0,fadeOutTicks:-3,chord:"simultaneous",harmonics:[86,100,100,71,71,57,57,43,43,43,29,29,29,14,14,14,0,0,0,0,0,57,0,0,0,0,0,0],unison:"none",envelopes:[{target:"noteFilterAllFreqs",envelope:"twang 2"}]}},{name:"electric piano 2",midiProgram:5,generalMidi:!0,settings:{type:"FM",eqFilter:[],effects:["note filter"],noteFilter:[{type:"low-pass",cutoffHz:13454.34,linearGain:.25}],transition:"normal",fadeInSeconds:0,fadeOutTicks:48,chord:"simultaneous",algorithm:"1←3 2←4",feedbackType:"1⟲ 2⟲",feedbackAmplitude:0,operators:[{frequency:"1×",amplitude:12},{frequency:"1×",amplitude:6},{frequency:"1×",amplitude:9},{frequency:"16×",amplitude:6}],envelopes:[{target:"noteFilterAllFreqs",envelope:"twang 3"},{target:"operatorAmplitude",envelope:"twang 3",index:3}]}},{name:"harpsichord",midiProgram:6,generalMidi:!0,settings:{type:"Picked String",eqFilter:[{type:"high-pass",cutoffHz:250,linearGain:.3536},{type:"peak",cutoffHz:11313.71,linearGain:2.8284}],effects:["reverb"],reverb:33,transition:"normal",fadeInSeconds:0,fadeOutTicks:24,chord:"simultaneous",harmonics:[100,100,100,86,57,86,86,86,86,57,57,71,71,86,86,71,71,86,86,71,71,71,71,71,71,71,71,71],unison:"none",stringSustain:79,envelopes:[]}},{name:"clavinet",midiProgram:7,generalMidi:!0,settings:{type:"FM",eqFilter:[],effects:["note filter"],noteFilter:[{type:"low-pass",cutoffHz:19027.31,linearGain:.3536}],transition:"normal",fadeInSeconds:0,fadeOutTicks:-3,chord:"simultaneous",algorithm:"1←(2 3 4)",feedbackType:"3⟲",feedbackAmplitude:6,operators:[{frequency:"3×",amplitude:15},{frequency:"~1×",amplitude:6},{frequency:"8×",amplitude:4},{frequency:"1×",amplitude:0}],envelopes:[{target:"noteFilterAllFreqs",envelope:"twang 2"},{target:"feedbackAmplitude",envelope:"twang 2"}]}},{name:"dulcimer",midiProgram:15,generalMidi:!0,settings:{type:"Picked String",eqFilter:[{type:"low-pass",cutoffHz:8e3,linearGain:.3536}],effects:["reverb"],reverb:33,transition:"normal",fadeInSeconds:0,fadeOutTicks:48,chord:"strum",harmonics:[100,100,100,86,100,86,57,100,100,86,100,86,100,86,100,71,57,71,71,100,86,71,86,86,100,86,86,86],unison:"piano",stringSustain:79,envelopes:[]}},{name:"grand piano 2",midiProgram:0,generalMidi:!0,settings:{type:"harmonics",eqFilter:[{type:"high-pass",cutoffHz:148.65,linearGain:.7071},{type:"peak",cutoffHz:2e3,linearGain:2.8284}],effects:["note filter","reverb"],noteFilter:[{type:"low-pass",cutoffHz:8e3,linearGain:.125}],reverb:67,transition:"normal",fadeInSeconds:0,fadeOutTicks:48,chord:"simultaneous",harmonics:[100,86,86,86,86,71,71,57,0,57,29,43,57,57,57,43,43,0,29,43,43,43,43,43,43,29,0,29],unison:"piano",stringSustain:79,envelopes:[{target:"noteFilterAllFreqs",envelope:"note size"}]}},{name:"grand piano 3",midiProgram:0,generalMidi:!0,settings:{type:"Picked String",eqFilter:[{type:"high-pass",cutoffHz:148.65,linearGain:.7071},{type:"peak",cutoffHz:1681.79,linearGain:4},{type:"low-pass",cutoffHz:8e3,linearGain:.1768},{type:"peak",cutoffHz:3363.59,linearGain:4},{type:"peak",cutoffHz:2378.41,linearGain:.25}],effects:["note filter","reverb"],noteFilter:[{type:"low-pass",cutoffHz:4756.83,linearGain:.3536},{type:"high-pass",cutoffHz:125,linearGain:.0884}],reverb:67,fadeInSeconds:0,fadeOutTicks:48,harmonics:[100,100,86,86,86,71,71,71,0,71,71,71,71,57,57,71,57,14,57,57,57,57,57,57,57,57,29,57],unison:"piano",stringSustain:86,stringSustainType:"acoustic",envelopes:[{target:"noteFilterFreq",envelope:"note size",index:0},{target:"noteFilterFreq",envelope:"twang 1",index:1},{target:"noteFilterFreq",envelope:"twang 1",index:1}]}}])},{name:"Idiophone Presets",presets:S([{name:"celesta",midiProgram:8,generalMidi:!0,settings:{type:"FM",effects:"reverb",transition:"hard fade",chord:"strum",filterCutoffHz:5657,filterResonance:14,filterEnvelope:"twang 2",vibrato:"none",algorithm:"(1 2)←(3 4)",feedbackType:"1⟲ 2⟲",feedbackAmplitude:0,feedbackEnvelope:"steady",operators:[{frequency:"~1×",amplitude:11,envelope:"custom"},{frequency:"8×",amplitude:6,envelope:"custom"},{frequency:"20×",amplitude:3,envelope:"twang 1"},{frequency:"3×",amplitude:1,envelope:"twang 2"}]}},{name:"glockenspiel",midiProgram:9,generalMidi:!0,settings:{type:"FM",effects:"reverb",transition:"hard fade",chord:"strum",filterCutoffHz:5657,filterResonance:14,filterEnvelope:"twang 2",vibrato:"none",algorithm:"(1 2 3)←4",feedbackType:"1⟲ 2⟲ 3⟲",feedbackAmplitude:2,feedbackEnvelope:"decay 1",operators:[{frequency:"1×",amplitude:7,envelope:"custom"},{frequency:"5×",amplitude:11,envelope:"custom"},{frequency:"8×",amplitude:7,envelope:"custom"},{frequency:"20×",amplitude:2,envelope:"twang 1"}]}},{name:"music box 1",midiProgram:10,generalMidi:!0,settings:{type:"Picked String",eqFilter:[{type:"low-pass",cutoffHz:4756.83,linearGain:.5}],effects:["reverb"],reverb:33,transition:"normal",fadeInSeconds:0,fadeOutTicks:48,chord:"strum",harmonics:[100,0,0,100,0,0,0,0,0,0,100,0,0,0,0,0,0,0,0,86,0,0,0,0,0,0,71,0],unison:"none",stringSustain:64,envelopes:[]}},{name:"music box 2",midiProgram:10,settings:{type:"Picked String",eqFilter:[{type:"low-pass",cutoffHz:2828.43,linearGain:.7071}],effects:["reverb"],reverb:33,transition:"normal",fadeInSeconds:0,fadeOutTicks:48,chord:"strum",harmonics:[100,57,57,0,0,0,0,0,0,57,0,0,0,0,0,0,0,0,0,43,0,0,0,0,0,0,0,0],unison:"none",stringSustain:29,envelopes:[]}},{name:"vibraphone",midiProgram:11,generalMidi:!0,settings:{type:"FM",effects:"reverb",transition:"hard fade",chord:"harmony",filterCutoffHz:2828,filterResonance:14,filterEnvelope:"twang 2",vibrato:"none",algorithm:"1 2 3 4",feedbackType:"1→2→3→4",feedbackAmplitude:3,feedbackEnvelope:"twang 1",operators:[{frequency:"1×",amplitude:9,envelope:"custom"},{frequency:"~1×",amplitude:9,envelope:"custom"},{frequency:"9×",amplitude:3,envelope:"custom"},{frequency:"4×",amplitude:9,envelope:"custom"}]}},{name:"marimba",midiProgram:12,generalMidi:!0,settings:{type:"FM",effects:"reverb",transition:"hard fade",chord:"strum",filterCutoffHz:2e3,filterResonance:29,filterEnvelope:"decay 1",vibrato:"none",algorithm:"1 2←(3 4)",feedbackType:"1⟲",feedbackAmplitude:0,feedbackEnvelope:"steady",operators:[{frequency:"1×",amplitude:10,envelope:"custom"},{frequency:"4×",amplitude:6,envelope:"custom"},{frequency:"13×",amplitude:6,envelope:"twang 1"},{frequency:"1×",amplitude:0,envelope:"steady"}]}},{name:"kalimba",midiProgram:108,generalMidi:!0,settings:{type:"FM",effects:"reverb",transition:"hard fade",chord:"strum",filterCutoffHz:2828,filterResonance:14,filterEnvelope:"decay 1",vibrato:"none",algorithm:"1←(2 3 4)",feedbackType:"1⟲",feedbackAmplitude:0,feedbackEnvelope:"steady",operators:[{frequency:"1×",amplitude:11,envelope:"custom"},{frequency:"5×",amplitude:3,envelope:"twang 2"},{frequency:"20×",amplitude:3,envelope:"twang 1"},{frequency:"1×",amplitude:0,envelope:"steady"}]}},{name:"xylophone",midiProgram:13,generalMidi:!0,settings:{type:"FM",effects:"reverb",transition:"hard",chord:"strum",filterCutoffHz:2e3,filterResonance:14,filterEnvelope:"twang 1",vibrato:"none",algorithm:"(1 2 3)←4",feedbackType:"1⟲ 2⟲ 3⟲",feedbackAmplitude:0,feedbackEnvelope:"steady",operators:[{frequency:"1×",amplitude:9,envelope:"custom"},{frequency:"6×",amplitude:9,envelope:"custom"},{frequency:"11×",amplitude:9,envelope:"custom"},{frequency:"20×",amplitude:6,envelope:"twang 1"}]}},{name:"tubular bell",midiProgram:14,generalMidi:!0,midiSubharmonicOctaves:1,settings:{type:"Picked String",eqFilter:[{type:"low-pass",cutoffHz:4e3,linearGain:.5},{type:"high-pass",cutoffHz:105.11,linearGain:.3536}],effects:["reverb"],reverb:33,transition:"normal",fadeInSeconds:0,fadeOutTicks:96,chord:"strum",harmonics:[43,71,0,100,0,100,0,86,0,0,86,0,14,71,14,14,57,14,14,43,14,14,43,14,14,43,14,14],unison:"shimmer",stringSustain:86,envelopes:[]}},{name:"bell synth",midiProgram:14,settings:{type:"FM",effects:"reverb",transition:"hard fade",chord:"strum",filterCutoffHz:2e3,filterResonance:29,filterEnvelope:"twang 3",vibrato:"none",algorithm:"1←(2 3 4)",feedbackType:"1⟲",feedbackAmplitude:0,feedbackEnvelope:"steady",operators:[{frequency:"~2×",amplitude:10,envelope:"custom"},{frequency:"7×",amplitude:6,envelope:"twang 3"},{frequency:"20×",amplitude:1,envelope:"twang 1"},{frequency:"1×",amplitude:0,envelope:"steady"}]}},{name:"rain drop",midiProgram:96,generalMidi:!0,settings:{type:"FM",effects:"reverb",transition:"hard fade",chord:"strum",filterCutoffHz:4e3,filterResonance:14,filterEnvelope:"twang 1",vibrato:"none",algorithm:"(1 2)←(3 4)",feedbackType:"1⟲ 2⟲",feedbackAmplitude:0,feedbackEnvelope:"steady",operators:[{frequency:"1×",amplitude:12,envelope:"custom"},{frequency:"6×",amplitude:4,envelope:"custom"},{frequency:"20×",amplitude:3,envelope:"twang 1"},{frequency:"1×",amplitude:6,envelope:"tremolo1"}]}},{name:"crystal",midiProgram:98,generalMidi:!0,settings:{type:"FM",effects:"reverb",transition:"hard fade",chord:"harmony",filterCutoffHz:2828,filterResonance:14,filterEnvelope:"twang 2",vibrato:"delayed",algorithm:"1 2 3 4",feedbackType:"1⟲ 2⟲ 3⟲ 4⟲",feedbackAmplitude:4,feedbackEnvelope:"twang 1",operators:[{frequency:"1×",amplitude:10,envelope:"custom"},{frequency:"3×",amplitude:7,envelope:"custom"},{frequency:"6×",amplitude:4,envelope:"custom"},{frequency:"13×",amplitude:4,envelope:"custom"}]}},{name:"tinkle bell",midiProgram:112,generalMidi:!0,settings:{type:"FM",effects:"reverb",transition:"hard",chord:"strum",filterCutoffHz:2828,filterResonance:14,filterEnvelope:"twang 2",vibrato:"none",algorithm:"1 2 3 4",feedbackType:"1→2→3→4",feedbackAmplitude:5,feedbackEnvelope:"twang 3",operators:[{frequency:"~2×",amplitude:7,envelope:"custom"},{frequency:"5×",amplitude:7,envelope:"custom"},{frequency:"7×",amplitude:7,envelope:"custom"},{frequency:"16×",amplitude:7,envelope:"custom"}]}},{name:"agogo",midiProgram:113,generalMidi:!0,settings:{type:"FM",effects:"reverb",transition:"hard fade",chord:"strum",filterCutoffHz:4e3,filterResonance:14,filterEnvelope:"decay 1",vibrato:"none",algorithm:"1 2 3 4",feedbackType:"1→4",feedbackAmplitude:15,feedbackEnvelope:"decay 1",operators:[{frequency:"2×",amplitude:9,envelope:"custom"},{frequency:"5×",amplitude:6,envelope:"custom"},{frequency:"8×",amplitude:9,envelope:"custom"},{frequency:"13×",amplitude:11,envelope:"custom"}]}}])},{name:"Guitar Presets",presets:S([{name:"nylon guitar",midiProgram:24,generalMidi:!0,settings:{type:"FM",effects:"reverb",transition:"hard fade",chord:"strum",filterCutoffHz:5657,filterResonance:14,filterEnvelope:"twang 1",vibrato:"none",algorithm:"1←2←3←4",feedbackType:"3⟲",feedbackAmplitude:6,feedbackEnvelope:"twang 1",operators:[{frequency:"1×",amplitude:15,envelope:"custom"},{frequency:"1×",amplitude:6,envelope:"steady"},{frequency:"5×",amplitude:2,envelope:"steady"},{frequency:"7×",amplitude:4,envelope:"steady"}]}},{name:"steel guitar",midiProgram:25,generalMidi:!0,settings:{type:"Picked String",eqFilter:[],effects:["reverb"],reverb:33,transition:"normal",fadeInSeconds:0,fadeOutTicks:48,chord:"strum",harmonics:[100,100,86,71,71,71,86,86,71,57,43,43,43,57,57,57,57,57,43,43,43,43,43,43,43,43,43,43],unison:"none",stringSustain:71,envelopes:[]}},{name:"jazz guitar",midiProgram:26,generalMidi:!0,settings:{type:"harmonics",effects:"reverb",transition:"hard",chord:"strum",filterCutoffHz:2e3,filterResonance:14,filterEnvelope:"twang 2",interval:"union",vibrato:"none",harmonics:[100,100,86,71,57,71,71,43,57,71,57,43,29,29,29,29,29,29,29,29,14,14,14,14,14,14,14,0]}},{name:"clean guitar",midiProgram:27,generalMidi:!0,settings:{type:"harmonics",effects:"reverb",transition:"hard",chord:"strum",filterCutoffHz:2828,filterResonance:14,filterEnvelope:"twang 2",interval:"union",vibrato:"none",harmonics:[86,100,100,100,86,57,86,100,100,100,71,57,43,71,86,71,57,57,71,71,71,71,57,57,57,57,57,43]}},{name:"muted guitar",midiProgram:28,generalMidi:!0,settings:{type:"FM",effects:"reverb",transition:"hard",chord:"strum",filterCutoffHz:2e3,filterResonance:14,filterEnvelope:"twang 1",vibrato:"none",algorithm:"1←(2 3←4)",feedbackType:"1⟲",feedbackAmplitude:7,feedbackEnvelope:"twang 2",operators:[{frequency:"1×",amplitude:13,envelope:"custom"},{frequency:"1×",amplitude:4,envelope:"twang 3"},{frequency:"4×",amplitude:4,envelope:"twang 2"},{frequency:"16×",amplitude:4,envelope:"twang 1"}]}}])},{name:"Picked Bass Presets",presets:S([{name:"acoustic bass",midiProgram:32,generalMidi:!0,settings:{type:"harmonics",effects:"reverb",transition:"hard fade",chord:"strum",filterCutoffHz:4e3,filterResonance:14,filterEnvelope:"twang 1",interval:"union",vibrato:"none",harmonics:[100,86,71,71,71,71,57,57,57,57,43,43,43,43,43,29,29,29,29,29,29,14,14,14,14,14,14,14]}},{name:"fingered bass",midiProgram:33,generalMidi:!0,settings:{type:"harmonics",effects:"reverb",transition:"hard fade",chord:"strum",filterCutoffHz:2828,filterResonance:14,filterEnvelope:"twang 1",interval:"union",vibrato:"none",harmonics:[100,86,71,57,71,43,57,29,29,29,29,29,29,14,14,14,14,14,14,14,14,14,14,14,14,14,14,0]}},{name:"picked bass",midiProgram:34,generalMidi:!0,settings:{type:"FM",effects:"reverb",transition:"hard fade",chord:"strum",filterCutoffHz:2828,filterResonance:0,filterEnvelope:"twang 1",vibrato:"none",algorithm:"1←(2 3←4)",feedbackType:"3⟲",feedbackAmplitude:4,feedbackEnvelope:"twang 1",operators:[{frequency:"1×",amplitude:15,envelope:"custom"},{frequency:"1×",amplitude:5,envelope:"steady"},{frequency:"11×",amplitude:1,envelope:"twang 3"},{frequency:"1×",amplitude:9,envelope:"steady"}]}},{name:"fretless bass",midiProgram:35,generalMidi:!0,settings:{type:"harmonics",effects:"reverb",transition:"hard",chord:"strum",filterCutoffHz:1e3,filterResonance:14,filterEnvelope:"flare 2",interval:"union",vibrato:"none",harmonics:[100,100,86,71,71,57,57,71,71,71,57,57,57,57,57,57,57,43,43,43,43,43,43,43,43,29,29,14]}},{name:"slap bass 1",midiProgram:36,generalMidi:!0,settings:{type:"harmonics",effects:"reverb",transition:"hard",chord:"strum",filterCutoffHz:4e3,filterResonance:0,filterEnvelope:"twang 1",interval:"union",vibrato:"none",harmonics:[100,100,100,100,86,71,57,29,29,43,43,57,71,57,29,29,43,57,57,57,43,43,43,57,71,71,71,71]}},{name:"slap bass 2",midiProgram:37,generalMidi:!0,settings:{type:"FM",effects:"reverb",transition:"hard",chord:"strum",filterCutoffHz:5657,filterResonance:0,filterEnvelope:"twang 1",vibrato:"none",algorithm:"1←2←3←4",feedbackType:"3⟲",feedbackAmplitude:4,feedbackEnvelope:"steady",operators:[{frequency:"3×",amplitude:13,envelope:"custom"},{frequency:"1×",amplitude:7,envelope:"steady"},{frequency:"13×",amplitude:3,envelope:"steady"},{frequency:"1×",amplitude:11,envelope:"steady"}]}},{name:"bass synth 1",midiProgram:38,generalMidi:!0,settings:{type:"FM",effects:"reverb",transition:"hard",chord:"strum",filterCutoffHz:4e3,filterResonance:43,filterEnvelope:"twang 2",vibrato:"none",algorithm:"1←3 2←4",feedbackType:"3⟲ 4⟲",feedbackAmplitude:9,feedbackEnvelope:"twang 2",operators:[{frequency:"1×",amplitude:15,envelope:"custom"},{frequency:"1×",amplitude:10,envelope:"custom"},{frequency:"1×",amplitude:14,envelope:"twang 1"},{frequency:"~1×",amplitude:13,envelope:"twang 2"}]}},{name:"bass synth 2",midiProgram:39,generalMidi:!0,settings:{type:"FM",effects:"reverb",transition:"hard fade",chord:"strum",filterCutoffHz:1e3,filterResonance:57,filterEnvelope:"punch",vibrato:"none",algorithm:"1←(2 3 4)",feedbackType:"1→2",feedbackAmplitude:4,feedbackEnvelope:"twang 3",operators:[{frequency:"1×",amplitude:9,envelope:"custom"},{frequency:"1×",amplitude:9,envelope:"steady"},{frequency:"3×",amplitude:0,envelope:"steady"},{frequency:"1×",amplitude:0,envelope:"steady"}]}},{name:"bass & lead",midiProgram:87,generalMidi:!0,settings:{type:"chip",transition:"hard",effects:"reverb",chord:"harmony",filterCutoffHz:4e3,filterResonance:86,filterEnvelope:"twang 2",wave:"sawtooth",interval:"shimmer",vibrato:"none"}},{name:"dubstep yoi yoi",midiProgram:87,settings:{type:"chip",eqFilter:[{type:"low-pass",cutoffHz:6727.17,linearGain:.7071}],effects:["note filter","bitcrusher"],noteFilter:[{type:"low-pass",cutoffHz:594.6,linearGain:11.3137}],bitcrusherOctave:1.5,bitcrusherQuantization:0,transition:"slide",fadeInSeconds:.0263,fadeOutTicks:-3,chord:"arpeggio",wave:"sawtooth",unison:"none",envelopes:[{target:"noteFilterFreq",envelope:"flare 2",index:0}]}}])},{name:"Picked String Presets",presets:S([{name:"pizzicato strings",midiProgram:45,generalMidi:!0,settings:{type:"FM",effects:"reverb",transition:"medium fade",chord:"harmony",filterCutoffHz:1e3,filterResonance:14,filterEnvelope:"twang 1",vibrato:"none",algorithm:"(1 2 3)←4",feedbackType:"1⟲ 2⟲ 3⟲ 4⟲",feedbackAmplitude:7,feedbackEnvelope:"twang 1",operators:[{frequency:"1×",amplitude:14,envelope:"custom"},{frequency:"3×",amplitude:11,envelope:"custom"},{frequency:"6×",amplitude:9,envelope:"custom"},{frequency:"~1×",amplitude:10,envelope:"steady"}]}},{name:"harp",midiProgram:46,generalMidi:!0,settings:{type:"FM",transition:"hard fade",effects:"reverb",chord:"strum",filterCutoffHz:2828,filterResonance:0,filterEnvelope:"twang 1",vibrato:"none",algorithm:"1←3 2←4",feedbackType:"3⟲",feedbackAmplitude:6,feedbackEnvelope:"twang 2",operators:[{frequency:"1×",amplitude:15,envelope:"custom"},{frequency:"4×",amplitude:6,envelope:"custom"},{frequency:"~2×",amplitude:3,envelope:"steady"},{frequency:"1×",amplitude:6,envelope:"steady"}]}},{name:"sitar",midiProgram:104,generalMidi:!0,settings:{type:"FM",transition:"hard fade",effects:"reverb",chord:"strum",filterCutoffHz:8e3,filterResonance:57,filterEnvelope:"twang 2",vibrato:"none",algorithm:"1←(2 3 4)",feedbackType:"1⟲",feedbackAmplitude:0,feedbackEnvelope:"steady",operators:[{frequency:"1×",amplitude:15,envelope:"custom"},{frequency:"1×",amplitude:14,envelope:"twang 3"},{frequency:"9×",amplitude:3,envelope:"twang 3"},{frequency:"16×",amplitude:9,envelope:"swell 3"}]}},{name:"banjo",midiProgram:105,generalMidi:!0,settings:{type:"FM",effects:"reverb",transition:"hard fade",chord:"strum",filterCutoffHz:2828,filterResonance:14,filterEnvelope:"twang 2",vibrato:"none",algorithm:"1←(2 3←4)",feedbackType:"2⟲",feedbackAmplitude:4,feedbackEnvelope:"steady",operators:[{frequency:"4×",amplitude:14,envelope:"custom"},{frequency:"1×",amplitude:10,envelope:"steady"},{frequency:"11×",amplitude:3,envelope:"twang 3"},{frequency:"1×",amplitude:11,envelope:"steady"}]}},{name:"ukulele",midiProgram:105,settings:{type:"FM",effects:"reverb",transition:"hard fade",chord:"strum",filterCutoffHz:2e3,filterResonance:0,filterEnvelope:"twang 1",vibrato:"none",algorithm:"1←(2 3←4)",feedbackType:"3⟲",feedbackAmplitude:5,feedbackEnvelope:"twang 1",operators:[{frequency:"2×",amplitude:14,envelope:"custom"},{frequency:"1×",amplitude:6,envelope:"steady"},{frequency:"9×",amplitude:4,envelope:"twang 2"},{frequency:"1×",amplitude:11,envelope:"steady"}]}},{name:"shamisen",midiProgram:106,generalMidi:!0,settings:{type:"FM",effects:"reverb",transition:"hard fade",chord:"harmony",filterCutoffHz:8e3,filterResonance:14,filterEnvelope:"twang 1",vibrato:"none",algorithm:"1←(2 3←4)",feedbackType:"3⟲",feedbackAmplitude:9,feedbackEnvelope:"twang 3",operators:[{frequency:"1×",amplitude:15,envelope:"custom"},{frequency:"1×",amplitude:12,envelope:"steady"},{frequency:"16×",amplitude:4,envelope:"twang 3"},{frequency:"1×",amplitude:7,envelope:"steady"}]}},{name:"koto",midiProgram:107,generalMidi:!0,settings:{type:"FM",effects:"reverb",transition:"hard fade",chord:"harmony",filterCutoffHz:4e3,filterResonance:14,filterEnvelope:"twang 2",vibrato:"none",algorithm:"1←3 2←4",feedbackType:"1⟲ 2⟲",feedbackAmplitude:5,feedbackEnvelope:"twang 2",operators:[{frequency:"~1×",amplitude:12,envelope:"custom"},{frequency:"6×",amplitude:10,envelope:"custom"},{frequency:"4×",amplitude:8,envelope:"twang 3"},{frequency:"~2×",amplitude:8,envelope:"twang 3"}]}}])},{name:"Distortion Presets",presets:S([{name:"overdrive guitar",midiProgram:29,generalMidi:!0,settings:{type:"Picked String",eqFilter:[{type:"low-pass",cutoffHz:4756.83,linearGain:.7071},{type:"high-pass",cutoffHz:210.22,linearGain:1},{type:"low-pass",cutoffHz:5656.85,linearGain:1},{type:"peak",cutoffHz:840.9,linearGain:.5}],effects:["note filter","distortion"],noteFilter:[{type:"high-pass",cutoffHz:297.3,linearGain:2},{type:"low-pass",cutoffHz:2378.41,linearGain:.7071}],distortion:71,transition:"normal",fadeInSeconds:0,fadeOutTicks:12,chord:"strum",harmonics:[86,100,100,86,86,86,86,71,71,71,71,71,71,71,71,71,71,57,57,57,57,57,57,57,57,57,57,57],unison:"none",stringSustain:71,envelopes:[{target:"noteFilterFreq",envelope:"note size",index:1}]}},{name:"distortion guitar",midiProgram:30,generalMidi:!0,settings:{type:"Picked String",eqFilter:[{type:"low-pass",cutoffHz:4756.83,linearGain:.7071},{type:"high-pass",cutoffHz:210.22,linearGain:1},{type:"low-pass",cutoffHz:5656.85,linearGain:1},{type:"peak",cutoffHz:594.6,linearGain:.3536},{type:"peak",cutoffHz:1e3,linearGain:.25}],effects:["note filter","distortion","reverb"],noteFilter:[{type:"high-pass",cutoffHz:353.55,linearGain:2},{type:"low-pass",cutoffHz:2e3,linearGain:1}],distortion:86,reverb:67,transition:"normal",fadeInSeconds:0,fadeOutTicks:12,chord:"strum",harmonics:[86,100,100,86,86,86,86,71,71,71,71,71,71,71,71,71,71,57,57,57,57,57,57,57,57,57,57,57],unison:"none",stringSustain:71,envelopes:[{target:"noteFilterFreq",envelope:"note size",index:1}]}},{name:"charango synth",midiProgram:84,generalMidi:!0,settings:{type:"FM",eqFilter:[{type:"low-pass",cutoffHz:11313.71,linearGain:1}],effects:[],transition:"normal",fadeInSeconds:0,fadeOutTicks:-3,chord:"strum",algorithm:"1←(2 3←4)",feedbackType:"1→2→3→4",feedbackAmplitude:8,operators:[{frequency:"3×",amplitude:13},{frequency:"~1×",amplitude:5},{frequency:"4×",amplitude:6},{frequency:"3×",amplitude:7}],envelopes:[{target:"feedbackAmplitude",envelope:"twang 3"}]}},{name:"guitar harmonics",midiProgram:31,generalMidi:!0,settings:{type:"FM",eqFilter:[{type:"low-pass",cutoffHz:4e3,linearGain:2}],effects:["reverb"],reverb:33,transition:"normal",fadeInSeconds:0,fadeOutTicks:-3,chord:"strum",algorithm:"1←(2 3)←4",feedbackType:"1⟲",feedbackAmplitude:2,operators:[{frequency:"4×",amplitude:12},{frequency:"16×",amplitude:5},{frequency:"1×",amplitude:2},{frequency:"~1×",amplitude:12}],envelopes:[{target:"operatorAmplitude",envelope:"swell 1",index:1},{target:"operatorAmplitude",envelope:"punch",index:2},{target:"operatorAmplitude",envelope:"twang 1",index:3}]}},{name:"PWM overdrive",midiProgram:29,settings:{type:"PWM",eqFilter:[{type:"low-pass",cutoffHz:5656.85,linearGain:1.4142}],effects:[],transition:"normal",fadeInSeconds:0,fadeOutTicks:-3,chord:"strum",pulseWidth:17.67767,envelopes:[{target:"pulseWidth",envelope:"punch"}]}},{name:"PWM distortion",midiProgram:30,settings:{type:"PWM",eqFilter:[{type:"low-pass",cutoffHz:3363.59,linearGain:2}],effects:["vibrato"],vibrato:"delayed",transition:"normal",fadeInSeconds:0,fadeOutTicks:-3,chord:"strum",pulseWidth:50,envelopes:[{target:"pulseWidth",envelope:"swell 1"}]}},{name:"FM overdrive",midiProgram:29,settings:{type:"FM",eqFilter:[{type:"low-pass",cutoffHz:4756.83,linearGain:1}],effects:["reverb"],reverb:33,transition:"normal",fadeInSeconds:0,fadeOutTicks:-3,chord:"strum",algorithm:"1←(2 3←4)",feedbackType:"1→2",feedbackAmplitude:2,operators:[{frequency:"~1×",amplitude:15},{frequency:"1×",amplitude:12},{frequency:"~2×",amplitude:6},{frequency:"1×",amplitude:12}],envelopes:[{target:"operatorAmplitude",envelope:"twang 1",index:2},{target:"operatorAmplitude",envelope:"swell 3",index:3},{target:"feedbackAmplitude",envelope:"punch"}]}},{name:"FM distortion",midiProgram:30,settings:{type:"FM",eqFilter:[{type:"low-pass",cutoffHz:4e3,linearGain:2}],effects:["reverb"],reverb:33,transition:"normal",fadeInSeconds:0,fadeOutTicks:-3,chord:"strum",algorithm:"1←(2 3←4)",feedbackType:"1→2",feedbackAmplitude:4,operators:[{frequency:"~1×",amplitude:15},{frequency:"1×",amplitude:11},{frequency:"1×",amplitude:9},{frequency:"~2×",amplitude:4}],envelopes:[{target:"operatorAmplitude",envelope:"swell 1",index:2},{target:"operatorAmplitude",envelope:"swell 3",index:3}]}}])},{name:"Bellows Presets",presets:S([{name:"drawbar organ 1",midiProgram:16,generalMidi:!0,midiSubharmonicOctaves:1,settings:{type:"harmonics",effects:"reverb",transition:"hard",chord:"harmony",filterCutoffHz:2828,filterResonance:14,filterEnvelope:"steady",interval:"union",vibrato:"none",harmonics:[86,86,0,86,0,0,0,86,0,0,0,0,0,0,0,86,0,0,0,0,0,0,0,0,0,0,0,0]}},{name:"drawbar organ 2",midiProgram:16,midiSubharmonicOctaves:1,settings:{type:"harmonics",effects:"reverb",transition:"hard",chord:"harmony",filterCutoffHz:2828,filterResonance:14,filterEnvelope:"steady",interval:"union",vibrato:"none",harmonics:[86,29,71,86,71,14,0,100,0,0,0,86,0,0,0,71,0,0,0,57,0,0,0,29,0,0,0,0]}},{name:"percussive organ",midiProgram:17,generalMidi:!0,midiSubharmonicOctaves:1,settings:{type:"FM",transition:"hard",effects:"reverb",chord:"harmony",filterCutoffHz:2e3,filterResonance:14,filterEnvelope:"punch",vibrato:"light",algorithm:"1 2 3 4",feedbackType:"1→3 2→4",feedbackAmplitude:7,feedbackEnvelope:"decay 1",operators:[{frequency:"1×",amplitude:7,envelope:"custom"},{frequency:"2×",amplitude:7,envelope:"custom"},{frequency:"3×",amplitude:8,envelope:"custom"},{frequency:"4×",amplitude:8,envelope:"custom"}]}},{name:"rock organ",midiProgram:18,generalMidi:!0,midiSubharmonicOctaves:1,settings:{type:"FM",effects:"chorus & reverb",transition:"hard",chord:"harmony",filterCutoffHz:4e3,filterResonance:14,filterEnvelope:"punch",vibrato:"delayed",algorithm:"(1 2 3)←4",feedbackType:"1⟲ 2⟲ 3⟲",feedbackAmplitude:2,feedbackEnvelope:"flare 1",operators:[{frequency:"1×",amplitude:9,envelope:"custom"},{frequency:"4×",amplitude:9,envelope:"custom"},{frequency:"6×",amplitude:9,envelope:"custom"},{frequency:"2×",amplitude:5,envelope:"steady"}]}},{name:"pipe organ",midiProgram:19,generalMidi:!0,midiSubharmonicOctaves:1,settings:{type:"FM",transition:"cross fade",effects:"reverb",chord:"harmony",filterCutoffHz:5657,filterResonance:43,filterEnvelope:"steady",vibrato:"none",algorithm:"1 2 3 4",feedbackType:"1⟲ 2⟲ 3⟲ 4⟲",feedbackAmplitude:5,feedbackEnvelope:"steady",operators:[{frequency:"1×",amplitude:8,envelope:"custom"},{frequency:"2×",amplitude:9,envelope:"custom"},{frequency:"4×",amplitude:9,envelope:"custom"},{frequency:"8×",amplitude:8,envelope:"custom"}]}},{name:"reed organ",midiProgram:20,generalMidi:!0,settings:{type:"harmonics",effects:"reverb",transition:"soft",chord:"harmony",filterCutoffHz:2e3,filterResonance:29,filterEnvelope:"steady",interval:"union",vibrato:"none",harmonics:[71,86,100,86,71,100,57,71,71,71,43,43,43,71,43,71,57,57,57,57,57,57,57,29,43,29,29,14]}},{name:"accordion",midiProgram:21,generalMidi:!0,settings:{type:"chip",effects:"reverb",transition:"cross fade",chord:"harmony",filterCutoffHz:5657,filterResonance:0,filterEnvelope:"swell 1",wave:"double saw",interval:"honky tonk",vibrato:"none"}},{name:"bandoneon",midiProgram:23,generalMidi:!0,settings:{type:"harmonics",effects:"reverb",transition:"soft",chord:"harmony",filterCutoffHz:4e3,filterResonance:29,filterEnvelope:"swell 1",interval:"hum",vibrato:"none",harmonics:[86,86,86,57,71,86,57,71,71,71,57,43,57,43,71,43,71,57,57,43,43,43,57,43,43,29,29,29]}},{name:"bagpipe",midiProgram:109,generalMidi:!0,settings:{type:"harmonics",effects:"reverb",transition:"cross fade",chord:"harmony",filterCutoffHz:5657,filterResonance:43,filterEnvelope:"punch",interval:"hum",vibrato:"none",harmonics:[71,86,86,100,100,86,57,100,86,71,71,71,57,57,57,71,57,71,57,71,43,57,57,43,43,43,43,43]}}])},{name:"String Presets",presets:S([{name:"violin 1",midiProgram:40,generalMidi:!0,settings:{type:"FM",eqFilter:[{type:"low-pass",cutoffHz:4e3,linearGain:1.4142},{type:"high-pass",cutoffHz:105.11,linearGain:.3536}],effects:["vibrato","reverb"],vibrato:"delayed",reverb:67,transition:"normal",fadeInSeconds:.0413,fadeOutTicks:6,chord:"simultaneous",algorithm:"(1 2)←(3 4)",feedbackType:"1→2",feedbackAmplitude:5,operators:[{frequency:"4×",amplitude:9},{frequency:"3×",amplitude:9},{frequency:"2×",amplitude:7},{frequency:"7×",amplitude:5}],envelopes:[{target:"operatorAmplitude",envelope:"swell 1",index:3},{target:"feedbackAmplitude",envelope:"twang 3"}]}},{name:"viola",midiProgram:41,generalMidi:!0,settings:{type:"FM",effects:"reverb",transition:"cross fade",chord:"harmony",filterCutoffHz:2e3,filterResonance:29,filterEnvelope:"steady",vibrato:"delayed",algorithm:"(1 2 3)←4",feedbackType:"1⟲ 2⟲ 3⟲",feedbackAmplitude:8,feedbackEnvelope:"swell 1",operators:[{frequency:"2×",amplitude:11,envelope:"custom"},{frequency:"7×",amplitude:7,envelope:"custom"},{frequency:"13×",amplitude:4,envelope:"custom"},{frequency:"1×",amplitude:5,envelope:"steady"}]}},{name:"cello",midiProgram:42,generalMidi:!0,settings:{type:"FM",eqFilter:[{type:"low-pass",cutoffHz:4e3,linearGain:.1768},{type:"high-pass",cutoffHz:297.3,linearGain:.7071},{type:"peak",cutoffHz:4756.83,linearGain:5.6569}],effects:["note filter","reverb"],noteFilter:[{type:"low-pass",cutoffHz:16e3,linearGain:.0884}],reverb:67,transition:"normal",fadeInSeconds:.0125,fadeOutTicks:12,chord:"simultaneous",algorithm:"(1 2)←3←4",feedbackType:"1⟲ 2⟲",feedbackAmplitude:3,operators:[{frequency:"16×",amplitude:5},{frequency:"~1×",amplitude:10},{frequency:"1×",amplitude:9},{frequency:"6×",amplitude:3}],envelopes:[{target:"noteFilterAllFreqs",envelope:"swell 1"},{target:"operatorAmplitude",envelope:"swell 1",index:3}]}},{name:"contrabass",midiProgram:43,generalMidi:!0,settings:{type:"FM",effects:"reverb",transition:"cross fade",chord:"harmony",filterCutoffHz:2e3,filterResonance:29,filterEnvelope:"steady",vibrato:"delayed",algorithm:"(1 2)←3←4",feedbackType:"1⟲ 2⟲",feedbackAmplitude:0,feedbackEnvelope:"steady",operators:[{frequency:"16×",amplitude:5,envelope:"custom"},{frequency:"1×",amplitude:10,envelope:"custom"},{frequency:"1×",amplitude:10,envelope:"steady"},{frequency:"6×",amplitude:3,envelope:"swell 1"}]}},{name:"fiddle",midiProgram:110,generalMidi:!0,settings:{type:"FM",effects:"reverb",transition:"soft",chord:"harmony",filterCutoffHz:2828,filterResonance:29,filterEnvelope:"steady",vibrato:"delayed",algorithm:"(1 2)←(3 4)",feedbackType:"3⟲ 4⟲",feedbackAmplitude:5,feedbackEnvelope:"twang 1",operators:[{frequency:"2×",amplitude:10,envelope:"custom"},{frequency:"8×",amplitude:8,envelope:"custom"},{frequency:"1×",amplitude:8,envelope:"steady"},{frequency:"16×",amplitude:3,envelope:"steady"}]}},{name:"tremolo strings",midiProgram:44,generalMidi:!0,settings:{type:"FM",effects:"chorus & reverb",transition:"medium fade",chord:"harmony",filterCutoffHz:2e3,filterResonance:0,filterEnvelope:"tremolo4",vibrato:"none",algorithm:"1 2 3 4",feedbackType:"1→2→3→4",feedbackAmplitude:12,feedbackEnvelope:"steady",operators:[{frequency:"1×",amplitude:8,envelope:"custom"},{frequency:"~2×",amplitude:8,envelope:"custom"},{frequency:"4×",amplitude:8,envelope:"custom"},{frequency:"7×",amplitude:8,envelope:"custom"}]}},{name:"strings",midiProgram:48,generalMidi:!0,settings:{type:"FM",effects:"chorus & reverb",transition:"cross fade",chord:"harmony",filterCutoffHz:2828,filterResonance:43,filterEnvelope:"steady",vibrato:"none",algorithm:"(1 2)←(3 4)",feedbackType:"4⟲",feedbackAmplitude:5,feedbackEnvelope:"twang 3",operators:[{frequency:"4×",amplitude:9,envelope:"custom"},{frequency:"3×",amplitude:9,envelope:"custom"},{frequency:"2×",amplitude:7,envelope:"steady"},{frequency:"7×",amplitude:3,envelope:"swell 1"}]}},{name:"slow strings",midiProgram:49,generalMidi:!0,settings:{type:"FM",effects:"chorus & reverb",transition:"soft fade",chord:"harmony",filterCutoffHz:1414,filterResonance:0,filterEnvelope:"swell 2",vibrato:"none",algorithm:"(1 2)←(3 4)",feedbackType:"4⟲",feedbackAmplitude:6,feedbackEnvelope:"flare 3",operators:[{frequency:"4×",amplitude:10,envelope:"custom"},{frequency:"3×",amplitude:10,envelope:"custom"},{frequency:"2×",amplitude:7,envelope:"steady"},{frequency:"7×",amplitude:4,envelope:"swell 1"}]}},{name:"strings synth 1",midiProgram:50,generalMidi:!0,settings:{type:"chip",transition:"soft fade",effects:"chorus & reverb",chord:"harmony",filterCutoffHz:1414,filterResonance:43,filterEnvelope:"steady",wave:"sawtooth",interval:"hum",vibrato:"delayed"}},{name:"strings synth 2",midiProgram:51,generalMidi:!0,settings:{type:"FM",effects:"chorus & reverb",transition:"soft fade",chord:"harmony",filterCutoffHz:2e3,filterResonance:43,filterEnvelope:"steady",vibrato:"none",algorithm:"1 2 3 4",feedbackType:"1⟲ 2⟲ 3⟲ 4⟲",feedbackAmplitude:12,feedbackEnvelope:"swell 1",operators:[{frequency:"3×",amplitude:6,envelope:"custom"},{frequency:"2×",amplitude:7,envelope:"custom"},{frequency:"1×",amplitude:8,envelope:"custom"},{frequency:"1×",amplitude:9,envelope:"custom"}]}},{name:"orchestra hit 1",midiProgram:55,generalMidi:!0,midiSubharmonicOctaves:1,settings:{type:"FM",effects:"chorus & reverb",transition:"hard fade",chord:"harmony",filterCutoffHz:8e3,filterResonance:14,filterEnvelope:"custom",vibrato:"none",algorithm:"1 2 3 4",feedbackType:"1⟲ 2⟲ 3⟲ 4⟲",feedbackAmplitude:14,feedbackEnvelope:"twang 3",operators:[{frequency:"1×",amplitude:15,envelope:"twang 3"},{frequency:"2×",amplitude:15,envelope:"flare 3"},{frequency:"4×",amplitude:15,envelope:"flare 2"},{frequency:"8×",amplitude:15,envelope:"flare 1"}]}},{name:"violin 2",midiProgram:40,generalMidi:!0,settings:{type:"FM",eqFilter:[{type:"low-pass",cutoffHz:2828,linearGain:1.4142},{type:"high-pass",cutoffHz:105.11,linearGain:.3536}],effects:["vibrato","reverb"],vibrato:"light",reverb:67,transition:"normal",fadeInSeconds:.0413,fadeOutTicks:6,chord:"simultaneous",algorithm:"(1 2)←(3 4)",feedbackType:"4⟲",feedbackAmplitude:5,feedbackEnvelope:"twang 3",operators:[{frequency:"4×",amplitude:15,envelope:"custom"},{frequency:"3×",amplitude:13,envelope:"custom"},{frequency:"2×",amplitude:7,envelope:"steady"},{frequency:"7×",amplitude:8,envelope:"swell 1"}]}},{name:"orchestra hit 2",midiProgram:55,midiSubharmonicOctaves:1,settings:{type:"FM",effects:"chorus & reverb",transition:"medium fade",chord:"harmony",filterCutoffHz:8e3,filterResonance:0,filterEnvelope:"decay 1",vibrato:"delayed",algorithm:"1 2 3 4",feedbackType:"1⟲ 2⟲ 3⟲ 4⟲",feedbackAmplitude:14,feedbackEnvelope:"steady",operators:[{frequency:"1×",amplitude:12,envelope:"custom"},{frequency:"2×",amplitude:14,envelope:"custom"},{frequency:"3×",amplitude:12,envelope:"custom"},{frequency:"4×",amplitude:14,envelope:"custom"}]}},{name:"supersaw string",midiProgram:41,settings:{type:"supersaw",eqFilter:[{type:"low-pass",cutoffHz:2828.43,linearGain:1.4142},{type:"low-pass",cutoffHz:3363.59,linearGain:.1768}],effects:["note filter","reverb"],noteFilter:[{type:"high-pass",cutoffHz:500,linearGain:.1768}],reverb:33,fadeInSeconds:.0263,fadeOutTicks:6,pulseWidth:35.35534,dynamism:83,spread:8,shape:50,envelopes:[{target:"noteFilterFreq",envelope:"twang 1",index:0}]}},{name:"supersaw string 2",midiProgram:41,settings:{type:"supersaw",eqFilter:[{type:"low-pass",cutoffHz:2378.41,linearGain:.5},{type:"high-pass",cutoffHz:594.6,linearGain:.25},{type:"peak",cutoffHz:2e3,linearGain:2.8284},{type:"peak",cutoffHz:4756.83,linearGain:2}],eqFilterType:!1,eqSimpleCut:10,eqSimplePeak:0,envelopeSpeed:12,discreteEnvelope:!1,eqSubFilters0:[{type:"low-pass",cutoffHz:2378.41,linearGain:.5},{type:"high-pass",cutoffHz:594.6,linearGain:.25},{type:"peak",cutoffHz:2e3,linearGain:2.8284},{type:"peak",cutoffHz:4756.83,linearGain:2}],effects:["note filter","chorus","reverb"],noteFilterType:!1,noteSimpleCut:10,noteSimplePeak:0,noteFilter:[{type:"low-pass",cutoffHz:8e3,linearGain:1}],noteSubFilters0:[{type:"low-pass",cutoffHz:8e3,linearGain:1}],chorus:57,reverb:42,fadeInSeconds:.0575,fadeOutTicks:-6,pulseWidth:50,dynamism:67,spread:58,shape:0,envelopes:[{target:"noteFilterAllFreqs",envelope:"punch"},{target:"pulseWidth",envelope:"flare 2"}]}}])},{name:"Vocal Presets",presets:S([{name:"choir soprano",midiProgram:94,generalMidi:!0,settings:{type:"harmonics",eqFilter:[{type:"low-pass",cutoffHz:2828.43,linearGain:2},{type:"peak",cutoffHz:1189.21,linearGain:5.6569},{type:"high-pass",cutoffHz:707.11,linearGain:2.8284},{type:"peak",cutoffHz:2e3,linearGain:.0884},{type:"peak",cutoffHz:840.9,linearGain:.25},{type:"low-pass",cutoffHz:6727.17,linearGain:11.3137}],effects:["vibrato","chorus","reverb"],vibrato:"shaky",chorus:100,reverb:33,fadeInSeconds:.0413,fadeOutTicks:24,harmonics:[100,100,86,57,29,29,57,71,57,29,14,14,14,29,43,57,43,29,14,14,14,14,14,14,0,0,0,0],unison:"none",envelopes:[]}},{name:"choir tenor",midiProgram:52,generalMidi:!0,settings:{type:"harmonics",eqFilter:[{type:"peak",cutoffHz:1e3,linearGain:11.3137},{type:"peak",cutoffHz:707.11,linearGain:5.6569},{type:"peak",cutoffHz:840.9,linearGain:.0884},{type:"peak",cutoffHz:1681.79,linearGain:.0884},{type:"high-pass",cutoffHz:297.3,linearGain:.7071},{type:"low-pass",cutoffHz:2828.43,linearGain:11.3137}],effects:["vibrato","chorus","reverb"],vibrato:"shaky",chorus:100,reverb:67,transition:"normal",fadeInSeconds:.0413,fadeOutTicks:48,chord:"simultaneous",harmonics:[86,100,100,86,71,57,43,29,29,29,29,43,43,43,29,29,29,29,29,29,29,29,29,14,14,14,14,14],unison:"none",envelopes:[]}},{name:"choir bass",midiProgram:52,settings:{type:"harmonics",eqFilter:[{type:"low-pass",cutoffHz:2378.41,linearGain:11.3137},{type:"peak",cutoffHz:594.6,linearGain:5.6569},{type:"peak",cutoffHz:1681.79,linearGain:.0884},{type:"peak",cutoffHz:707.11,linearGain:.0884},{type:"peak",cutoffHz:840.9,linearGain:11.3137}],effects:["vibrato","chorus","reverb"],vibrato:"shaky",chorus:100,reverb:67,transition:"normal",fadeInSeconds:.0413,fadeOutTicks:48,chord:"simultaneous",harmonics:[71,86,100,100,86,86,57,43,29,29,29,29,29,29,43,43,43,43,43,29,29,29,29,14,14,14,14,14],unison:"none",envelopes:[]}},{name:"solo soprano",midiProgram:85,settings:{type:"harmonics",eqFilter:[{type:"low-pass",cutoffHz:2828.43,linearGain:2},{type:"peak",cutoffHz:1189.21,linearGain:5.6569},{type:"high-pass",cutoffHz:707.11,linearGain:2.8284},{type:"peak",cutoffHz:2e3,linearGain:.0884},{type:"peak",cutoffHz:840.9,linearGain:.25}],effects:["vibrato","reverb"],vibrato:"shaky",reverb:33,fadeInSeconds:.0413,fadeOutTicks:12,harmonics:[86,100,86,43,14,14,57,71,57,14,14,14,14,14,43,57,43,14,14,14,14,14,14,14,0,0,0,0],unison:"none",envelopes:[]}},{name:"solo tenor",midiProgram:85,settings:{type:"harmonics",eqFilter:[{type:"peak",cutoffHz:1e3,linearGain:11.3137},{type:"peak",cutoffHz:707.11,linearGain:5.6569},{type:"peak",cutoffHz:840.9,linearGain:.0884},{type:"peak",cutoffHz:1681.79,linearGain:.0884},{type:"high-pass",cutoffHz:297.3,linearGain:.7071},{type:"low-pass",cutoffHz:2828.43,linearGain:11.3137}],effects:["vibrato","reverb"],vibrato:"shaky",reverb:33,fadeInSeconds:.0413,fadeOutTicks:12,harmonics:[86,100,100,86,71,57,43,29,29,29,29,43,43,43,29,29,29,29,29,29,29,29,29,14,14,14,14,14],unison:"none",envelopes:[]}},{name:"solo bass",midiProgram:85,settings:{type:"harmonics",eqFilter:[{type:"low-pass",cutoffHz:2378.41,linearGain:5.6569},{type:"peak",cutoffHz:594.6,linearGain:8},{type:"peak",cutoffHz:1681.79,linearGain:.0884},{type:"peak",cutoffHz:707.11,linearGain:.0884},{type:"peak",cutoffHz:840.9,linearGain:8},{type:"high-pass",cutoffHz:210.22,linearGain:1.4142}],effects:["vibrato","reverb"],vibrato:"shaky",reverb:33,transition:"normal",fadeInSeconds:.0263,fadeOutTicks:12,chord:"simultaneous",harmonics:[71,86,100,100,86,86,57,43,29,29,29,29,29,29,43,43,43,43,43,29,29,29,29,14,14,14,14,14],unison:"none",envelopes:[]}},{name:"voice ooh",midiProgram:53,generalMidi:!0,settings:{type:"harmonics",effects:"reverb",transition:"soft",chord:"harmony",filterCutoffHz:1414,filterResonance:57,filterEnvelope:"steady",interval:"union",vibrato:"shaky",harmonics:[100,57,43,43,14,14,0,0,0,14,29,29,14,0,14,29,29,14,0,0,0,0,0,0,0,0,0,0]}},{name:"voice synth",midiProgram:54,generalMidi:!0,settings:{type:"chip",transition:"medium fade",effects:"chorus & reverb",chord:"harmony",filterCutoffHz:4e3,filterResonance:57,filterEnvelope:"steady",wave:"rounded",interval:"union",vibrato:"light"}},{name:"vox synth lead",midiProgram:85,generalMidi:!0,settings:{type:"FM",effects:"chorus & reverb",transition:"cross fade",chord:"harmony",filterCutoffHz:2828,filterResonance:14,filterEnvelope:"steady",vibrato:"light",algorithm:"(1 2 3)←4",feedbackType:"1→2→3→4",feedbackAmplitude:2,feedbackEnvelope:"punch",operators:[{frequency:"2×",amplitude:10,envelope:"custom"},{frequency:"9×",amplitude:5,envelope:"custom"},{frequency:"20×",amplitude:1,envelope:"custom"},{frequency:"~1×",amplitude:4,envelope:"steady"}]}},{name:"tiny robot",midiProgram:85,settings:{type:"FM",eqFilter:[],effects:["vibrato","reverb"],vibrato:"delayed",reverb:33,transition:"slide",fadeInSeconds:.0263,fadeOutTicks:-3,chord:"simultaneous",algorithm:"1←(2 3 4)",feedbackType:"1⟲",feedbackAmplitude:2,operators:[{frequency:"2×",amplitude:15},{frequency:"1×",amplitude:7},{frequency:"~1×",amplitude:7},{frequency:"1×",amplitude:0}],envelopes:[{target:"operatorAmplitude",envelope:"punch",index:1},{target:"feedbackAmplitude",envelope:"twang 3"}]}},{name:"yowie",midiProgram:85,settings:{type:"FM",effects:"reverb",transition:"cross fade",chord:"harmony",filterCutoffHz:2e3,filterResonance:86,filterEnvelope:"tremolo5",vibrato:"none",algorithm:"1←2←(3 4)",feedbackType:"1⟲",feedbackAmplitude:12,feedbackEnvelope:"tremolo3",operators:[{frequency:"2×",amplitude:12,envelope:"custom"},{frequency:"16×",amplitude:5,envelope:"steady"},{frequency:"1×",amplitude:5,envelope:"steady"},{frequency:"1×",amplitude:0,envelope:"steady"}]}},{name:"mouse",midiProgram:85,settings:{type:"FM",eqFilter:[],effects:["vibrato","reverb"],vibrato:"light",reverb:33,transition:"slide in pattern",fadeInSeconds:.0263,fadeOutTicks:-3,chord:"simultaneous",algorithm:"1 2 3 4",feedbackType:"1⟲ 2⟲",feedbackAmplitude:5,operators:[{frequency:"2×",amplitude:13},{frequency:"5×",amplitude:12},{frequency:"1×",amplitude:0},{frequency:"1×",amplitude:0}],envelopes:[{target:"noteVolume",envelope:"note size"},{target:"feedbackAmplitude",envelope:"flare 2"}]}},{name:"gumdrop",midiProgram:85,settings:{type:"FM",effects:"reverb",transition:"hard",chord:"harmony",filterCutoffHz:8e3,filterResonance:0,filterEnvelope:"steady",vibrato:"none",algorithm:"(1 2 3)←4",feedbackType:"1⟲ 2⟲ 3⟲",feedbackAmplitude:0,feedbackEnvelope:"steady",operators:[{frequency:"2×",amplitude:15,envelope:"punch"},{frequency:"4×",amplitude:15,envelope:"punch"},{frequency:"7×",amplitude:15,envelope:"punch"},{frequency:"1×",amplitude:10,envelope:"twang 1"}]}},{name:"echo drop",midiProgram:102,generalMidi:!0,settings:{type:"FM",effects:"chorus & reverb",transition:"hard",chord:"harmony",filterCutoffHz:2828,filterResonance:14,filterEnvelope:"punch",vibrato:"none",algorithm:"1←(2 3←4)",feedbackType:"1⟲",feedbackAmplitude:2,feedbackEnvelope:"steady",operators:[{frequency:"~2×",amplitude:11,envelope:"custom"},{frequency:"~1×",amplitude:5,envelope:"steady"},{frequency:"11×",amplitude:2,envelope:"steady"},{frequency:"16×",amplitude:5,envelope:"swell 3"}]}},{name:"dark choir",midiProgram:85,settings:{type:"spectrum",effects:"reverb",transition:"soft",chord:"harmony",filterCutoffHz:4e3,filterResonance:29,filterEnvelope:"swell 1",spectrum:[43,14,14,14,14,14,14,100,14,14,14,57,14,14,100,14,43,14,43,14,14,43,14,29,14,29,14,14,29,0]}}])},{name:"Brass Presets",presets:S([{name:"trumpet",midiProgram:56,generalMidi:!0,settings:{type:"FM",effects:"reverb",transition:"soft",chord:"harmony",filterCutoffHz:2828,filterResonance:43,filterEnvelope:"steady",vibrato:"none",algorithm:"1←(2 3 4)",feedbackType:"1⟲",feedbackAmplitude:9,feedbackEnvelope:"swell 1",operators:[{frequency:"1×",amplitude:14,envelope:"custom"},{frequency:"1×",amplitude:8,envelope:"steady"},{frequency:"1×",amplitude:5,envelope:"flare 2"},{frequency:"1×",amplitude:0,envelope:"steady"}]}},{name:"trombone",midiProgram:57,generalMidi:!0,settings:{type:"FM",effects:"reverb",transition:"soft",chord:"harmony",filterCutoffHz:2e3,filterResonance:43,filterEnvelope:"steady",vibrato:"none",algorithm:"1←(2 3 4)",feedbackType:"2⟲",feedbackAmplitude:7,feedbackEnvelope:"swell 1",operators:[{frequency:"1×",amplitude:14,envelope:"custom"},{frequency:"1×",amplitude:8,envelope:"steady"},{frequency:"1×",amplitude:0,envelope:"steady"},{frequency:"1×",amplitude:0,envelope:"steady"}]}},{name:"tuba",midiProgram:58,generalMidi:!0,settings:{type:"FM",effects:"reverb",transition:"soft",chord:"harmony",filterCutoffHz:2e3,filterResonance:43,filterEnvelope:"steady",vibrato:"none",algorithm:"1←(2 3 4)",feedbackType:"2⟲",feedbackAmplitude:8,feedbackEnvelope:"swell 1",operators:[{frequency:"1×",amplitude:14,envelope:"custom"},{frequency:"1×",amplitude:6,envelope:"steady"},{frequency:"1×",amplitude:0,envelope:"steady"},{frequency:"1×",amplitude:0,envelope:"steady"}]}},{name:"muted trumpet",midiProgram:59,generalMidi:!0,settings:{type:"FM",eqFilter:[{type:"low-pass",cutoffHz:8e3,linearGain:2.8284},{type:"peak",cutoffHz:4e3,linearGain:2.8284}],effects:["note filter","reverb"],noteFilter:[{type:"low-pass",cutoffHz:3363.59,linearGain:1}],reverb:33,fadeInSeconds:.0263,fadeOutTicks:-3,algorithm:"1←(2 3←4)",feedbackType:"1⟲",feedbackAmplitude:5,operators:[{frequency:"1×",amplitude:13},{frequency:"1×",amplitude:5},{frequency:"9×",amplitude:5},{frequency:"13×",amplitude:7}],envelopes:[{target:"noteFilterAllFreqs",envelope:"swell 1"},{target:"operatorAmplitude",envelope:"swell 1",index:3},{target:"feedbackAmplitude",envelope:"flare 2"}]}},{name:"french horn",midiProgram:60,generalMidi:!0,settings:{type:"FM",eqFilter:[{type:"low-pass",cutoffHz:4e3,linearGain:1},{type:"peak",cutoffHz:2378.41,linearGain:2.8284}],effects:["reverb"],reverb:33,fadeInSeconds:.0263,fadeOutTicks:-3,algorithm:"1←3 2←4",feedbackType:"1⟲ 2⟲",feedbackAmplitude:3,operators:[{frequency:"1×",amplitude:15},{frequency:"1×",amplitude:12},{frequency:"1×",amplitude:10},{frequency:"~1×",amplitude:8}],envelopes:[{target:"operatorAmplitude",envelope:"swell 1",index:2},{target:"operatorAmplitude",envelope:"flare 2",index:3},{target:"feedbackAmplitude",envelope:"swell 1"}]}},{name:"brass section",midiProgram:61,generalMidi:!0,settings:{type:"FM",effects:"reverb",transition:"soft",chord:"harmony",filterCutoffHz:2828,filterResonance:14,filterEnvelope:"punch",vibrato:"none",algorithm:"1←3 2←4",feedbackType:"1⟲ 2⟲",feedbackAmplitude:6,feedbackEnvelope:"swell 1",operators:[{frequency:"1×",amplitude:14,envelope:"custom"},{frequency:"1×",amplitude:12,envelope:"custom"},{frequency:"1×",amplitude:10,envelope:"swell 1"},{frequency:"~1×",amplitude:10,envelope:"swell 1"}]}},{name:"brass synth 1",midiProgram:62,generalMidi:!0,settings:{type:"FM",effects:"reverb",transition:"soft",chord:"harmony",filterCutoffHz:4e3,filterResonance:29,filterEnvelope:"steady",vibrato:"none",algorithm:"1←3 2←4",feedbackType:"1⟲ 2⟲",feedbackAmplitude:11,feedbackEnvelope:"swell 1",operators:[{frequency:"1×",amplitude:14,envelope:"custom"},{frequency:"1×",amplitude:14,envelope:"custom"},{frequency:"1×",amplitude:12,envelope:"flare 1"},{frequency:"~1×",amplitude:8,envelope:"flare 2"}]}},{name:"brass synth 2",midiProgram:63,generalMidi:!0,settings:{type:"FM",transition:"soft",effects:"reverb",chord:"harmony",filterCutoffHz:4e3,filterResonance:43,filterEnvelope:"twang 3",vibrato:"none",algorithm:"1←3 2←4",feedbackType:"1⟲ 2⟲",feedbackAmplitude:9,feedbackEnvelope:"swell 1",operators:[{frequency:"1×",amplitude:15,envelope:"custom"},{frequency:"1×",amplitude:15,envelope:"custom"},{frequency:"1×",amplitude:10,envelope:"flare 1"},{frequency:"~1×",amplitude:7,envelope:"flare 1"}]}},{name:"pulse brass",midiProgram:62,settings:{type:"PWM",effects:"reverb",transition:"soft",chord:"harmony",filterCutoffHz:4e3,filterResonance:29,filterEnvelope:"swell 1",pulseWidth:50,pulseEnvelope:"flare 3",vibrato:"none"}}])},{name:"Reed Presets",presets:S([{name:"soprano sax",midiProgram:64,generalMidi:!0,settings:{type:"FM",effects:"reverb",transition:"soft",chord:"harmony",filterCutoffHz:2e3,filterResonance:29,filterEnvelope:"steady",vibrato:"none",algorithm:"1←2←3←4",feedbackType:"4⟲",feedbackAmplitude:5,feedbackEnvelope:"swell 1",operators:[{frequency:"1×",amplitude:13,envelope:"custom"},{frequency:"4×",amplitude:4,envelope:"swell 1"},{frequency:"1×",amplitude:7,envelope:"steady"},{frequency:"5×",amplitude:4,envelope:"punch"}]}},{name:"alto sax",midiProgram:65,generalMidi:!0,settings:{type:"FM",effects:"reverb",transition:"soft",chord:"harmony",filterCutoffHz:2e3,filterResonance:43,filterEnvelope:"steady",vibrato:"none",algorithm:"1←(2 3←4)",feedbackType:"1⟲",feedbackAmplitude:4,feedbackEnvelope:"punch",operators:[{frequency:"1×",amplitude:13,envelope:"custom"},{frequency:"1×",amplitude:6,envelope:"steady"},{frequency:"4×",amplitude:6,envelope:"swell 1"},{frequency:"1×",amplitude:12,envelope:"steady"}]}},{name:"tenor sax",midiProgram:66,generalMidi:!0,settings:{type:"FM",effects:"reverb",transition:"soft",chord:"harmony",filterCutoffHz:2828,filterResonance:29,filterEnvelope:"steady",vibrato:"none",algorithm:"1←2←3←4",feedbackType:"1⟲",feedbackAmplitude:6,feedbackEnvelope:"swell 1",operators:[{frequency:"2×",amplitude:12,envelope:"custom"},{frequency:"3×",amplitude:7,envelope:"steady"},{frequency:"1×",amplitude:3,envelope:"steady"},{frequency:"8×",amplitude:3,envelope:"steady"}]}},{name:"baritone sax",midiProgram:67,generalMidi:!0,settings:{type:"FM",effects:"reverb",transition:"soft",chord:"harmony",filterCutoffHz:2828,filterResonance:0,filterEnvelope:"steady",vibrato:"none",algorithm:"1←(2 3←4)",feedbackType:"1⟲",feedbackAmplitude:2,feedbackEnvelope:"swell 2",operators:[{frequency:"1×",amplitude:12,envelope:"custom"},{frequency:"8×",amplitude:4,envelope:"steady"},{frequency:"4×",amplitude:5,envelope:"steady"},{frequency:"1×",amplitude:4,envelope:"punch"}]}},{name:"sax synth",midiProgram:64,settings:{type:"FM",effects:"reverb",transition:"soft",chord:"harmony",filterCutoffHz:8e3,filterResonance:0,filterEnvelope:"steady",vibrato:"light",algorithm:"1←(2 3 4)",feedbackType:"1⟲ 2⟲",feedbackAmplitude:4,feedbackEnvelope:"steady",operators:[{frequency:"4×",amplitude:15,envelope:"custom"},{frequency:"1×",amplitude:15,envelope:"steady"},{frequency:"1×",amplitude:0,envelope:"steady"},{frequency:"1×",amplitude:0,envelope:"steady"}]}},{name:"shehnai",midiProgram:111,generalMidi:!0,settings:{type:"FM",effects:"reverb",transition:"soft",chord:"harmony",filterCutoffHz:8e3,filterResonance:0,filterEnvelope:"steady",vibrato:"light",algorithm:"1←(2 3 4)",feedbackType:"1⟲",feedbackAmplitude:3,feedbackEnvelope:"steady",operators:[{frequency:"4×",amplitude:15,envelope:"custom"},{frequency:"1×",amplitude:8,envelope:"steady"},{frequency:"1×",amplitude:0,envelope:"steady"},{frequency:"1×",amplitude:0,envelope:"steady"}]}},{name:"oboe",midiProgram:68,generalMidi:!0,settings:{type:"FM",effects:"reverb",transition:"cross fade",chord:"harmony",filterCutoffHz:4e3,filterResonance:14,filterEnvelope:"swell 1",vibrato:"none",algorithm:"1 2←(3 4)",feedbackType:"2⟲",feedbackAmplitude:2,feedbackEnvelope:"tremolo5",operators:[{frequency:"1×",amplitude:7,envelope:"custom"},{frequency:"4×",amplitude:12,envelope:"custom"},{frequency:"1×",amplitude:6,envelope:"steady"},{frequency:"6×",amplitude:2,envelope:"steady"}]}},{name:"english horn",midiProgram:69,generalMidi:!0,settings:{type:"FM",effects:"reverb",transition:"cross fade",chord:"harmony",filterCutoffHz:2e3,filterResonance:14,filterEnvelope:"steady",vibrato:"none",algorithm:"1 2←(3 4)",feedbackType:"2⟲",feedbackAmplitude:2,feedbackEnvelope:"steady",operators:[{frequency:"4×",amplitude:12,envelope:"custom"},{frequency:"2×",amplitude:10,envelope:"custom"},{frequency:"1×",amplitude:8,envelope:"punch"},{frequency:"8×",amplitude:4,envelope:"steady"}]}},{name:"bassoon",midiProgram:70,generalMidi:!0,settings:{type:"FM",effects:"reverb",transition:"soft",chord:"harmony",filterCutoffHz:707,filterResonance:57,filterEnvelope:"steady",vibrato:"none",algorithm:"1←(2 3←4)",feedbackType:"1⟲",feedbackAmplitude:2,feedbackEnvelope:"steady",operators:[{frequency:"2×",amplitude:11,envelope:"custom"},{frequency:"1×",amplitude:6,envelope:"steady"},{frequency:"6×",amplitude:6,envelope:"swell 1"},{frequency:"1×",amplitude:0,envelope:"steady"}]}},{name:"clarinet",midiProgram:71,generalMidi:!0,settings:{type:"harmonics",effects:"reverb",transition:"soft",chord:"harmony",filterCutoffHz:1414,filterResonance:14,filterEnvelope:"steady",interval:"union",vibrato:"none",harmonics:[100,43,86,57,86,71,86,71,71,71,71,71,71,43,71,71,57,57,57,57,57,57,43,43,43,29,14,0]}},{name:"harmonica",midiProgram:22,generalMidi:!0,settings:{type:"FM",effects:"reverb",transition:"soft",chord:"harmony",filterCutoffHz:5657,filterResonance:29,filterEnvelope:"swell 1",vibrato:"none",algorithm:"1←(2 3←4)",feedbackType:"1⟲",feedbackAmplitude:9,feedbackEnvelope:"tremolo5",operators:[{frequency:"2×",amplitude:14,envelope:"custom"},{frequency:"1×",amplitude:15,envelope:"steady"},{frequency:"~2×",amplitude:2,envelope:"twang 3"},{frequency:"1×",amplitude:0,envelope:"steady"}]}}])},{name:"Flute Presets",presets:S([{name:"flute 1",midiProgram:73,generalMidi:!0,settings:{type:"FM",effects:"reverb",transition:"soft",chord:"harmony",filterCutoffHz:5657,filterResonance:14,filterEnvelope:"steady",vibrato:"none",algorithm:"1←(2 3 4)",feedbackType:"4⟲",feedbackAmplitude:7,feedbackEnvelope:"decay 2",operators:[{frequency:"1×",amplitude:15,envelope:"custom"},{frequency:"2×",amplitude:4,envelope:"steady"},{frequency:"1×",amplitude:3,envelope:"steady"},{frequency:"~1×",amplitude:1,envelope:"punch"}]}},{name:"recorder",midiProgram:74,generalMidi:!0,settings:{type:"harmonics",effects:"reverb",transition:"soft",chord:"harmony",filterCutoffHz:4e3,filterResonance:29,filterEnvelope:"swell 2",interval:"union",vibrato:"none",harmonics:[100,43,57,43,57,43,43,43,43,43,43,43,43,29,29,29,29,29,29,29,14,14,14,14,14,14,14,0]}},{name:"whistle",midiProgram:78,generalMidi:!0,settings:{type:"harmonics",effects:"chorus & reverb",transition:"soft",chord:"harmony",filterCutoffHz:2e3,filterResonance:43,filterEnvelope:"steady",interval:"union",vibrato:"delayed",harmonics:[100,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0]}},{name:"ocarina",midiProgram:79,generalMidi:!0,settings:{type:"harmonics",effects:"reverb",transition:"soft",chord:"harmony",filterCutoffHz:2828,filterResonance:43,filterEnvelope:"steady",interval:"union",vibrato:"none",harmonics:[100,14,57,14,29,14,14,14,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0]}},{name:"piccolo",midiProgram:72,generalMidi:!0,settings:{type:"FM",effects:"reverb",transition:"soft",chord:"harmony",filterCutoffHz:5657,filterResonance:43,filterEnvelope:"steady",vibrato:"none",algorithm:"1←3 2←4",feedbackType:"4⟲",feedbackAmplitude:15,feedbackEnvelope:"twang 1",operators:[{frequency:"1×",amplitude:15,envelope:"custom"},{frequency:"1×",amplitude:10,envelope:"custom"},{frequency:"~2×",amplitude:3,envelope:"punch"},{frequency:"~1×",amplitude:5,envelope:"punch"}]}},{name:"shakuhachi",midiProgram:77,generalMidi:!0,settings:{type:"FM",effects:"chorus & reverb",transition:"soft",chord:"harmony",filterCutoffHz:4e3,filterResonance:14,filterEnvelope:"steady",vibrato:"delayed",algorithm:"1←(2 3←4)",feedbackType:"3→4",feedbackAmplitude:15,feedbackEnvelope:"steady",operators:[{frequency:"1×",amplitude:15,envelope:"custom"},{frequency:"2×",amplitude:3,envelope:"punch"},{frequency:"~1×",amplitude:4,envelope:"twang 1"},{frequency:"20×",amplitude:15,envelope:"steady"}]}},{name:"pan flute",midiProgram:75,generalMidi:!0,settings:{type:"spectrum",eqFilter:[{type:"low-pass",cutoffHz:9513.66,linearGain:5.6569}],effects:["note filter","reverb"],noteFilter:[{type:"high-pass",cutoffHz:4756.83,linearGain:.7071}],reverb:33,fadeInSeconds:.0125,fadeOutTicks:-3,spectrum:[100,0,0,0,0,0,0,14,0,0,0,71,0,0,14,0,57,0,29,14,29,14,14,29,14,29,14,14,29,14],envelopes:[{target:"noteFilterFreq",envelope:"twang 1",index:0},{target:"noteVolume",envelope:"punch"}]}},{name:"blown bottle",midiProgram:76,generalMidi:!0,settings:{type:"FM",effects:"chorus & reverb",transition:"cross fade",chord:"harmony",filterCutoffHz:5657,filterResonance:57,filterEnvelope:"steady",vibrato:"none",algorithm:"1 2 3 4",feedbackType:"1⟲ 2⟲ 3⟲ 4⟲",feedbackAmplitude:7,feedbackEnvelope:"twang 1",operators:[{frequency:"1×",amplitude:15,envelope:"custom"},{frequency:"3×",amplitude:4,envelope:"custom"},{frequency:"6×",amplitude:2,envelope:"custom"},{frequency:"11×",amplitude:2,envelope:"custom"}]}},{name:"calliope",midiProgram:82,generalMidi:!0,settings:{type:"spectrum",transition:"cross fade",effects:"reverb",chord:"harmony",filterCutoffHz:5657,filterResonance:14,filterEnvelope:"steady",spectrum:[100,0,0,0,0,0,0,86,0,0,0,71,0,0,57,0,43,0,29,14,14,29,14,14,14,14,14,14,14,14]}},{name:"chiffer",midiProgram:83,generalMidi:!0,settings:{type:"spectrum",effects:"reverb",transition:"hard",chord:"harmony",filterCutoffHz:2e3,filterResonance:14,filterEnvelope:"punch",spectrum:[86,0,0,0,0,0,0,71,0,0,0,71,0,0,57,0,57,0,43,14,14,43,14,29,14,29,29,29,29,14]}},{name:"breath noise",midiProgram:121,generalMidi:!0,settings:{type:"spectrum",eqFilter:[],effects:["chord type","note filter","reverb"],chord:"strum",noteFilter:[{type:"high-pass",cutoffHz:840.9,linearGain:.3536},{type:"low-pass",cutoffHz:16e3,linearGain:.3536}],reverb:33,fadeInSeconds:.0413,fadeOutTicks:12,spectrum:[71,0,0,0,0,0,0,29,0,0,0,71,0,0,29,0,100,29,14,29,100,29,100,14,14,71,0,29,0,0],envelopes:[{target:"noteFilterAllFreqs",envelope:"twang 1"}]}},{name:"flute 2",midiProgram:73,generalMidi:!0,settings:{type:"harmonics",effects:"reverb",transition:"seamless",chord:"harmony",filterCutoffHz:1414,filterResonance:14,filterEnvelope:"steady",interval:"union",vibrato:"delayed",harmonics:[100,43,86,57,86,71,86,71,71,71,71,71,71,43,71,71,57,57,57,57,57,57,43,43,43,29,14,0]}}])},{name:"Pad Presets",presets:S([{name:"new age pad",midiProgram:88,generalMidi:!0,settings:{type:"FM",eqFilter:[],effects:["chorus"],chorus:100,transition:"normal",fadeInSeconds:0,fadeOutTicks:48,chord:"simultaneous",algorithm:"1←(2 3←4)",feedbackType:"1⟲ 2⟲",feedbackAmplitude:3,operators:[{frequency:"2×",amplitude:14},{frequency:"~1×",amplitude:4},{frequency:"6×",amplitude:3},{frequency:"13×",amplitude:3}],envelopes:[{target:"operatorAmplitude",envelope:"swell 2",index:1},{target:"operatorAmplitude",envelope:"twang 3",index:2},{target:"feedbackAmplitude",envelope:"swell 3"}]}},{name:"warm pad",midiProgram:89,generalMidi:!0,settings:{type:"FM",eqFilter:[],effects:["note filter","chorus"],noteFilter:[{type:"low-pass",cutoffHz:3363.59,linearGain:1}],chorus:100,transition:"normal",fadeInSeconds:.0575,fadeOutTicks:96,chord:"simultaneous",algorithm:"1←(2 3 4)",feedbackType:"1⟲",feedbackAmplitude:7,operators:[{frequency:"1×",amplitude:14},{frequency:"1×",amplitude:6},{frequency:"1×",amplitude:0},{frequency:"1×",amplitude:0}],envelopes:[{target:"noteFilterAllFreqs",envelope:"swell 3"},{target:"operatorAmplitude",envelope:"swell 1",index:1}]}},{name:"polysynth pad",midiProgram:90,generalMidi:!0,settings:{type:"chip",eqFilter:[],effects:["vibrato","note filter","chorus"],vibrato:"delayed",noteFilter:[{type:"low-pass",cutoffHz:2828.43,linearGain:1}],chorus:100,transition:"normal",fadeInSeconds:0,fadeOutTicks:48,chord:"simultaneous",wave:"sawtooth",unison:"honky tonk",envelopes:[{target:"noteFilterAllFreqs",envelope:"twang 3"}]}},{name:"space voice pad",midiProgram:91,generalMidi:!0,settings:{type:"FM",eqFilter:[{type:"low-pass",cutoffHz:6727.17,linearGain:5.6569},{type:"peak",cutoffHz:2828.43,linearGain:5.6569},{type:"peak",cutoffHz:1414.21,linearGain:.1768}],effects:["chorus"],chorus:100,transition:"normal",fadeInSeconds:.0125,fadeOutTicks:72,chord:"simultaneous",algorithm:"(1 2 3)←4",feedbackType:"1⟲ 2⟲ 3⟲ 4⟲",feedbackAmplitude:5,operators:[{frequency:"1×",amplitude:10},{frequency:"2×",amplitude:8},{frequency:"3×",amplitude:7},{frequency:"11×",amplitude:2}],envelopes:[{target:"operatorAmplitude",envelope:"punch",index:3},{target:"feedbackAmplitude",envelope:"swell 2"}]}},{name:"bowed glass pad",midiProgram:92,generalMidi:!0,settings:{type:"FM",eqFilter:[],effects:["note filter"],noteFilter:[{type:"low-pass",cutoffHz:4756.83,linearGain:.5}],transition:"normal",fadeInSeconds:.0575,fadeOutTicks:96,chord:"simultaneous",algorithm:"1←3 2←4",feedbackType:"1⟲ 2⟲",feedbackAmplitude:0,operators:[{frequency:"1×",amplitude:10},{frequency:"2×",amplitude:12},{frequency:"3×",amplitude:7},{frequency:"7×",amplitude:4}],envelopes:[{target:"noteFilterAllFreqs",envelope:"twang 3"},{target:"operatorAmplitude",envelope:"twang 3",index:2},{target:"operatorAmplitude",envelope:"flare 3",index:3}]}},{name:"metallic pad",midiProgram:93,generalMidi:!0,settings:{type:"FM",eqFilter:[],effects:["note filter"],noteFilter:[{type:"low-pass",cutoffHz:6727.17,linearGain:.5}],transition:"normal",fadeInSeconds:.0125,fadeOutTicks:72,chord:"simultaneous",algorithm:"1←3 2←4",feedbackType:"1⟲ 2⟲",feedbackAmplitude:13,operators:[{frequency:"1×",amplitude:15},{frequency:"~1×",amplitude:9},{frequency:"1×",amplitude:7},{frequency:"11×",amplitude:7}],envelopes:[{target:"noteFilterAllFreqs",envelope:"twang 3"},{target:"operatorAmplitude",envelope:"swell 2",index:2},{target:"feedbackAmplitude",envelope:"twang 3"}]}},{name:"sweep pad",midiProgram:95,generalMidi:!0,settings:{type:"chip",eqFilter:[],effects:["note filter","chorus"],noteFilter:[{type:"low-pass",cutoffHz:4e3,linearGain:4}],chorus:100,transition:"normal",fadeInSeconds:.0575,fadeOutTicks:96,chord:"simultaneous",wave:"sawtooth",unison:"hum",envelopes:[{target:"noteFilterAllFreqs",envelope:"flare 3"}]}},{name:"atmosphere",midiProgram:99,generalMidi:!0,settings:{type:"FM",eqFilter:[{type:"low-pass",cutoffHz:4756.83,linearGain:1}],effects:["chorus","reverb"],chorus:100,reverb:33,transition:"normal",fadeInSeconds:0,fadeOutTicks:48,chord:"strum",algorithm:"1←(2 3 4)",feedbackType:"3⟲ 4⟲",feedbackAmplitude:3,operators:[{frequency:"1×",amplitude:14},{frequency:"~1×",amplitude:10},{frequency:"3×",amplitude:7},{frequency:"1×",amplitude:7}],envelopes:[{target:"operatorAmplitude",envelope:"swell 3",index:1},{target:"operatorAmplitude",envelope:"twang 2",index:2},{target:"operatorAmplitude",envelope:"twang 3",index:3}]}},{name:"brightness",midiProgram:100,generalMidi:!0,settings:{type:"Picked String",eqFilter:[{type:"low-pass",cutoffHz:4756.83,linearGain:2}],effects:["chorus"],chorus:100,transition:"normal",fadeInSeconds:.0125,fadeOutTicks:72,chord:"simultaneous",harmonics:[100,86,86,86,43,57,43,71,43,43,43,57,43,43,57,71,57,43,29,43,57,57,43,29,29,29,29,14],unison:"octave",stringSustain:86,envelopes:[]}},{name:"goblins",midiProgram:101,generalMidi:!0,settings:{type:"FM",eqFilter:[{type:"peak",cutoffHz:2828.43,linearGain:11.3137}],effects:["note filter","chorus"],noteFilter:[{type:"low-pass",cutoffHz:1681.79,linearGain:.5}],chorus:100,transition:"normal",fadeInSeconds:.0575,fadeOutTicks:96,chord:"simultaneous",algorithm:"1←2←3←4",feedbackType:"1⟲",feedbackAmplitude:10,operators:[{frequency:"1×",amplitude:15},{frequency:"4×",amplitude:5},{frequency:"1×",amplitude:10},{frequency:"1×",amplitude:0}],envelopes:[{target:"noteFilterAllFreqs",envelope:"swell 2"},{target:"operatorAmplitude",envelope:"swell 3",index:1},{target:"operatorAmplitude",envelope:"tremolo1",index:2},{target:"feedbackAmplitude",envelope:"flare 3"}]}},{name:"sci-fi",midiProgram:103,generalMidi:!0,settings:{type:"FM",eqFilter:[{type:"peak",cutoffHz:9513.66,linearGain:2.8284}],effects:["note filter","chorus"],noteFilter:[{type:"low-pass",cutoffHz:6727.17,linearGain:.5}],chorus:100,transition:"normal",fadeInSeconds:.0125,fadeOutTicks:48,chord:"simultaneous",algorithm:"(1 2)←3←4",feedbackType:"1⟲ 2⟲ 3⟲ 4⟲",feedbackAmplitude:8,operators:[{frequency:"~1×",amplitude:13},{frequency:"2×",amplitude:10},{frequency:"5×",amplitude:5},{frequency:"11×",amplitude:8}],envelopes:[{target:"noteFilterAllFreqs",envelope:"twang 3"},{target:"operatorAmplitude",envelope:"twang 3",index:2},{target:"operatorAmplitude",envelope:"tremolo5",index:3},{target:"feedbackAmplitude",envelope:"twang 3"}]}},{name:"flutter pad",midiProgram:90,settings:{type:"FM",eqFilter:[],effects:["vibrato","note filter","chorus"],vibrato:"delayed",noteFilter:[{type:"low-pass",cutoffHz:4e3,linearGain:4}],chorus:100,transition:"normal",fadeInSeconds:0,fadeOutTicks:48,chord:"simultaneous",algorithm:"(1 2)←(3 4)",feedbackType:"1⟲ 2⟲ 3⟲",feedbackAmplitude:9,operators:[{frequency:"1×",amplitude:13},{frequency:"5×",amplitude:7},{frequency:"7×",amplitude:5},{frequency:"~1×",amplitude:6}],envelopes:[{target:"noteFilterAllFreqs",envelope:"twang 3"},{target:"operatorAmplitude",envelope:"tremolo1",index:2},{target:"operatorAmplitude",envelope:"punch",index:3}]}},{name:"feedback pad",midiProgram:89,settings:{type:"FM",eqFilter:[{type:"peak",cutoffHz:2378.41,linearGain:8}],effects:[],transition:"normal",fadeInSeconds:.0575,fadeOutTicks:96,chord:"custom interval",algorithm:"1 2 3 4",feedbackType:"1⟲ 2⟲ 3⟲ 4⟲",feedbackAmplitude:8,operators:[{frequency:"1×",amplitude:15},{frequency:"1×",amplitude:15},{frequency:"1×",amplitude:15},{frequency:"~1×",amplitude:15}],envelopes:[{target:"feedbackAmplitude",envelope:"swell 2"}]}},{name:"supersaw pad",midiProgram:93,settings:{type:"supersaw",eqFilter:[{type:"low-pass",cutoffHz:8e3,linearGain:.1768}],effects:["reverb"],reverb:100,fadeInSeconds:.0263,fadeOutTicks:24,pulseWidth:50,dynamism:100,spread:58,shape:0,envelopes:[]}}])},{name:"Drum Presets",presets:S([{name:"standard drumset",midiProgram:116,isNoise:!0,settings:{type:"drumset",effects:"reverb",drums:[{filterEnvelope:"twang 1",spectrum:[57,71,71,86,86,86,71,71,71,71,57,57,57,57,43,43,43,43,29,29,29,29,29,29,29,29,29,29,29,29]},{filterEnvelope:"twang 1",spectrum:[0,0,0,100,71,71,57,86,57,57,57,71,43,43,57,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43]},{filterEnvelope:"twang 1",spectrum:[0,0,0,0,100,57,43,43,29,57,43,29,71,43,43,43,43,57,43,43,43,43,43,43,43,43,29,43,43,43]},{filterEnvelope:"twang 1",spectrum:[0,0,0,0,0,71,57,43,43,43,57,57,43,29,57,43,43,43,29,43,57,43,43,43,43,43,43,29,43,43]},{filterEnvelope:"decay 2",spectrum:[0,14,29,43,86,71,29,43,43,43,43,29,71,29,71,29,43,43,43,43,57,43,43,57,43,43,43,57,57,57]},{filterEnvelope:"decay 1",spectrum:[0,0,14,14,14,14,29,29,29,43,43,43,57,57,57,71,71,71,71,71,71,71,71,57,57,57,57,43,43,43]},{filterEnvelope:"twang 3",spectrum:[43,43,43,71,29,29,43,43,43,29,43,43,43,29,29,43,43,29,29,29,57,14,57,43,43,57,43,43,57,57]},{filterEnvelope:"decay 3",spectrum:[29,43,43,43,43,29,29,43,29,29,43,29,14,29,43,29,43,29,57,29,43,57,43,71,43,71,57,57,71,71]},{filterEnvelope:"twang 3",spectrum:[43,29,29,43,29,29,29,57,29,29,29,57,43,43,29,29,57,43,43,43,71,43,43,71,57,71,71,71,71,71]},{filterEnvelope:"decay 3",spectrum:[57,57,57,43,57,57,43,43,57,43,43,43,71,57,43,57,86,71,57,86,71,57,86,100,71,86,86,86,86,86]},{filterEnvelope:"flare 1",spectrum:[0,0,14,14,14,14,29,29,29,43,43,43,57,57,71,71,86,86,100,100,100,100,100,100,100,100,86,57,29,0]},{filterEnvelope:"decay 2",spectrum:[14,14,14,14,29,14,14,29,14,43,14,43,57,86,57,57,100,57,43,43,57,100,57,43,29,14,0,0,0,0]}]}},{name:"steel pan",midiProgram:114,generalMidi:!0,settings:{type:"FM",eqFilter:[{type:"high-pass",cutoffHz:62.5,linearGain:.1768}],effects:["note filter","chorus","reverb"],noteFilter:[{type:"low-pass",cutoffHz:13454.34,linearGain:.25}],chorus:67,reverb:33,transition:"normal",fadeInSeconds:0,fadeOutTicks:24,chord:"simultaneous",algorithm:"1←(2 3←4)",feedbackType:"1⟲",feedbackAmplitude:0,operators:[{frequency:"~1×",amplitude:14},{frequency:"7×",amplitude:3},{frequency:"3×",amplitude:5},{frequency:"4×",amplitude:4}],envelopes:[{target:"noteFilterAllFreqs",envelope:"decay 2"},{target:"operatorAmplitude",envelope:"flare 1",index:1},{target:"operatorAmplitude",envelope:"flare 2",index:2},{target:"operatorAmplitude",envelope:"swell 2",index:3}]}},{name:"steel pan synth",midiProgram:114,settings:{type:"FM",eqFilter:[],effects:["note filter"],noteFilter:[{type:"low-pass",cutoffHz:13454.34,linearGain:.25}],transition:"normal",fadeInSeconds:0,fadeOutTicks:-3,chord:"simultaneous",algorithm:"1 2 3←4",feedbackType:"1⟲",feedbackAmplitude:5,operators:[{frequency:"~1×",amplitude:12},{frequency:"2×",amplitude:15},{frequency:"4×",amplitude:14},{frequency:"~1×",amplitude:3}],envelopes:[{target:"noteFilterAllFreqs",envelope:"twang 1"},{target:"operatorAmplitude",envelope:"note size",index:0},{target:"operatorAmplitude",envelope:"note size",index:1},{target:"operatorAmplitude",envelope:"flare 1",index:2},{target:"operatorAmplitude",envelope:"flare 2",index:3},{target:"feedbackAmplitude",envelope:"flare 1"}]}},{name:"timpani",midiProgram:47,generalMidi:!0,settings:{type:"spectrum",eqFilter:[{type:"peak",cutoffHz:6727.17,linearGain:5.6569}],effects:["pitch shift","note filter","reverb"],pitchShiftSemitones:15,noteFilter:[{type:"low-pass",cutoffHz:19027.31,linearGain:.5}],reverb:33,transition:"normal",fadeInSeconds:0,fadeOutTicks:48,chord:"simultaneous",spectrum:[100,0,0,0,86,0,0,71,0,14,43,14,43,43,0,29,43,29,29,29,43,29,43,29,43,43,43,43,43,43],envelopes:[{target:"noteFilterAllFreqs",envelope:"twang 1"},{target:"pitchShift",envelope:"twang 1"}]}},{name:"dark strike",midiProgram:47,settings:{type:"spectrum",eqFilter:[],effects:["note filter","reverb"],noteFilter:[{type:"low-pass",cutoffHz:4756.83,linearGain:.7071}],reverb:33,transition:"normal",fadeInSeconds:0,fadeOutTicks:48,chord:"simultaneous",spectrum:[0,0,14,14,14,29,29,43,43,86,43,43,43,29,86,29,29,29,86,29,14,14,14,14,0,0,0,0,0,0],envelopes:[{target:"noteFilterAllFreqs",envelope:"twang 2"}]}},{name:"woodblock",midiProgram:115,generalMidi:!0,isNoise:!0,midiSubharmonicOctaves:-2.5,settings:{type:"spectrum",effects:"reverb",transition:"hard fade",chord:"strum",filterCutoffHz:2828,filterResonance:14,filterEnvelope:"twang 1",spectrum:[0,14,29,43,43,57,86,86,71,57,57,43,43,57,86,86,43,43,71,57,57,57,57,57,86,86,71,71,71,71]}},{name:"taiko drum",midiProgram:116,generalMidi:!0,isNoise:!0,midiSubharmonicOctaves:-.5,settings:{type:"spectrum",effects:"reverb",transition:"hard fade",chord:"strum",filterCutoffHz:2828,filterResonance:29,filterEnvelope:"twang 1",spectrum:[71,100,100,43,43,71,71,43,43,43,43,43,43,57,29,57,43,57,43,43,57,43,43,43,43,43,43,43,43,43]}},{name:"melodic drum",midiProgram:117,generalMidi:!0,isNoise:!0,midiSubharmonicOctaves:-1.5,settings:{type:"spectrum",effects:"reverb",transition:"hard fade",chord:"strum",filterCutoffHz:2828,filterResonance:43,filterEnvelope:"twang 1",spectrum:[100,71,71,57,57,43,43,71,43,43,43,57,43,43,57,43,43,43,43,29,29,29,29,29,29,29,29,29,29,29]}},{name:"drum synth",midiProgram:118,generalMidi:!0,isNoise:!0,midiSubharmonicOctaves:-2,settings:{type:"spectrum",effects:"reverb",transition:"hard fade",chord:"harmony",filterCutoffHz:4e3,filterResonance:43,filterEnvelope:"decay 1",spectrum:[100,86,71,57,43,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29]}},{name:"tom-tom",midiProgram:116,isNoise:!0,midiSubharmonicOctaves:-1,settings:{type:"spectrum",effects:"reverb",transition:"hard fade",chord:"strum",filterCutoffHz:2e3,filterResonance:14,filterEnvelope:"twang 1",spectrum:[100,29,14,0,0,86,14,43,29,86,29,14,29,57,43,43,43,43,57,43,43,43,29,57,43,43,43,43,43,43]}},{name:"metal pipe",midiProgram:117,isNoise:!0,midiSubharmonicOctaves:-1.5,settings:{type:"spectrum",effects:"reverb",transition:"hard fade",chord:"strum",filterCutoffHz:8e3,filterResonance:14,filterEnvelope:"twang 2",spectrum:[29,43,86,43,43,43,43,43,100,29,14,14,100,14,14,0,0,0,0,0,14,29,29,14,0,0,14,29,0,0]}},{name:"synth kick",midiProgram:47,settings:{type:"FM",eqFilter:[],effects:[],transition:"normal",fadeInSeconds:0,fadeOutTicks:-6,chord:"simultaneous",algorithm:"1←(2 3 4)",feedbackType:"1⟲",feedbackAmplitude:0,operators:[{frequency:"8×",amplitude:15},{frequency:"1×",amplitude:0},{frequency:"1×",amplitude:0},{frequency:"1×",amplitude:0}],envelopes:[{target:"operatorFrequency",envelope:"twang 1",index:0},{target:"noteVolume",envelope:"twang 2"}]}}])},{name:"Novelty Presets",presets:S([{name:"guitar fret noise",midiProgram:120,generalMidi:!0,settings:{type:"spectrum",eqFilter:[{type:"high-pass",cutoffHz:1e3,linearGain:.1768}],effects:["note filter"],noteFilter:[{type:"low-pass",cutoffHz:6727.17,linearGain:5.6569}],transition:"normal",fadeInSeconds:.0125,fadeOutTicks:-3,chord:"simultaneous",spectrum:[0,0,0,0,0,0,0,0,0,0,0,0,0,14,0,0,0,29,14,0,0,43,0,43,0,71,43,0,57,0],envelopes:[{target:"noteFilterAllFreqs",envelope:"flare 1"},{target:"noteVolume",envelope:"twang 2"}]}},{name:"fifth saw lead",midiProgram:86,generalMidi:!0,midiSubharmonicOctaves:1,settings:{type:"chip",eqFilter:[],effects:["note filter","chorus"],noteFilter:[{type:"low-pass",cutoffHz:2828.43,linearGain:1.4142}],chorus:67,transition:"normal",fadeInSeconds:0,fadeOutTicks:48,chord:"simultaneous",wave:"sawtooth",unison:"fifth",envelopes:[{target:"noteFilterAllFreqs",envelope:"twang 3"}]}},{name:"fifth swell",midiProgram:86,midiSubharmonicOctaves:1,settings:{type:"chip",eqFilter:[],effects:["note filter","chorus"],noteFilter:[{type:"low-pass",cutoffHz:2e3,linearGain:2}],chorus:100,transition:"normal",fadeInSeconds:.0125,fadeOutTicks:72,chord:"simultaneous",wave:"sawtooth",unison:"fifth",envelopes:[{target:"noteFilterAllFreqs",envelope:"swell 3"}]}},{name:"soundtrack",midiProgram:97,generalMidi:!0,settings:{type:"chip",eqFilter:[],effects:["note filter","chorus"],noteFilter:[{type:"low-pass",cutoffHz:2378.41,linearGain:.5}],chorus:67,transition:"normal",fadeInSeconds:.0413,fadeOutTicks:72,chord:"simultaneous",wave:"sawtooth",unison:"fifth",envelopes:[{target:"noteFilterAllFreqs",envelope:"flare 3"}]}},{name:"reverse cymbal",midiProgram:119,generalMidi:!0,isNoise:!0,midiSubharmonicOctaves:-3,settings:{type:"spectrum",effects:"none",transition:"soft",chord:"harmony",filterCutoffHz:4e3,filterResonance:14,filterEnvelope:"swell 3",spectrum:[29,57,57,29,57,57,29,29,43,29,29,43,29,29,57,57,14,57,14,57,71,71,57,86,57,100,86,86,86,86]}},{name:"seashore",midiProgram:122,generalMidi:!0,isNoise:!0,midiSubharmonicOctaves:-3,settings:{type:"spectrum",transition:"soft fade",effects:"reverb",chord:"harmony",filterCutoffHz:2828,filterResonance:0,filterEnvelope:"swell 3",spectrum:[14,14,29,29,43,43,43,57,57,57,57,57,57,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,57]}},{name:"bird tweet",midiProgram:123,generalMidi:!0,settings:{type:"harmonics",eqFilter:[],effects:["chord type","vibrato","reverb"],chord:"strum",vibrato:"heavy",reverb:67,fadeInSeconds:.0575,fadeOutTicks:-6,harmonics:[0,0,0,100,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],unison:"hum",envelopes:[{target:"noteVolume",envelope:"decay 1"}]}},{name:"telephone ring",midiProgram:124,generalMidi:!0,settings:{type:"FM",eqFilter:[],effects:["note filter"],noteFilter:[{type:"low-pass",cutoffHz:5656.85,linearGain:1}],transition:"normal",fadeInSeconds:.0125,fadeOutTicks:-3,chord:"arpeggio",algorithm:"1←(2 3 4)",feedbackType:"1⟲",feedbackAmplitude:0,operators:[{frequency:"2×",amplitude:12},{frequency:"1×",amplitude:4},{frequency:"20×",amplitude:1},{frequency:"1×",amplitude:0}],envelopes:[{target:"noteFilterAllFreqs",envelope:"tremolo4"},{target:"operatorAmplitude",envelope:"tremolo1",index:1}]}},{name:"helicopter",midiProgram:125,generalMidi:!0,isNoise:!0,midiSubharmonicOctaves:-.5,settings:{type:"spectrum",effects:"reverb",transition:"seamless",chord:"arpeggio",filterCutoffHz:1414,filterResonance:14,filterEnvelope:"tremolo4",spectrum:[14,43,43,57,57,57,71,71,71,71,86,86,86,86,86,86,86,86,86,86,86,71,71,71,71,71,71,71,57,57]}},{name:"applause",midiProgram:126,generalMidi:!0,isNoise:!0,midiSubharmonicOctaves:-3,settings:{type:"spectrum",effects:"reverb",transition:"soft fade",chord:"harmony",filterCutoffHz:2e3,filterResonance:14,filterEnvelope:"swell 3",spectrum:[14,14,29,29,29,43,43,57,71,71,86,86,86,71,71,57,57,57,71,86,86,86,86,86,71,71,57,57,57,57]}},{name:"gunshot",midiProgram:127,generalMidi:!0,isNoise:!0,midiSubharmonicOctaves:-2,settings:{type:"spectrum",effects:"reverb",transition:"hard fade",chord:"strum",filterCutoffHz:1414,filterResonance:29,filterEnvelope:"twang 1",spectrum:[14,29,43,43,57,57,57,71,71,71,86,86,86,86,86,86,86,86,86,86,86,71,71,71,71,57,57,57,57,43]}},{name:"scoot",midiProgram:92,settings:{type:"chip",eqFilter:[],effects:["note filter"],noteFilter:[{type:"low-pass",cutoffHz:707.11,linearGain:4}],transition:"normal",fadeInSeconds:.0125,fadeOutTicks:-3,chord:"simultaneous",wave:"double saw",unison:"shimmer",envelopes:[{target:"noteFilterAllFreqs",envelope:"flare 1"}]}},{name:"buzz saw",midiProgram:30,settings:{type:"FM",eqFilter:[{type:"low-pass",cutoffHz:9513.66,linearGain:.5}],effects:[],transition:"normal",fadeInSeconds:.0263,fadeOutTicks:-3,chord:"custom interval",algorithm:"1←2←3←4",feedbackType:"1⟲",feedbackAmplitude:4,operators:[{frequency:"5×",amplitude:13},{frequency:"1×",amplitude:10},{frequency:"~1×",amplitude:6},{frequency:"11×",amplitude:12}],envelopes:[]}},{name:"mosquito",midiProgram:93,settings:{type:"PWM",eqFilter:[{type:"low-pass",cutoffHz:2828.43,linearGain:2}],effects:["vibrato"],vibrato:"shaky",transition:"normal",fadeInSeconds:.0575,fadeOutTicks:-6,chord:"simultaneous",pulseWidth:4.41942,envelopes:[{target:"pulseWidth",envelope:"tremolo6"}]}},{name:"breathing",midiProgram:126,isNoise:!0,midiSubharmonicOctaves:-1,settings:{type:"spectrum",effects:"reverb",transition:"hard fade",chord:"harmony",filterCutoffHz:2e3,filterResonance:14,filterEnvelope:"swell 2",spectrum:[14,14,14,29,29,29,29,29,43,29,29,43,43,43,29,29,71,43,86,86,57,100,86,86,86,86,71,86,71,57]}},{name:"klaxon synth",midiProgram:125,isNoise:!0,midiSubharmonicOctaves:-1,settings:{type:"noise",effects:"reverb",transition:"slide",chord:"harmony",filterCutoffHz:2e3,filterResonance:86,filterEnvelope:"steady",wave:"buzz"}},{name:"theremin",midiProgram:40,settings:{type:"harmonics",eqFilter:[{type:"low-pass",cutoffHz:8e3,linearGain:.7071}],effects:["vibrato","reverb"],vibrato:"heavy",reverb:33,transition:"slide in pattern",fadeInSeconds:.0263,fadeOutTicks:-6,chord:"simultaneous",harmonics:[100,71,57,43,29,29,14,14,14,14,14,14,14,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],unison:"none",envelopes:[]}},{name:"sonar ping",midiProgram:121,settings:{type:"spectrum",eqFilter:[],effects:["note filter","reverb"],noteFilter:[{type:"low-pass",cutoffHz:1681.79,linearGain:.5}],reverb:33,transition:"normal",fadeInSeconds:.0125,fadeOutTicks:72,chord:"simultaneous",spectrum:[100,43,29,29,14,14,14,14,14,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],envelopes:[{target:"noteFilterAllFreqs",envelope:"twang 2"}]}}])},{name:"UltraBox Presets",presets:S([{name:"nes white",midiProgram:116,generalMidi:!0,isNoise:!0,settings:{type:"noise",eqFilter:[],eqFilterType:!1,eqSimpleCut:8,eqSimplePeak:0,eqSubFilters1:[],effects:["panning"],pan:0,panDelay:10,fadeInSeconds:0,fadeOutTicks:0,wave:"1-bit white",envelopes:[]}},{name:"nes ping",midiProgram:116,generalMidi:!0,isNoise:!0,settings:{type:"noise",eqFilter:[],eqFilterType:!1,eqSimpleCut:8,eqSimplePeak:0,eqSubFilters1:[],effects:["panning"],pan:0,panDelay:10,fadeInSeconds:0,fadeOutTicks:0,wave:"1-bit metallic",envelopes:[]}},{name:"distorted pulse vocal",generalMidi:!1,settings:{type:"chip",eqFilter:[{type:"low-pass",cutoffHz:19027.31,linearGain:.0884}],eqFilterType:!1,eqSimpleCut:10,eqSimplePeak:0,eqSubFilters0:[{type:"low-pass",cutoffHz:19027.31,linearGain:.0884}],effects:["panning","transition type","pitch shift","vibrato","note filter","bitcrusher","echo","reverb"],transition:"normal",clicklessTransition:!1,pitchShiftSemitones:0,vibrato:"delayed",vibratoDepth:.3,vibratoDelay:18.5,vibratoSpeed:10,vibratoType:0,noteFilterType:!1,noteSimpleCut:10,noteSimplePeak:0,noteFilter:[{type:"high-pass",cutoffHz:840.9,linearGain:11.3137},{type:"low-pass",cutoffHz:297.3,linearGain:8},{type:"peak",cutoffHz:500,linearGain:11.3137},{type:"high-pass",cutoffHz:62.5,linearGain:1.4142},{type:"peak",cutoffHz:176.78,linearGain:11.3137},{type:"high-pass",cutoffHz:250,linearGain:11.3137}],noteSubFilters0:[{type:"high-pass",cutoffHz:840.9,linearGain:11.3137},{type:"low-pass",cutoffHz:297.3,linearGain:8},{type:"peak",cutoffHz:500,linearGain:11.3137},{type:"high-pass",cutoffHz:62.5,linearGain:1.4142},{type:"peak",cutoffHz:176.78,linearGain:11.3137},{type:"high-pass",cutoffHz:250,linearGain:11.3137}],bitcrusherOctave:6.5,bitcrusherQuantization:71,pan:0,panDelay:10,echoSustain:14,echoDelayBeats:.167,reverb:0,fadeInSeconds:0,fadeOutTicks:-3,wave:"1/8 pulse",unison:"none",envelopes:[]}},{name:"dubstep bwah",generalMidi:!1,settings:{type:"FM",eqFilter:[{type:"low-pass",cutoffHz:19027.31,linearGain:.7071}],eqFilterType:!0,eqSimpleCut:10,eqSimplePeak:0,eqSubFilters1:[],effects:["panning","transition type","chord type"],transition:"interrupt",clicklessTransition:!1,chord:"custom interval",fastTwoNoteArp:!1,arpeggioSpeed:12,pan:0,panDelay:10,fadeInSeconds:0,fadeOutTicks:-1,algorithm:"1←(2 3 4)",feedbackType:"1⟲",feedbackAmplitude:10,operators:[{frequency:"2×",amplitude:15,waveform:"sine",pulseWidth:5},{frequency:"4×",amplitude:15,waveform:"sine",pulseWidth:5},{frequency:"1×",amplitude:11,waveform:"sine",pulseWidth:5},{frequency:"1×",amplitude:13,waveform:"sine",pulseWidth:5}],envelopes:[{target:"noteVolume",envelope:"note size"},{target:"operatorAmplitude",envelope:"swell 2",index:1},{target:"operatorAmplitude",envelope:"punch",index:2},{target:"operatorAmplitude",envelope:"note size",index:3}]}},{name:"FM cool bass",generalMidi:!1,settings:{type:"FM",eqFilter:[{type:"low-pass",cutoffHz:6727.17,linearGain:1},{type:"high-pass",cutoffHz:88.39,linearGain:1},{type:"peak",cutoffHz:1e3,linearGain:.7071}],eqFilterType:!1,eqSimpleCut:10,eqSimplePeak:0,eqSubFilters0:[{type:"low-pass",cutoffHz:6727.17,linearGain:1},{type:"high-pass",cutoffHz:88.39,linearGain:1},{type:"peak",cutoffHz:1e3,linearGain:.7071}],effects:["panning","transition type","note filter","reverb"],transition:"interrupt",clicklessTransition:!1,noteFilterType:!0,noteSimpleCut:9,noteSimplePeak:2,noteFilter:[{type:"low-pass",cutoffHz:7231.23,linearGain:1}],noteSubFilters1:[{type:"low-pass",cutoffHz:7231.23,linearGain:1}],pan:0,panDelay:10,reverb:0,fadeInSeconds:0,fadeOutTicks:-1,algorithm:"1←(2 3←4)",feedbackType:"1⟲",feedbackAmplitude:0,operators:[{frequency:"2×",amplitude:15,waveform:"sine",pulseWidth:5},{frequency:"1×",amplitude:8,waveform:"sine",pulseWidth:5},{frequency:"1×",amplitude:7,waveform:"sine",pulseWidth:5},{frequency:"13×",amplitude:11,waveform:"sine",pulseWidth:5}],envelopes:[{target:"noteFilterAllFreqs",envelope:"punch"},{target:"operatorAmplitude",envelope:"twang 2",index:1},{target:"operatorAmplitude",envelope:"twang 3",index:2},{target:"operatorAmplitude",envelope:"twang 2",index:3}]}},{name:"FM funky bass",generalMidi:!1,settings:{type:"FM",eqFilter:[{type:"low-pass",cutoffHz:9513.66,linearGain:.1768}],eqFilterType:!0,eqSimpleCut:5,eqSimplePeak:0,eqSubFilters1:[],effects:["panning","transition type","reverb"],transition:"normal",clicklessTransition:!1,pan:0,panDelay:10,reverb:0,fadeInSeconds:0,fadeOutTicks:-3,algorithm:"1←(2 3 4)",feedbackType:"1⟲",feedbackAmplitude:0,operators:[{frequency:"1×",amplitude:15,waveform:"sine",pulseWidth:5},{frequency:"~1×",amplitude:8,waveform:"sine",pulseWidth:5},{frequency:"1×",amplitude:0,waveform:"sine",pulseWidth:5},{frequency:"1×",amplitude:0,waveform:"sine",pulseWidth:5}],envelopes:[{target:"noteVolume",envelope:"punch"},{target:"noteVolume",envelope:"note size"}]}},{name:"talking bass",generalMidi:!1,settings:{type:"FM",eqFilter:[],effects:["chord type"],chord:"custom interval",fadeInSeconds:0,fadeOutTicks:-3,algorithm:"1←(2 3)←4",feedbackType:"1⟲",feedbackAmplitude:15,operators:[{frequency:"1×",amplitude:15},{frequency:"2×",amplitude:8},{frequency:"2×",amplitude:5},{frequency:"1×",amplitude:12}],envelopes:[{target:"operatorAmplitude",envelope:"note size",index:2},{target:"operatorAmplitude",envelope:"note size",index:3},{target:"feedbackAmplitude",envelope:"note size"}]}},{name:"synth marimba",generalMidi:!1,settings:{type:"Picked String",eqFilter:[{type:"high-pass",cutoffHz:176.78,linearGain:1},{type:"peak",cutoffHz:4e3,linearGain:.5}],effects:["note filter","echo"],noteFilter:[{type:"low-pass",cutoffHz:6727.17,linearGain:1.4142}],echoSustain:71,echoDelayBeats:.5,fadeInSeconds:0,fadeOutTicks:-1,harmonics:[86,100,29,29,0,0,0,100,0,0,0,86,29,0,14,100,0,0,0,0,0,14,0,0,14,0,0,86],unison:"fifth",stringSustain:7,envelopes:[{target:"noteFilterAllFreqs",envelope:"punch"}]}},{name:"italian accordian",generalMidi:!1,settings:{type:"custom chip",eqFilter:[{type:"low-pass",cutoffHz:6e3,linearGain:.5}],eqFilterType:!0,eqSimpleCut:8,eqSimplePeak:1,eqSubFilters1:[],effects:["panning","chorus","reverb"],pan:0,panDelay:10,chorus:71,reverb:45,fadeInSeconds:.0263,fadeOutTicks:-3,wave:"square",unison:"honky tonk",customChipWave:{0:-24,1:-24,2:-24,3:-24,4:-24,5:-24,6:-24,7:-24,8:-24,9:-24,10:-24,11:-24,12:-24,13:-24,14:-24,15:-24,16:24,17:24,18:24,19:24,20:24,21:24,22:24,23:24,24:-24,25:-24,26:-24,27:-24,28:-24,29:-24,30:-24,31:-24,32:-24,33:-24,34:-24,35:-24,36:-24,37:-24,38:-24,39:-24,40:24,41:24,42:24,43:24,44:24,45:24,46:24,47:24,48:-24,49:-24,50:-24,51:-24,52:-24,53:-24,54:-24,55:-24,56:-24,57:-24,58:-24,59:-24,60:-24,61:-24,62:-24,63:-24},customChipWaveIntegral:{0:0,1:0,2:0,3:0,4:0,5:0,6:0,7:0,8:0,9:0,10:0,11:0,12:0,13:0,14:0,15:0,16:0,17:0,18:0,19:0,20:0,21:0,22:0,23:0,24:0,25:0,26:0,27:0,28:0,29:0,30:0,31:0,32:0,33:0,34:0,35:0,36:0,37:0,38:0,39:0,40:0,41:0,42:0,43:0,44:0,45:0,46:0,47:0,48:0,49:0,50:0,51:0,52:0,53:0,54:0,55:0,56:0,57:0,58:0,59:0,60:0,61:0,62:0,63:0,64:0},envelopes:[]}},{name:"chip supersaw",generalMidi:!1,settings:{type:"custom chip",eqFilter:[{type:"low-pass",cutoffHz:19027.31,linearGain:.7071}],eqFilterType:!0,eqSimpleCut:10,eqSimplePeak:0,eqSubFilters1:[],effects:["panning","transition type","vibrato","chorus","reverb"],transition:"interrupt",clicklessTransition:!1,vibrato:"delayed",vibratoDepth:.3,vibratoDelay:18.5,vibratoSpeed:10,vibratoType:0,pan:0,panDelay:10,chorus:29,reverb:29,fadeInSeconds:0,fadeOutTicks:-1,wave:"square",unison:"dissonant",customChipWave:{0:22,1:22,2:16,3:6,4:0,5:-3,6:-8,7:-10,8:-13,9:-16,10:-19,11:-19,12:-20,13:-22,14:-22,15:-24,16:-24,17:-24,18:-24,19:-24,20:-24,21:-24,22:-24,23:-24,24:-24,25:-24,26:-24,27:-24,28:-24,29:-24,30:-24,31:24,32:24,33:16,34:9,35:6,36:4,37:2,38:0,39:-1,40:-3,41:-4,42:-4,43:-6,44:-6,45:-6,46:-6,47:-5,48:-5,49:-4,50:-2,51:-2,52:1,53:4,54:6,55:8,56:10,57:12,58:14,59:16,60:18,61:19,62:22,63:24},customChipWaveIntegral:{0:0,1:0,2:0,3:0,4:0,5:0,6:0,7:0,8:0,9:0,10:0,11:0,12:0,13:0,14:0,15:0,16:0,17:0,18:0,19:0,20:0,21:0,22:0,23:0,24:0,25:0,26:0,27:0,28:0,29:0,30:0,31:0,32:0,33:0,34:0,35:0,36:0,37:0,38:0,39:0,40:0,41:0,42:0,43:0,44:0,45:0,46:0,47:0,48:0,49:0,50:0,51:0,52:0,53:0,54:0,55:0,56:0,57:0,58:0,59:0,60:0,61:0,62:0,63:0,64:0},envelopes:[]}},{name:"fm supersaw",generalMidi:!1,settings:{type:"FM6op",eqFilter:[{type:"low-pass",cutoffHz:19027.31,linearGain:1.4142},{type:"high-pass",cutoffHz:148.65,linearGain:.7071}],eqFilterType:!1,eqSimpleCut:10,eqSimplePeak:0,eqSubFilters0:[{type:"low-pass",cutoffHz:19027.31,linearGain:1.4142},{type:"high-pass",cutoffHz:148.65,linearGain:.7071}],effects:["panning","transition type","pitch shift","note filter","chorus","reverb"],transition:"continue",clicklessTransition:!1,pitchShiftSemitones:0,noteFilterType:!1,noteSimpleCut:10,noteSimplePeak:0,noteFilter:[],noteSubFilters0:[],noteSubFilters1:[{type:"low-pass",cutoffHz:4756.83,linearGain:1}],pan:0,panDelay:10,chorus:71,reverb:0,fadeInSeconds:0,fadeOutTicks:-1,algorithm:"1 2 3 4 5 6",feedbackType:"1⟲",feedbackAmplitude:0,operators:[{frequency:"1×",amplitude:13,waveform:"sawtooth",pulseWidth:5},{frequency:"~1×",amplitude:15,waveform:"sawtooth",pulseWidth:5},{frequency:"2×",amplitude:10,waveform:"sawtooth",pulseWidth:5},{frequency:"3×",amplitude:7,waveform:"sawtooth",pulseWidth:5},{frequency:"4×",amplitude:9,waveform:"sawtooth",pulseWidth:5},{frequency:"8×",amplitude:6,waveform:"sawtooth",pulseWidth:5}],envelopes:[]}},{name:"wind",generalMidi:!1,settings:{type:"FM",eqFilter:[{type:"low-pass",cutoffHz:250.03,linearGain:11.3137}],eqFilterType:!0,eqSimpleCut:0,eqSimplePeak:7,envelopeSpeed:12,discreteEnvelope:!1,eqSubFilters1:[],effects:["transition type","reverb"],transition:"continue",clicklessTransition:!1,panDelay:10,reverb:0,fadeInSeconds:0,fadeOutTicks:-1,algorithm:"1←(2 3 4)",feedbackType:"1→3 2→4",feedbackAmplitude:15,operators:[{frequency:"16×",amplitude:15,waveform:"sine",pulseWidth:5},{frequency:"16×",amplitude:0,waveform:"sine",pulseWidth:5},{frequency:"16×",amplitude:15,waveform:"sine",pulseWidth:5},{frequency:"16×",amplitude:0,waveform:"sine",pulseWidth:5},{frequency:"1×",amplitude:0,waveform:"sine",pulseWidth:5},{frequency:"1×",amplitude:0,waveform:"sine",pulseWidth:5}],envelopes:[]}},{name:"mrow",generalMidi:!1,settings:{type:"FM",eqFilter:[],eqFilterType:!1,eqSimpleCut:10,eqSimplePeak:0,eqSubFilters0:[],effects:["panning","chord type","reverb"],chord:"custom interval",fastTwoNoteArp:!1,arpeggioSpeed:12,pan:0,panDelay:10,reverb:35,fadeInSeconds:.0263,fadeOutTicks:-3,algorithm:"1←3 2←4",feedbackType:"1⟲ 2⟲ 3⟲ 4⟲",feedbackAmplitude:5,operators:[{frequency:"4×",amplitude:15,waveform:"sine",pulseWidth:5},{frequency:"~2×",amplitude:13,waveform:"sine",pulseWidth:5},{frequency:"~2×",amplitude:8,waveform:"sine",pulseWidth:5},{frequency:"~2×",amplitude:9,waveform:"sine",pulseWidth:5}],envelopes:[{target:"operatorAmplitude",envelope:"flare 1",index:0},{target:"operatorAmplitude",envelope:"note size",index:1},{target:"operatorAmplitude",envelope:"note size",index:2},{target:"operatorAmplitude",envelope:"flare 3",index:3},{target:"feedbackAmplitude",envelope:"flare 1"}]}},{name:"obama why",generalMidi:!1,settings:{type:"harmonics",eqFilter:[],effects:["note filter","panning","reverb"],noteFilter:[{type:"low-pass",cutoffHz:840.9,linearGain:11.3137}],pan:0,reverb:0,fadeInSeconds:.0263,fadeOutTicks:-3,harmonics:[100,86,29,29,14,14,0,14,14,43,71,100,100,86,71,71,57,57,43,43,43,43,43,0,0,0,0,0],unison:"octave",envelopes:[{target:"noteFilterAllFreqs",envelope:"note size"}]}}])},{name:"NES (WIP)",presets:S([{name:"VRC6 Sawtooth",midiProgram:81,settings:{type:"chip",eqFilter:[],eqFilterType:!1,eqSimpleCut:10,eqSimplePeak:0,envelopeSpeed:12,discreteEnvelope:!1,eqSubFilters0:[],effects:["transition type"],transition:"interrupt",clicklessTransition:!1,panDelay:10,fadeInSeconds:0,fadeOutTicks:-1,wave:"VRC6 Sawtooth",unison:"none",isUsingAdvancedLoopControls:!1,chipWaveLoopStart:0,chipWaveLoopEnd:7,chipWaveLoopMode:0,chipWavePlayBackwards:!1,chipWaveStartOffset:0,envelopes:[]}},{name:"VRC6 Sawtooth HI",midiProgram:81,settings:{type:"chip",eqFilter:[],eqFilterType:!1,eqSimpleCut:10,eqSimplePeak:0,envelopeSpeed:12,discreteEnvelope:!1,eqSubFilters0:[],effects:["transition type"],transition:"interrupt",clicklessTransition:!1,panDelay:10,fadeInSeconds:0,fadeOutTicks:-1,wave:"VRC6 Sawtooth HI",unison:"none",isUsingAdvancedLoopControls:!1,chipWaveLoopStart:0,chipWaveLoopEnd:7,chipWaveLoopMode:0,chipWavePlayBackwards:!1,chipWaveStartOffset:0,envelopes:[]}}])},{name:"ST/ZX(WIP)",presets:S([{name:"Soft Buzzer High",midiProgram:68,settings:{type:"chip",eqFilter:[],eqFilterType:!1,eqSimpleCut:10,eqSimplePeak:0,envelopeSpeed:12,discreteEnvelope:!1,eqSubFilters0:[],effects:["transition type"],transition:"interrupt",clicklessTransition:!1,panDelay:10,fadeInSeconds:0,fadeOutTicks:-1,wave:"Soft Buzzer Hi",unison:"none",isUsingAdvancedLoopControls:!1,chipWaveLoopStart:0,chipWaveLoopEnd:32,chipWaveLoopMode:0,chipWavePlayBackwards:!1,chipWaveStartOffset:0,envelopes:[]}},{name:"Soft Buzzer Low",midiProgram:68,settings:{type:"chip",eqFilter:[],eqFilterType:!1,eqSimpleCut:10,eqSimplePeak:0,envelopeSpeed:12,discreteEnvelope:!1,eqSubFilters0:[],effects:["transition type"],transition:"interrupt",clicklessTransition:!1,panDelay:10,fadeInSeconds:0,fadeOutTicks:-1,wave:"Soft Buzzer Lo",unison:"none",isUsingAdvancedLoopControls:!1,chipWaveLoopStart:0,chipWaveLoopEnd:32,chipWaveLoopMode:0,chipWavePlayBackwards:!1,chipWaveStartOffset:0,envelopes:[]}},{name:"Hard Buzzer High",midiProgram:71,settings:{type:"chip",eqFilter:[],eqFilterType:!1,eqSimpleCut:10,eqSimplePeak:0,envelopeSpeed:12,discreteEnvelope:!1,eqSubFilters0:[],effects:["transition type"],transition:"interrupt",clicklessTransition:!1,panDelay:10,fadeInSeconds:0,fadeOutTicks:-1,wave:"Hard Buzzer Hi",unison:"none",isUsingAdvancedLoopControls:!1,chipWaveLoopStart:0,chipWaveLoopEnd:16,chipWaveLoopMode:0,chipWavePlayBackwards:!1,chipWaveStartOffset:0,envelopes:[]}},{name:"Hard Buzzer Low",midiProgram:71,settings:{type:"chip",eqFilter:[],eqFilterType:!1,eqSimpleCut:10,eqSimplePeak:0,envelopeSpeed:12,discreteEnvelope:!1,eqSubFilters0:[],effects:["transition type"],transition:"interrupt",clicklessTransition:!1,panDelay:10,fadeInSeconds:0,fadeOutTicks:-1,wave:"Hard Buzzer Lo",unison:"none",isUsingAdvancedLoopControls:!1,chipWaveLoopStart:0,chipWaveLoopEnd:16,chipWaveLoopMode:0,chipWavePlayBackwards:!1,chipWaveStartOffset:0,envelopes:[]}},{name:"ST Timer Sine",midiProgram:70,settings:{type:"chip",eqFilter:[],eqFilterType:!1,eqSimpleCut:10,eqSimplePeak:0,envelopeSpeed:12,discreteEnvelope:!1,eqSubFilters0:[],effects:["transition type"],transition:"interrupt",clicklessTransition:!1,panDelay:10,fadeInSeconds:0,fadeOutTicks:-1,wave:"ST Timer Sine",unison:"none",isUsingAdvancedLoopControls:!1,chipWaveLoopStart:0,chipWaveLoopEnd:16,chipWaveLoopMode:0,chipWavePlayBackwards:!1,chipWaveStartOffset:0,envelopes:[]}},{name:"ST Timer Square",midiProgram:72,settings:{type:"chip",eqFilter:[],eqFilterType:!1,eqSimpleCut:10,eqSimplePeak:0,envelopeSpeed:12,discreteEnvelope:!1,eqSubFilters0:[],effects:["transition type"],transition:"interrupt",clicklessTransition:!1,panDelay:10,fadeInSeconds:0,fadeOutTicks:-1,wave:"ST Timer Square",unison:"none",isUsingAdvancedLoopControls:!1,chipWaveLoopStart:0,chipWaveLoopEnd:64,chipWaveLoopMode:0,chipWavePlayBackwards:!1,chipWaveStartOffset:0,envelopes:[]}}])},{name:"Sam Coupé (WIP)",presets:S([])},{name:"Master System/MegaDrive/Genesis (WIP)",presets:S([])},{name:"C64 (WIP)",presets:S([{name:"Old_C64 TriPulse",midiProgram:69,settings:{type:"chip",eqFilter:[],eqFilterType:!1,eqSimpleCut:10,eqSimplePeak:0,envelopeSpeed:12,discreteEnvelope:!1,eqSubFilters0:[],effects:["transition type"],transition:"interrupt",clicklessTransition:!1,panDelay:10,fadeInSeconds:0,fadeOutTicks:-1,wave:"Old_C64 TriPulse",unison:"none",isUsingAdvancedLoopControls:!1,chipWaveLoopStart:0,chipWaveLoopEnd:64,chipWaveLoopMode:0,chipWavePlayBackwards:!1,chipWaveStartOffset:0,envelopes:[]}},{name:"Old_C64 PulseSaw",midiProgram:68,settings:{type:"chip",eqFilter:[],eqFilterType:!1,eqSimpleCut:10,eqSimplePeak:0,envelopeSpeed:12,discreteEnvelope:!1,eqSubFilters0:[],effects:["transition type"],transition:"interrupt",clicklessTransition:!1,panDelay:10,fadeInSeconds:0,fadeOutTicks:-1,wave:"Old_C64 PulseSaw",unison:"none",isUsingAdvancedLoopControls:!1,chipWaveLoopStart:0,chipWaveLoopEnd:64,chipWaveLoopMode:0,chipWavePlayBackwards:!1,chipWaveStartOffset:0,envelopes:[]}},{name:"Old_C64 SawTri",midiProgram:71,settings:{type:"chip",eqFilter:[],eqFilterType:!1,eqSimpleCut:10,eqSimplePeak:0,envelopeSpeed:12,discreteEnvelope:!1,eqSubFilters0:[],effects:["transition type"],transition:"interrupt",clicklessTransition:!1,panDelay:10,fadeInSeconds:0,fadeOutTicks:-1,wave:"Old_C64 SawTri",unison:"none",isUsingAdvancedLoopControls:!1,chipWaveLoopStart:0,chipWaveLoopEnd:64,chipWaveLoopMode:0,chipWavePlayBackwards:!1,chipWaveStartOffset:0,envelopes:[]}},{name:"Old_C64 All",midiProgram:71,settings:{type:"chip",eqFilter:[],eqFilterType:!1,eqSimpleCut:10,eqSimplePeak:0,envelopeSpeed:12,discreteEnvelope:!1,eqSubFilters0:[],effects:["transition type"],transition:"interrupt",clicklessTransition:!1,panDelay:10,fadeInSeconds:0,fadeOutTicks:-1,wave:"Old_C64 All",unison:"none",isUsingAdvancedLoopControls:!1,chipWaveLoopStart:0,chipWaveLoopEnd:64,chipWaveLoopMode:0,chipWavePlayBackwards:!1,chipWaveStartOffset:0,envelopes:[]}}])},{name:"Atari (WIP)",presets:S([{name:"Old_Atari Pokey 1",midiProgram:70,settings:{type:"chip",eqFilter:[],eqFilterType:!1,eqSimpleCut:10,eqSimplePeak:0,envelopeSpeed:12,discreteEnvelope:!1,eqSubFilters0:[],effects:["transition type"],transition:"normal",clicklessTransition:!1,panDelay:10,fadeInSeconds:0,fadeOutTicks:-1,wave:"Old_Atari Pokey 1",unison:"none",isUsingAdvancedLoopControls:!1,chipWaveLoopStart:0,chipWaveLoopEnd:64,chipWaveLoopMode:0,chipWavePlayBackwards:!1,chipWaveStartOffset:0,envelopes:[]}},{name:"Old_Atari Pokey 2",midiProgram:70,settings:{type:"chip",eqFilter:[],eqFilterType:!1,eqSimpleCut:10,eqSimplePeak:0,envelopeSpeed:12,discreteEnvelope:!1,eqSubFilters0:[],effects:["transition type"],transition:"normal",clicklessTransition:!1,panDelay:10,fadeInSeconds:0,fadeOutTicks:-1,wave:"Old_Atari Pokey 2",unison:"none",isUsingAdvancedLoopControls:!1,chipWaveLoopStart:0,chipWaveLoopEnd:64,chipWaveLoopMode:0,chipWavePlayBackwards:!1,chipWaveStartOffset:0,envelopes:[]}}])},{name:"TurboGrafx-16(WIP)",presets:S([])},{name:"Namco(WIP)",presets:S([{name:"Namco Rounded",generalMidi:!1,settings:{type:"custom chip",eqFilter:[],eqFilterType:!1,eqSimpleCut:10,eqSimplePeak:0,envelopeSpeed:12,discreteEnvelope:!1,eqSubFilters0:[],eqSubFilters1:[],effects:["transition type","chord type","pitch shift","detune","vibrato"],transition:"interrupt",clicklessTransition:!1,chord:"arpeggio",fastTwoNoteArp:!1,arpeggioSpeed:12,pitchShiftSemitones:12,detuneCents:0,vibrato:"none",vibratoDepth:0,vibratoDelay:0,vibratoSpeed:10,vibratoType:0,panDelay:0,fadeInSeconds:0,fadeOutTicks:-1,wave:"square",unison:"none",customChipWave:{0:0,1:-6,2:-6,3:-12,4:-12,5:-17,6:-17,7:-21,8:-21,9:-23,10:-23,11:-23,12:-24,13:-24,14:-24,15:-24,16:-24,17:-24,18:-23,19:-23,20:-23,21:-21,22:-21,23:-17,24:-17,25:-12,26:-12,27:-6,28:-6,29:0,30:0,31:6,32:6,33:12,34:12,35:17,36:17,37:20,38:20,39:22,40:22,41:23,42:23,43:23,44:24,45:24,46:24,47:24,48:24,49:24,50:23,51:23,52:23,53:22,54:22,55:20,56:20,57:17,58:17,59:12,60:12,61:6,62:6,63:0},customChipWaveIntegral:{0:0,1:0,2:0,3:0,4:0,5:0,6:0,7:0,8:0,9:0,10:0,11:0,12:0,13:0,14:0,15:0,16:0,17:0,18:0,19:0,20:0,21:0,22:0,23:0,24:0,25:0,26:0,27:0,28:0,29:0,30:0,31:0,32:0,33:0,34:0,35:0,36:0,37:0,38:0,39:0,40:0,41:0,42:0,43:0,44:0,45:0,46:0,47:0,48:0,49:0,50:0,51:0,52:0,53:0,54:0,55:0,56:0,57:0,58:0,59:0,60:0,61:0,62:0,63:0,64:0},envelopes:[]}},{name:"Namco 2",generalMidi:!1,settings:{type:"custom chip",eqFilter:[],eqFilterType:!1,eqSimpleCut:10,eqSimplePeak:0,envelopeSpeed:12,discreteEnvelope:!1,eqSubFilters0:[],eqSubFilters1:[],effects:["transition type","chord type","pitch shift","detune","vibrato"],transition:"interrupt",clicklessTransition:!1,chord:"arpeggio",fastTwoNoteArp:!1,arpeggioSpeed:12,pitchShiftSemitones:12,detuneCents:0,vibrato:"none",vibratoDepth:0,vibratoDelay:0,vibratoSpeed:10,vibratoType:0,panDelay:0,fadeInSeconds:0,fadeOutTicks:-1,wave:"square",unison:"none",customChipWave:{0:0,1:-17,2:-17,3:-24,4:-24,5:-24,6:-24,7:-21,8:-21,9:-16,10:-16,11:-6,12:-6,13:-11,14:-11,15:-16,16:-16,17:-16,18:-16,19:-11,20:-11,21:-6,22:-6,23:5,24:5,25:12,26:12,27:16,28:16,29:9,30:9,31:0,32:0,33:-9,34:-9,35:-16,36:-16,37:-12,38:-12,39:-5,40:-5,41:6,42:6,43:11,44:11,45:16,46:16,47:16,48:16,49:11,50:11,51:6,52:6,53:16,54:16,55:21,56:21,57:24,58:24,59:24,60:24,61:17,62:17,63:0},customChipWaveIntegral:{0:0,1:0,2:0,3:0,4:0,5:0,6:0,7:0,8:0,9:0,10:0,11:0,12:0,13:0,14:0,15:0,16:0,17:0,18:0,19:0,20:0,21:0,22:0,23:0,24:0,25:0,26:0,27:0,28:0,29:0,30:0,31:0,32:0,33:0,34:0,35:0,36:0,37:0,38:0,39:0,40:0,41:0,42:0,43:0,44:0,45:0,46:0,47:0,48:0,49:0,50:0,51:0,52:0,53:0,54:0,55:0,56:0,57:0,58:0,59:0,60:0,61:0,62:0,63:0,64:0},envelopes:[]}},{name:"Namco 3",generalMidi:!1,settings:{type:"custom chip",eqFilter:[],eqFilterType:!1,eqSimpleCut:10,eqSimplePeak:0,envelopeSpeed:12,discreteEnvelope:!1,eqSubFilters0:[],eqSubFilters1:[],effects:["transition type","chord type","pitch shift","detune","vibrato"],transition:"interrupt",clicklessTransition:!1,chord:"arpeggio",fastTwoNoteArp:!1,arpeggioSpeed:12,pitchShiftSemitones:12,detuneCents:0,vibrato:"none",vibratoDepth:0,vibratoDelay:0,vibratoSpeed:10,vibratoType:0,panDelay:0,fadeInSeconds:0,fadeOutTicks:-1,wave:"square",unison:"none",customChipWave:{0:0,1:0,2:-24,3:-24,4:0,5:0,6:24,7:24,8:0,9:0,10:-11,11:-11,12:-18,13:-18,14:-22,15:-22,16:-24,17:-24,18:-22,19:-22,20:-18,21:-18,22:-11,23:-11,24:2,25:2,26:11,27:11,28:18,29:18,30:22,31:22,32:24,33:24,34:22,35:22,36:18,37:18,38:11,39:11,40:-11,41:-11,42:-18,43:-18,44:-22,45:-22,46:-24,47:-24,48:-22,49:-22,50:-18,51:-18,52:-11,53:-11,54:11,55:11,56:19,57:19,58:24,59:24,60:19,61:19,62:11,63:11},customChipWaveIntegral:{0:0,1:0,2:0,3:0,4:0,5:0,6:0,7:0,8:0,9:0,10:0,11:0,12:0,13:0,14:0,15:0,16:0,17:0,18:0,19:0,20:0,21:0,22:0,23:0,24:0,25:0,26:0,27:0,28:0,29:0,30:0,31:0,32:0,33:0,34:0,35:0,36:0,37:0,38:0,39:0,40:0,41:0,42:0,43:0,44:0,45:0,46:0,47:0,48:0,49:0,50:0,51:0,52:0,53:0,54:0,55:0,56:0,57:0,58:0,59:0,60:0,61:0,62:0,63:0,64:0},envelopes:[]}},{name:"Namco 4",generalMidi:!1,settings:{type:"custom chip",eqFilter:[],eqFilterType:!1,eqSimpleCut:10,eqSimplePeak:0,envelopeSpeed:12,discreteEnvelope:!1,eqSubFilters0:[],eqSubFilters1:[],effects:["transition type","chord type","pitch shift","detune","vibrato"],transition:"interrupt",clicklessTransition:!1,chord:"arpeggio",fastTwoNoteArp:!1,arpeggioSpeed:12,pitchShiftSemitones:12,detuneCents:0,vibrato:"none",vibratoDepth:0,vibratoDelay:0,vibratoSpeed:10,vibratoType:0,panDelay:0,fadeInSeconds:0,fadeOutTicks:-1,wave:"square",unison:"none",customChipWave:{0:0,1:0,2:-24,3:-24,4:-15,5:-15,6:-4,7:-4,8:-15,9:-15,10:-22,11:-22,12:-7,13:-7,14:8,15:8,16:-15,17:-15,18:-24,19:-24,20:-17,21:-17,22:6,23:6,24:-5,25:-5,26:-10,27:-10,28:8,29:8,30:19,31:19,32:2,33:2,34:-17,35:-17,36:0,37:0,38:12,39:12,40:8,41:8,42:3,43:3,44:18,45:18,46:24,47:24,48:14,49:14,50:-1,51:-1,52:8,53:8,54:20,55:20,56:14,57:14,58:4,59:4,60:14,61:14,62:0,63:0},customChipWaveIntegral:{0:0,1:0,2:0,3:0,4:0,5:0,6:0,7:0,8:0,9:0,10:0,11:0,12:0,13:0,14:0,15:0,16:0,17:0,18:0,19:0,20:0,21:0,22:0,23:0,24:0,25:0,26:0,27:0,28:0,29:0,30:0,31:0,32:0,33:0,34:0,35:0,36:0,37:0,38:0,39:0,40:0,41:0,42:0,43:0,44:0,45:0,46:0,47:0,48:0,49:0,50:0,51:0,52:0,53:0,54:0,55:0,56:0,57:0,58:0,59:0,60:0,61:0,62:0,63:0,64:0},envelopes:[]}},{name:"Namco 5",generalMidi:!1,settings:{type:"custom chip",eqFilter:[],eqFilterType:!1,eqSimpleCut:10,eqSimplePeak:0,envelopeSpeed:12,discreteEnvelope:!1,eqSubFilters0:[],eqSubFilters1:[],effects:["transition type","chord type","pitch shift","detune","vibrato"],transition:"interrupt",clicklessTransition:!1,chord:"arpeggio",fastTwoNoteArp:!1,arpeggioSpeed:12,pitchShiftSemitones:12,detuneCents:0,vibrato:"none",vibratoDepth:0,vibratoDelay:0,vibratoSpeed:10,vibratoType:0,panDelay:0,fadeInSeconds:0,fadeOutTicks:-1,wave:"square",unison:"none",customChipWave:{0:0,1:0,2:24,3:24,4:-4,5:-4,6:-24,7:-24,8:0,9:0,10:21,11:21,12:-4,13:-4,14:-21,15:-21,16:0,17:0,18:18,19:18,20:-4,21:-4,22:-18,23:-18,24:0,25:0,26:15,27:15,28:-4,29:-4,30:-15,31:-15,32:0,33:0,34:12,35:12,36:-4,37:-4,38:-12,39:-12,40:0,41:0,42:9,43:9,44:-4,45:-4,46:-9,47:-9,48:0,49:0,50:6,51:6,52:-4,53:-4,54:-6,55:-6,56:0,57:0,58:0,59:0,60:-4,61:-4,62:-4,63:-4},customChipWaveIntegral:{0:0,1:0,2:0,3:0,4:0,5:0,6:0,7:0,8:0,9:0,10:0,11:0,12:0,13:0,14:0,15:0,16:0,17:0,18:0,19:0,20:0,21:0,22:0,23:0,24:0,25:0,26:0,27:0,28:0,29:0,30:0,31:0,32:0,33:0,34:0,35:0,36:0,37:0,38:0,39:0,40:0,41:0,42:0,43:0,44:0,45:0,46:0,47:0,48:0,49:0,50:0,51:0,52:0,53:0,54:0,55:0,56:0,57:0,58:0,59:0,60:0,61:0,62:0,63:0,64:0},envelopes:[]}},{name:"Namco 6",generalMidi:!1,settings:{type:"custom chip",eqFilter:[],eqFilterType:!1,eqSimpleCut:10,eqSimplePeak:0,envelopeSpeed:12,discreteEnvelope:!1,eqSubFilters0:[],eqSubFilters1:[],effects:["transition type","chord type","pitch shift","detune","vibrato"],transition:"interrupt",clicklessTransition:!1,chord:"arpeggio",fastTwoNoteArp:!1,arpeggioSpeed:12,pitchShiftSemitones:12,detuneCents:0,vibrato:"none",vibratoDepth:0,vibratoDelay:0,vibratoSpeed:10,vibratoType:0,panDelay:0,fadeInSeconds:0,fadeOutTicks:-1,wave:"square",unison:"none",customChipWave:{0:0,1:-3,2:-3,3:5,4:5,5:-6,6:-6,7:9,8:9,9:-9,10:-9,11:12,12:12,13:-12,14:-12,15:15,16:15,17:-15,18:-15,19:18,20:18,21:-18,22:-18,23:21,24:21,25:-21,26:-21,27:24,28:24,29:-24,30:-24,31:24,32:24,33:-24,34:-24,35:21,36:21,37:-21,38:-21,39:18,40:18,41:-17,42:-17,43:15,44:15,45:-15,46:-15,47:12,48:12,49:-12,50:-12,51:9,52:9,53:-9,54:-9,55:4,56:4,57:-6,58:-6,59:0,60:0,61:-3,62:-3,63:0},customChipWaveIntegral:{0:0,1:0,2:0,3:0,4:0,5:0,6:0,7:0,8:0,9:0,10:0,11:0,12:0,13:0,14:0,15:0,16:0,17:0,18:0,19:0,20:0,21:0,22:0,23:0,24:0,25:0,26:0,27:0,28:0,29:0,30:0,31:0,32:0,33:0,34:0,35:0,36:0,37:0,38:0,39:0,40:0,41:0,42:0,43:0,44:0,45:0,46:0,47:0,48:0,49:0,50:0,51:0,52:0,53:0,54:0,55:0,56:0,57:0,58:0,59:0,60:0,61:0,62:0,63:0,64:0},envelopes:[]}},{name:"Namco 7",generalMidi:!1,settings:{type:"custom chip",eqFilter:[],eqFilterType:!1,eqSimpleCut:10,eqSimplePeak:0,envelopeSpeed:12,discreteEnvelope:!1,eqSubFilters0:[],eqSubFilters1:[],effects:["transition type","chord type","pitch shift","detune","vibrato"],transition:"interrupt",clicklessTransition:!1,chord:"arpeggio",fastTwoNoteArp:!1,arpeggioSpeed:12,pitchShiftSemitones:0,detuneCents:0,vibrato:"none",vibratoDepth:0,vibratoDelay:0,vibratoSpeed:10,vibratoType:0,panDelay:0,fadeInSeconds:0,fadeOutTicks:-1,wave:"square",unison:"none",customChipWave:{0:0,1:0,2:0,3:0,4:0,5:0,6:0,7:0,8:0,9:0,10:0,11:0,12:0,13:0,14:0,15:0,16:0,17:0,18:0,19:0,20:0,21:0,22:0,23:0,24:0,25:0,26:0,27:0,28:0,29:0,30:0,31:0,32:-24,33:-24,34:24,35:24,36:-24,37:-24,38:24,39:24,40:-24,41:-24,42:24,43:24,44:-24,45:-24,46:24,47:24,48:-24,49:-24,50:24,51:24,52:-24,53:-24,54:24,55:24,56:-24,57:-24,58:24,59:24,60:-24,61:-24,62:24,63:24},customChipWaveIntegral:{0:0,1:0,2:0,3:0,4:0,5:0,6:0,7:0,8:0,9:0,10:0,11:0,12:0,13:0,14:0,15:0,16:0,17:0,18:0,19:0,20:0,21:0,22:0,23:0,24:0,25:0,26:0,27:0,28:0,29:0,30:0,31:0,32:0,33:0,34:0,35:0,36:0,37:0,38:0,39:0,40:0,41:0,42:0,43:0,44:0,45:0,46:0,47:0,48:0,49:0,50:0,51:0,52:0,53:0,54:0,55:0,56:0,57:0,58:0,59:0,60:0,61:0,62:0,63:0,64:0},envelopes:[]}},{name:"Namco 8",generalMidi:!1,settings:{type:"custom chip",eqFilter:[],eqFilterType:!1,eqSimpleCut:10,eqSimplePeak:0,envelopeSpeed:12,discreteEnvelope:!1,eqSubFilters0:[],eqSubFilters1:[],effects:["transition type","chord type","pitch shift","detune","vibrato"],transition:"interrupt",clicklessTransition:!1,chord:"arpeggio",fastTwoNoteArp:!1,arpeggioSpeed:12,pitchShiftSemitones:12,detuneCents:0,vibrato:"none",vibratoDepth:0,vibratoDelay:0,vibratoSpeed:10,vibratoType:0,panDelay:0,fadeInSeconds:0,fadeOutTicks:-1,wave:"square",unison:"none",customChipWave:{0:0,1:0,2:24,3:24,4:19,5:19,6:19,7:19,8:19,9:19,10:19,11:19,12:24,13:24,14:24,15:24,16:-16,17:-16,18:21,19:21,20:19,21:19,22:19,23:19,24:-24,25:-24,26:-24,27:-24,28:24,29:24,30:24,31:24,32:0,33:0,34:-24,35:-24,36:-24,37:-24,38:24,39:24,40:24,41:24,42:-19,43:-19,44:-19,45:-19,46:-22,47:-22,48:13,49:13,50:-24,51:-24,52:-24,53:-24,54:-19,55:-19,56:-19,57:-19,58:-19,59:-19,60:-19,61:-19,62:0,63:0},customChipWaveIntegral:{0:0,1:0,2:0,3:0,4:0,5:0,6:0,7:0,8:0,9:0,10:0,11:0,12:0,13:0,14:0,15:0,16:0,17:0,18:0,19:0,20:0,21:0,22:0,23:0,24:0,25:0,26:0,27:0,28:0,29:0,30:0,31:0,32:0,33:0,34:0,35:0,36:0,37:0,38:0,39:0,40:0,41:0,42:0,43:0,44:0,45:0,46:0,47:0,48:0,49:0,50:0,51:0,52:0,53:0,54:0,55:0,56:0,57:0,58:0,59:0,60:0,61:0,62:0,63:0,64:0},envelopes:[]}},{name:"Namco 9",generalMidi:!1,settings:{type:"custom chip",eqFilter:[],eqFilterType:!1,eqSimpleCut:10,eqSimplePeak:0,envelopeSpeed:12,discreteEnvelope:!1,eqSubFilters0:[],eqSubFilters1:[],effects:["transition type","chord type","pitch shift","detune","vibrato"],transition:"interrupt",clicklessTransition:!1,chord:"arpeggio",fastTwoNoteArp:!1,arpeggioSpeed:12,pitchShiftSemitones:12,detuneCents:0,vibrato:"none",vibratoDepth:0,vibratoDelay:0,vibratoSpeed:10,vibratoType:0,panDelay:0,fadeInSeconds:0,fadeOutTicks:-1,wave:"square",unison:"none",customChipWave:{0:-24,1:-24,2:-24,3:-24,4:-24,5:-24,6:-24,7:-24,8:-24,9:-24,10:-24,11:-24,12:-24,13:-24,14:-24,15:-24,16:24,17:24,18:24,19:24,20:24,21:24,22:24,23:24,24:24,25:24,26:24,27:24,28:24,29:24,30:24,31:24,32:-24,33:-24,34:-24,35:-24,36:-24,37:-24,38:24,39:24,40:24,41:24,42:24,43:24,44:-24,45:-24,46:-24,47:-24,48:-24,49:-24,50:-24,51:-24,52:-24,53:-24,54:24,55:24,56:24,57:24,58:24,59:24,60:24,61:24,62:24,63:24},customChipWaveIntegral:{0:0,1:0,2:0,3:0,4:0,5:0,6:0,7:0,8:0,9:0,10:0,11:0,12:0,13:0,14:0,15:0,16:0,17:0,18:0,19:0,20:0,21:0,22:0,23:0,24:0,25:0,26:0,27:0,28:0,29:0,30:0,31:0,32:0,33:0,34:0,35:0,36:0,37:0,38:0,39:0,40:0,41:0,42:0,43:0,44:0,45:0,46:0,47:0,48:0,49:0,50:0,51:0,52:0,53:0,54:0,55:0,56:0,57:0,58:0,59:0,60:0,61:0,62:0,63:0,64:0},envelopes:[]}},{name:"Namco Half Sine",generalMidi:!1,settings:{type:"custom chip",eqFilter:[],eqFilterType:!1,eqSimpleCut:10,eqSimplePeak:0,envelopeSpeed:12,discreteEnvelope:!1,eqSubFilters0:[],eqSubFilters1:[],effects:["transition type","chord type","pitch shift","detune","vibrato"],transition:"interrupt",clicklessTransition:!1,chord:"arpeggio",fastTwoNoteArp:!1,arpeggioSpeed:12,pitchShiftSemitones:12,detuneCents:0,vibrato:"none",vibratoDepth:0,vibratoDelay:0,vibratoSpeed:10,vibratoType:0,panDelay:0,fadeInSeconds:0,fadeOutTicks:-1,wave:"square",unison:"none",customChipWave:{0:24,1:24,2:24,3:24,4:24,5:24,6:24,7:24,8:24,9:24,10:24,11:24,12:24,13:24,14:24,15:24,16:24,17:24,18:24,19:24,20:24,21:24,22:24,23:24,24:24,25:24,26:24,27:24,28:24,29:24,30:24,31:24,32:-1,33:-6,34:-9,35:-12,36:-14,37:-16,38:-18,39:-20,40:-21,41:-21,42:-22,43:-22,44:-24,45:-24,46:-24,47:-24,48:-24,49:-24,50:-24,51:-24,52:-22,53:-22,54:-21,55:-21,56:-20,57:-18,58:-16,59:-14,60:-12,61:-9,62:-6,63:0},customChipWaveIntegral:{0:0,1:0,2:0,3:0,4:0,5:0,6:0,7:0,8:0,9:0,10:0,11:0,12:0,13:0,14:0,15:0,16:0,17:0,18:0,19:0,20:0,21:0,22:0,23:0,24:0,25:0,26:0,27:0,28:0,29:0,30:0,31:0,32:0,33:0,34:0,35:0,36:0,37:0,38:0,39:0,40:0,41:0,42:0,43:0,44:0,45:0,46:0,47:0,48:0,49:0,50:0,51:0,52:0,53:0,54:0,55:0,56:0,57:0,58:0,59:0,60:0,61:0,62:0,63:0,64:0},envelopes:[]}},{name:"Namco 11",generalMidi:!1,settings:{type:"custom chip",eqFilter:[],eqFilterType:!1,eqSimpleCut:10,eqSimplePeak:0,envelopeSpeed:12,discreteEnvelope:!1,eqSubFilters0:[],eqSubFilters1:[],effects:["transition type","chord type","pitch shift","detune","vibrato"],transition:"interrupt",clicklessTransition:!1,chord:"arpeggio",fastTwoNoteArp:!1,arpeggioSpeed:12,pitchShiftSemitones:12,detuneCents:0,vibrato:"none",vibratoDepth:0,vibratoDelay:0,vibratoSpeed:10,vibratoType:0,panDelay:0,fadeInSeconds:0,fadeOutTicks:-1,wave:"square",unison:"none",customChipWave:{0:0,1:-6,2:-6,3:-12,4:-12,5:-17,6:0,7:0,8:-21,9:-23,10:-23,11:-23,12:0,13:0,14:-24,15:-24,16:0,17:0,18:-23,19:-23,20:-23,21:0,22:0,23:-17,24:-17,25:-12,26:-12,27:-6,28:-6,29:0,30:0,31:6,32:6,33:12,34:12,35:0,36:0,37:20,38:20,39:0,40:0,41:23,42:23,43:0,44:0,45:24,46:24,47:0,48:0,49:24,50:23,51:0,52:0,53:22,54:22,55:0,56:0,57:17,58:17,59:0,60:0,61:6,62:6,63:0},customChipWaveIntegral:{0:0,1:0,2:0,3:0,4:0,5:0,6:0,7:0,8:0,9:0,10:0,11:0,12:0,13:0,14:0,15:0,16:0,17:0,18:0,19:0,20:0,21:0,22:0,23:0,24:0,25:0,26:0,27:0,28:0,29:0,30:0,31:0,32:0,33:0,34:0,35:0,36:0,37:0,38:0,39:0,40:0,41:0,42:0,43:0,44:0,45:0,46:0,47:0,48:0,49:0,50:0,51:0,52:0,53:0,54:0,55:0,56:0,57:0,58:0,59:0,60:0,61:0,62:0,63:0,64:0},envelopes:[]}},{name:"Namco 12",generalMidi:!1,settings:{type:"custom chip",eqFilter:[],eqFilterType:!1,eqSimpleCut:10,eqSimplePeak:0,envelopeSpeed:12,discreteEnvelope:!1,eqSubFilters0:[],eqSubFilters1:[],effects:["transition type","chord type","pitch shift","detune","vibrato"],transition:"interrupt",clicklessTransition:!1,chord:"arpeggio",fastTwoNoteArp:!1,arpeggioSpeed:12,pitchShiftSemitones:12,detuneCents:0,vibrato:"none",vibratoDepth:0,vibratoDelay:0,vibratoSpeed:10,vibratoType:0,panDelay:0,fadeInSeconds:0,fadeOutTicks:-1,wave:"square",unison:"none",customChipWave:{0:0,1:0,2:-24,3:-24,4:-24,5:-24,6:-24,7:-24,8:-24,9:-24,10:-24,11:-24,12:-24,13:-24,14:-24,15:-24,16:-24,17:-24,18:-24,19:-24,20:0,21:0,22:0,23:0,24:3,25:3,26:3,27:3,28:3,29:3,30:3,31:3,32:3,33:3,34:3,35:-24,36:-24,37:-24,38:-24,39:24,40:24,41:24,42:24,43:24,44:24,45:24,46:24,47:24,48:12,49:12,50:12,51:12,52:24,53:24,54:5,55:5,56:5,57:24,58:24,59:2,60:2,61:2,62:0,63:0},customChipWaveIntegral:{0:0,1:0,2:0,3:0,4:0,5:0,6:0,7:0,8:0,9:0,10:0,11:0,12:0,13:0,14:0,15:0,16:0,17:0,18:0,19:0,20:0,21:0,22:0,23:0,24:0,25:0,26:0,27:0,28:0,29:0,30:0,31:0,32:0,33:0,34:0,35:0,36:0,37:0,38:0,39:0,40:0,41:0,42:0,43:0,44:0,45:0,46:0,47:0,48:0,49:0,50:0,51:0,52:0,53:0,54:0,55:0,56:0,57:0,58:0,59:0,60:0,61:0,62:0,63:0,64:0},envelopes:[]}}])},{name:"Synth Lead",presets:S([{name:"FilterSaw",midiProgram:82,settings:{type:"chip",eqFilter:[],eqFilterType:!1,eqSimpleCut:10,eqSimplePeak:0,envelopeSpeed:1,discreteEnvelope:!1,eqSubFilters0:[],effects:["transition type","note filter","distortion","bitcrusher","chorus","reverb"],transition:"continue",clicklessTransition:!1,noteFilterType:!1,noteSimpleCut:10,noteSimplePeak:0,noteFilter:[{type:"low-pass",cutoffHz:6727.17,linearGain:11.3137},{type:"peak",cutoffHz:2828.43,linearGain:2.8284},{type:"peak",cutoffHz:5656.85,linearGain:.0884}],noteSubFilters0:[{type:"low-pass",cutoffHz:6727.17,linearGain:11.3137},{type:"peak",cutoffHz:2828.43,linearGain:2.8284},{type:"peak",cutoffHz:5656.85,linearGain:.0884}],noteSubFilters1:[{type:"low-pass",cutoffHz:19027.31,linearGain:.7071}],distortion:29,aliases:!0,bitcrusherOctave:6.5,bitcrusherQuantization:0,panDelay:0,chorus:29,reverb:0,fadeInSeconds:0,fadeOutTicks:96,wave:"sawtooth",unison:"none",isUsingAdvancedLoopControls:!1,chipWaveLoopStart:0,chipWaveLoopEnd:32,chipWaveLoopMode:0,chipWavePlayBackwards:!1,chipWaveStartOffset:0,envelopes:[{target:"noteFilterFreq",envelope:"decay 3",index:0},{target:"noteFilterFreq",envelope:"decay 3",index:1}]}},{name:"FilterSquare",midiProgram:80,settings:{type:"PWM",eqFilter:[{type:"low-pass",cutoffHz:4756.83,linearGain:2},{type:"high-pass",cutoffHz:105.11,linearGain:.25}],eqFilterType:!1,eqSimpleCut:10,eqSimplePeak:0,envelopeSpeed:12,discreteEnvelope:!1,eqSubFilters0:[{type:"low-pass",cutoffHz:4756.83,linearGain:2},{type:"high-pass",cutoffHz:105.11,linearGain:.25}],effects:["transition type","pitch shift","note filter","reverb"],transition:"continue",clicklessTransition:!1,pitchShiftSemitones:24,noteFilterType:!1,noteSimpleCut:10,noteSimplePeak:0,noteFilter:[{type:"low-pass",cutoffHz:5656.85,linearGain:2.8284}],noteSubFilters0:[{type:"low-pass",cutoffHz:5656.85,linearGain:2.8284}],panDelay:10,reverb:6,fadeInSeconds:0,fadeOutTicks:6,pulseWidth:50,decimalOffset:0,unison:"none",envelopes:[{target:"noteFilterAllFreqs",envelope:"rise 3"}]}},{name:"Synth Lead 1",midiProgram:83,settings:{type:"FM",eqFilter:[{type:"high-pass",cutoffHz:210.22,linearGain:.5},{type:"peak",cutoffHz:2828.43,linearGain:.7071},{type:"low-pass",cutoffHz:5656.85,linearGain:2}],eqFilterType:!1,eqSimpleCut:10,eqSimplePeak:0,envelopeSpeed:12,discreteEnvelope:!1,eqSubFilters0:[{type:"high-pass",cutoffHz:210.22,linearGain:.5},{type:"peak",cutoffHz:2828.43,linearGain:.7071},{type:"low-pass",cutoffHz:5656.85,linearGain:2}],effects:["transition type","chord type","note filter","chorus","echo","reverb"],transition:"slide",clicklessTransition:!1,chord:"custom interval",fastTwoNoteArp:!1,arpeggioSpeed:12,noteFilterType:!1,noteSimpleCut:10,noteSimplePeak:0,noteFilter:[{type:"low-pass",cutoffHz:2828.43,linearGain:1}],noteSubFilters0:[{type:"low-pass",cutoffHz:2828.43,linearGain:1}],panDelay:10,chorus:57,echoSustain:71,echoDelayBeats:.75,reverb:10,fadeInSeconds:0,fadeOutTicks:12,algorithm:"1 2 3 4",feedbackType:"1⟲",feedbackAmplitude:0,operators:[{frequency:"1×",amplitude:15,waveform:"sawtooth",pulseWidth:5},{frequency:"1×",amplitude:8,waveform:"triangle",pulseWidth:5},{frequency:"4×",amplitude:13,waveform:"pulse width",pulseWidth:5},{frequency:"1×",amplitude:4,waveform:"triangle",pulseWidth:5},{frequency:"1×",amplitude:0,waveform:"sine",pulseWidth:5},{frequency:"1×",amplitude:0,waveform:"sine",pulseWidth:5}],envelopes:[{target:"noteFilterAllFreqs",envelope:"note size"},{target:"noteFilterAllFreqs",envelope:"twang 3"}]}},{name:"Synth Lead 2",midiProgram:84,settings:{type:"FM",eqFilter:[{type:"high-pass",cutoffHz:210.22,linearGain:.5},{type:"peak",cutoffHz:2828.43,linearGain:.7071},{type:"low-pass",cutoffHz:5656.85,linearGain:2}],eqFilterType:!1,eqSimpleCut:10,eqSimplePeak:0,envelopeSpeed:12,discreteEnvelope:!1,eqSubFilters0:[{type:"high-pass",cutoffHz:210.22,linearGain:.5},{type:"peak",cutoffHz:2828.43,linearGain:.7071},{type:"low-pass",cutoffHz:5656.85,linearGain:2}],effects:["transition type","chord type","note filter","chorus","echo","reverb"],transition:"slide",clicklessTransition:!1,chord:"custom interval",fastTwoNoteArp:!1,arpeggioSpeed:12,noteFilterType:!1,noteSimpleCut:10,noteSimplePeak:0,noteFilter:[{type:"low-pass",cutoffHz:9513.66,linearGain:.7071}],noteSubFilters0:[{type:"low-pass",cutoffHz:9513.66,linearGain:.7071}],panDelay:10,chorus:86,echoSustain:71,echoDelayBeats:.75,reverb:10,fadeInSeconds:0,fadeOutTicks:12,algorithm:"1 2 3 4",feedbackType:"1⟲",feedbackAmplitude:0,operators:[{frequency:"1×",amplitude:15,waveform:"sawtooth",pulseWidth:5},{frequency:"2×",amplitude:8,waveform:"triangle",pulseWidth:5},{frequency:"2×",amplitude:13,waveform:"pulse width",pulseWidth:5},{frequency:"1×",amplitude:4,waveform:"triangle",pulseWidth:5},{frequency:"1×",amplitude:0,waveform:"sine",pulseWidth:5},{frequency:"1×",amplitude:0,waveform:"sine",pulseWidth:5}],envelopes:[{target:"noteFilterAllFreqs",envelope:"note size"},{target:"noteFilterAllFreqs",envelope:"twang 3"}]}},{name:"Distorted",midiProgram:81,settings:{type:"FM",eqFilter:[{type:"high-pass",cutoffHz:148.65,linearGain:1}],eqFilterType:!1,eqSimpleCut:10,eqSimplePeak:0,envelopeSpeed:12,discreteEnvelope:!1,eqSubFilters0:[{type:"high-pass",cutoffHz:148.65,linearGain:1}],effects:["transition type","note filter","distortion","bitcrusher","chorus"],transition:"slide",clicklessTransition:!1,noteFilterType:!1,noteSimpleCut:10,noteSimplePeak:0,noteFilter:[{type:"low-pass",cutoffHz:2378.41,linearGain:.5}],noteSubFilters0:[{type:"low-pass",cutoffHz:2378.41,linearGain:.5}],distortion:100,aliases:!1,bitcrusherOctave:3.5,bitcrusherQuantization:100,panDelay:10,chorus:29,fadeInSeconds:0,fadeOutTicks:-1,algorithm:"1←(2 3 4)",feedbackType:"1⟲",feedbackAmplitude:11,operators:[{frequency:"1×",amplitude:15,waveform:"sine",pulseWidth:5},{frequency:"2×",amplitude:4,waveform:"sine",pulseWidth:5},{frequency:"4×",amplitude:5,waveform:"sine",pulseWidth:5},{frequency:"1×",amplitude:2,waveform:"sine",pulseWidth:5},{frequency:"1×",amplitude:0,waveform:"sine",pulseWidth:5},{frequency:"1×",amplitude:0,waveform:"sine",pulseWidth:5}],envelopes:[{target:"noteFilterFreq",envelope:"wibble 2",index:0}]}},{name:"Pinched",midiProgram:84,settings:{type:"custom chip",eqFilter:[{type:"low-pass",cutoffHz:8e3,linearGain:.5},{type:"high-pass",cutoffHz:500,linearGain:.5}],eqFilterType:!1,eqSimpleCut:10,eqSimplePeak:0,envelopeSpeed:12,discreteEnvelope:!1,eqSubFilters0:[{type:"low-pass",cutoffHz:8e3,linearGain:.5},{type:"high-pass",cutoffHz:500,linearGain:.5}],effects:["chord type","pitch shift","echo","reverb"],chord:"arpeggio",fastTwoNoteArp:!0,arpeggioSpeed:7,pitchShiftSemitones:24,panDelay:10,echoSustain:43,echoDelayBeats:1,reverb:3,fadeInSeconds:0,fadeOutTicks:-6,wave:"square",unison:"none",customChipWave:{0:24,1:24,2:24,3:24,4:24,5:24,6:24,7:24,8:24,9:23,10:22,11:22,12:21,13:20,14:19,15:18,16:17,17:17,18:16,19:14,20:12,21:11,22:8,23:6,24:3,25:-2,26:-6,27:-11,28:-19,29:-22,30:-24,31:-24,32:-24,33:-22,34:-13,35:-5,36:-1,37:4,38:6,39:10,40:12,41:14,42:16,43:16,44:18,45:18,46:20,47:21,48:21,49:22,50:22,51:23,52:24,53:24,54:24,55:24,56:24,57:24,58:24,59:24,60:24,61:24,62:24,63:24},customChipWaveIntegral:{0:0,1:0,2:0,3:0,4:0,5:0,6:0,7:0,8:0,9:0,10:0,11:0,12:0,13:0,14:0,15:0,16:0,17:0,18:0,19:0,20:0,21:0,22:0,23:0,24:0,25:0,26:0,27:0,28:0,29:0,30:0,31:0,32:0,33:0,34:0,35:0,36:0,37:0,38:0,39:0,40:0,41:0,42:0,43:0,44:0,45:0,46:0,47:0,48:0,49:0,50:0,51:0,52:0,53:0,54:0,55:0,56:0,57:0,58:0,59:0,60:0,61:0,62:0,63:0,64:0},envelopes:[]}}])},{name:"Synth Pads",presets:S([{name:"Filter",midiProgram:89,settings:{type:"PWM",eqFilter:[{type:"low-pass",cutoffHz:4756.83,linearGain:2},{type:"high-pass",cutoffHz:105.11,linearGain:.25}],eqFilterType:!1,eqSimpleCut:10,eqSimplePeak:0,envelopeSpeed:12,discreteEnvelope:!1,eqSubFilters0:[{type:"low-pass",cutoffHz:4756.83,linearGain:2},{type:"high-pass",cutoffHz:105.11,linearGain:.25}],effects:["transition type","pitch shift","note filter","reverb"],transition:"continue",clicklessTransition:!1,pitchShiftSemitones:24,noteFilterType:!1,noteSimpleCut:10,noteSimplePeak:0,noteFilter:[{type:"low-pass",cutoffHz:5656.85,linearGain:2.8284}],noteSubFilters0:[{type:"low-pass",cutoffHz:5656.85,linearGain:2.8284}],panDelay:10,reverb:6,fadeInSeconds:0,fadeOutTicks:6,pulseWidth:49,decimalOffset:0,unison:"none",envelopes:[{target:"noteFilterAllFreqs",envelope:"rise 3"}]}},{name:"SuperSaw 1",midiProgram:91,settings:{type:"supersaw",eqFilter:[{type:"high-pass",cutoffHz:353.55,linearGain:2},{type:"low-pass",cutoffHz:11313.71,linearGain:.3536}],eqFilterType:!1,eqSimpleCut:10,eqSimplePeak:0,envelopeSpeed:12,discreteEnvelope:!1,eqSubFilters0:[{type:"high-pass",cutoffHz:353.55,linearGain:2},{type:"low-pass",cutoffHz:11313.71,linearGain:.3536}],effects:["transition type","note filter","bitcrusher","chorus","echo","reverb"],transition:"normal",clicklessTransition:!1,noteFilterType:!0,noteSimpleCut:10,noteSimplePeak:0,noteFilter:[{type:"low-pass",cutoffHz:19027.31,linearGain:.7071}],noteSubFilters1:[{type:"low-pass",cutoffHz:19027.31,linearGain:.7071}],bitcrusherOctave:6.5,bitcrusherQuantization:43,panDelay:10,chorus:29,echoSustain:57,echoDelayBeats:1.5,reverb:45,fadeInSeconds:.0938,fadeOutTicks:96,pulseWidth:18,decimalOffset:0,dynamism:83,spread:42,shape:50,envelopes:[]}},{name:"SuperSaw 2",midiProgram:93,settings:{type:"supersaw",eqFilter:[{type:"high-pass",cutoffHz:353.55,linearGain:2},{type:"low-pass",cutoffHz:11313.71,linearGain:.3536}],eqFilterType:!1,eqSimpleCut:10,eqSimplePeak:0,envelopeSpeed:12,discreteEnvelope:!1,eqSubFilters0:[{type:"high-pass",cutoffHz:353.55,linearGain:2},{type:"low-pass",cutoffHz:11313.71,linearGain:.3536}],effects:["transition type","note filter","bitcrusher","chorus","echo","reverb"],transition:"continue",clicklessTransition:!1,noteFilterType:!1,noteSimpleCut:10,noteSimplePeak:0,noteFilter:[{type:"low-pass",cutoffHz:5656.85,linearGain:2.8284}],noteSubFilters0:[{type:"low-pass",cutoffHz:5656.85,linearGain:2.8284}],noteSubFilters1:[{type:"low-pass",cutoffHz:19027.31,linearGain:.7071}],bitcrusherOctave:6.5,bitcrusherQuantization:43,panDelay:10,chorus:29,echoSustain:57,echoDelayBeats:1.5,reverb:45,fadeInSeconds:.075,fadeOutTicks:96,pulseWidth:18,decimalOffset:0,dynamism:83,spread:42,shape:50,envelopes:[{target:"noteFilterAllFreqs",envelope:"rise 3"}]}},{name:"Bright",midiProgram:95,settings:{type:"FM",eqFilter:[{type:"high-pass",cutoffHz:353.55,linearGain:.3536},{type:"peak",cutoffHz:3363.59,linearGain:.5}],eqFilterType:!1,eqSimpleCut:10,eqSimplePeak:0,envelopeSpeed:12,discreteEnvelope:!1,eqSubFilters0:[{type:"high-pass",cutoffHz:353.55,linearGain:.3536},{type:"peak",cutoffHz:3363.59,linearGain:.5}],effects:["transition type","note filter","chorus","echo","reverb"],transition:"interrupt",clicklessTransition:!1,noteFilterType:!1,noteSimpleCut:10,noteSimplePeak:0,noteFilter:[{type:"low-pass",cutoffHz:11313.71,linearGain:1.4142}],noteSubFilters0:[{type:"low-pass",cutoffHz:11313.71,linearGain:1.4142}],panDelay:10,chorus:57,echoSustain:57,echoDelayBeats:.5,reverb:0,fadeInSeconds:0,fadeOutTicks:96,algorithm:"1 2 3 4",feedbackType:"1⟲",feedbackAmplitude:0,operators:[{frequency:"1×",amplitude:15,waveform:"sawtooth",pulseWidth:5},{frequency:"16×",amplitude:13,waveform:"triangle",pulseWidth:5},{frequency:"2×",amplitude:7,waveform:"triangle",pulseWidth:5},{frequency:"2×",amplitude:8,waveform:"triangle",pulseWidth:5},{frequency:"1×",amplitude:0,waveform:"sine",pulseWidth:5},{frequency:"1×",amplitude:0,waveform:"sine",pulseWidth:5}],envelopes:[{target:"noteFilterAllFreqs",envelope:"swell 1"},{target:"noteFilterAllFreqs",envelope:"twang 3"}]}},{name:"Soft",midiProgram:90,settings:{type:"FM",eqFilter:[{type:"low-pass",cutoffHz:2110.37,linearGain:1.4142}],eqFilterType:!0,eqSimpleCut:6,eqSimplePeak:3,envelopeSpeed:12,discreteEnvelope:!1,eqSubFilters1:[],effects:["chorus","echo","reverb"],panDelay:10,chorus:100,echoSustain:100,echoDelayBeats:2,reverb:0,fadeInSeconds:.0575,fadeOutTicks:96,algorithm:"1 2 3 4",feedbackType:"1⟲ 2⟲ 3⟲ 4⟲",feedbackAmplitude:12,operators:[{frequency:"3×",amplitude:6,waveform:"sine",pulseWidth:5},{frequency:"2×",amplitude:7,waveform:"sine",pulseWidth:5},{frequency:"1×",amplitude:8,waveform:"sine",pulseWidth:5},{frequency:"1×",amplitude:9,waveform:"sine",pulseWidth:5},{frequency:"1×",amplitude:0,waveform:"sine",pulseWidth:5},{frequency:"1×",amplitude:0,waveform:"sine",pulseWidth:5}],envelopes:[{target:"feedbackAmplitude",envelope:"swell 1"}]}},{name:"SuperPhaser68",midiProgram:96,settings:{type:"supersaw",eqFilter:[{type:"high-pass",cutoffHz:148.65,linearGain:.7071}],eqFilterType:!1,eqSimpleCut:10,eqSimplePeak:0,envelopeSpeed:1,discreteEnvelope:!1,eqSubFilters0:[{type:"high-pass",cutoffHz:148.65,linearGain:.7071}],effects:["transition type","note filter","chorus","reverb"],transition:"interrupt",clicklessTransition:!1,noteFilterType:!1,noteSimpleCut:10,noteSimplePeak:0,noteFilter:[{type:"peak",cutoffHz:1189.21,linearGain:.0884},{type:"peak",cutoffHz:1414.21,linearGain:11.3137},{type:"peak",cutoffHz:2378.41,linearGain:.0884},{type:"peak",cutoffHz:2828.43,linearGain:11.3137},{type:"peak",cutoffHz:4756.83,linearGain:.0884},{type:"peak",cutoffHz:5656.85,linearGain:11.3137},{type:"peak",cutoffHz:9513.66,linearGain:.0884},{type:"peak",cutoffHz:11313.71,linearGain:11.3137}],noteSubFilters0:[{type:"peak",cutoffHz:1189.21,linearGain:.0884},{type:"peak",cutoffHz:1414.21,linearGain:11.3137},{type:"peak",cutoffHz:2378.41,linearGain:.0884},{type:"peak",cutoffHz:2828.43,linearGain:11.3137},{type:"peak",cutoffHz:4756.83,linearGain:.0884},{type:"peak",cutoffHz:5656.85,linearGain:11.3137},{type:"peak",cutoffHz:9513.66,linearGain:.0884},{type:"peak",cutoffHz:11313.71,linearGain:11.3137}],panDelay:10,chorus:57,reverb:29,fadeInSeconds:0,fadeOutTicks:24,pulseWidth:50,decimalOffset:0,dynamism:100,spread:42,shape:0,envelopes:[{target:"noteFilterAllFreqs",envelope:"tremolo3"}]}}])},{name:"Synth-Bass",presets:S([{name:"Bass_p1",midiProgram:35,settings:{type:"FM",eqFilter:[{type:"low-pass",cutoffHz:4756.83,linearGain:.3536},{type:"high-pass",cutoffHz:148.65,linearGain:.5}],eqFilterType:!1,eqSimpleCut:10,eqSimplePeak:0,envelopeSpeed:12,discreteEnvelope:!1,eqSubFilters0:[{type:"low-pass",cutoffHz:4756.83,linearGain:.3536},{type:"high-pass",cutoffHz:148.65,linearGain:.5}],eqSubFilters1:[],effects:["detune","bitcrusher","reverb"],detuneCents:0,bitcrusherOctave:6.5,bitcrusherQuantization:0,panDelay:10,reverb:0,fadeInSeconds:0,fadeOutTicks:-3,algorithm:"1←(2 3 4)",feedbackType:"1⟲",feedbackAmplitude:4,operators:[{frequency:"1×",amplitude:15,waveform:"sine",pulseWidth:5},{frequency:"2×",amplitude:2,waveform:"sine",pulseWidth:5},{frequency:"1×",amplitude:4,waveform:"sine",pulseWidth:5},{frequency:"1×",amplitude:3,waveform:"sine",pulseWidth:5},{frequency:"1×",amplitude:0,waveform:"sine",pulseWidth:5},{frequency:"1×",amplitude:0,waveform:"sine",pulseWidth:5}],envelopes:[{target:"operatorAmplitude",envelope:"punch",index:3},{target:"feedbackAmplitude",envelope:"decay 2"},{target:"operatorAmplitude",envelope:"twang 3",index:1}]}},{name:"Bass_p2",midiProgram:34,settings:{type:"FM",eqFilter:[],eqFilterType:!1,eqSimpleCut:10,eqSimplePeak:0,envelopeSpeed:12,discreteEnvelope:!1,eqSubFilters0:[],eqSubFilters1:[],effects:["transition type","detune","bitcrusher"],transition:"normal",clicklessTransition:!0,detuneCents:0,bitcrusherOctave:6.5,bitcrusherQuantization:0,panDelay:10,fadeInSeconds:0,fadeOutTicks:-3,algorithm:"1←(2 3 4)",feedbackType:"1⟲ 2⟲ 3⟲ 4⟲",feedbackAmplitude:0,operators:[{frequency:"1×",amplitude:15,waveform:"sine",pulseWidth:5},{frequency:"1×",amplitude:4,waveform:"sine",pulseWidth:5},{frequency:"1×",amplitude:0,waveform:"sine",pulseWidth:5},{frequency:"1×",amplitude:0,waveform:"sine",pulseWidth:5},{frequency:"1×",amplitude:0,waveform:"sine",pulseWidth:5},{frequency:"1×",amplitude:0,waveform:"sine",pulseWidth:5}],envelopes:[{target:"noteVolume",envelope:"note size"}]}},{name:"Heavy_p1",midiProgram:35,settings:{type:"FM",eqFilter:[{type:"low-pass",cutoffHz:4756.83,linearGain:.3536},{type:"high-pass",cutoffHz:148.65,linearGain:.5}],eqFilterType:!1,eqSimpleCut:10,eqSimplePeak:0,envelopeSpeed:12,discreteEnvelope:!1,eqSubFilters0:[{type:"low-pass",cutoffHz:4756.83,linearGain:.3536},{type:"high-pass",cutoffHz:148.65,linearGain:.5}],eqSubFilters1:[],effects:["detune","bitcrusher","reverb"],detuneCents:0,bitcrusherOctave:5,bitcrusherQuantization:71,panDelay:10,reverb:0,fadeInSeconds:0,fadeOutTicks:-3,algorithm:"1←2←(3 4)",feedbackType:"1→2→3→4",feedbackAmplitude:2,operators:[{frequency:"1×",amplitude:15,waveform:"triangle",pulseWidth:5},{frequency:"2×",amplitude:8,waveform:"triangle",pulseWidth:5},{frequency:"1×",amplitude:4,waveform:"sawtooth",pulseWidth:5},{frequency:"2×",amplitude:3,waveform:"triangle",pulseWidth:5},{frequency:"1×",amplitude:0,waveform:"sine",pulseWidth:5},{frequency:"1×",amplitude:0,waveform:"sine",pulseWidth:5}],envelopes:[{target:"operatorAmplitude",envelope:"punch",index:3},{target:"feedbackAmplitude",envelope:"decay 2"},{target:"operatorAmplitude",envelope:"twang 3",index:1}]}},{name:"Heavy_p2",midiProgram:34,settings:{type:"FM",eqFilter:[],eqFilterType:!1,eqSimpleCut:10,eqSimplePeak:0,envelopeSpeed:12,discreteEnvelope:!1,eqSubFilters0:[],eqSubFilters1:[],effects:["transition type","detune","bitcrusher"],transition:"normal",clicklessTransition:!0,detuneCents:0,bitcrusherOctave:6.5,bitcrusherQuantization:14,panDelay:10,fadeInSeconds:0,fadeOutTicks:-3,algorithm:"1←3 2←4",feedbackType:"1⟲ 2⟲ 3⟲ 4⟲",feedbackAmplitude:4,operators:[{frequency:"1×",amplitude:15,waveform:"sine",pulseWidth:5},{frequency:"0.5×",amplitude:15,waveform:"triangle",pulseWidth:5},{frequency:"1×",amplitude:3,waveform:"triangle",pulseWidth:5},{frequency:"1×",amplitude:0,waveform:"sine",pulseWidth:5},{frequency:"1×",amplitude:0,waveform:"sine",pulseWidth:5},{frequency:"1×",amplitude:0,waveform:"sine",pulseWidth:5}],envelopes:[{target:"noteVolume",envelope:"note size"}]}},{name:"Heavy_p3",midiProgram:34,settings:{type:"FM",eqFilter:[{type:"low-pass",cutoffHz:19027.31,linearGain:.7071}],eqFilterType:!0,eqSimpleCut:10,eqSimplePeak:0,envelopeSpeed:12,discreteEnvelope:!1,eqSubFilters1:[],effects:["detune"],detuneCents:0,panDelay:10,fadeInSeconds:0,fadeOutTicks:-1,algorithm:"1←(2 3 4)",feedbackType:"1⟲",feedbackAmplitude:0,operators:[{frequency:"1×",amplitude:15,waveform:"triangle",pulseWidth:5},{frequency:"2×",amplitude:0,waveform:"sine",pulseWidth:5},{frequency:"1×",amplitude:0,waveform:"sine",pulseWidth:5},{frequency:"8×",amplitude:0,waveform:"sine",pulseWidth:5},{frequency:"1×",amplitude:0,waveform:"sine",pulseWidth:5},{frequency:"1×",amplitude:0,waveform:"sine",pulseWidth:5}],envelopes:[]}},{name:"Heavy_p4",midiProgram:37,settings:{type:"FM",eqFilter:[{type:"low-pass",cutoffHz:4756.83,linearGain:.3536},{type:"high-pass",cutoffHz:148.65,linearGain:.5}],eqFilterType:!1,eqSimpleCut:10,eqSimplePeak:0,envelopeSpeed:12,discreteEnvelope:!1,eqSubFilters0:[{type:"low-pass",cutoffHz:4756.83,linearGain:.3536},{type:"high-pass",cutoffHz:148.65,linearGain:.5}],eqSubFilters1:[],effects:["detune","bitcrusher","reverb"],detuneCents:0,bitcrusherOctave:4.5,bitcrusherQuantization:100,panDelay:10,reverb:0,fadeInSeconds:0,fadeOutTicks:-3,algorithm:"1←(2 3 4)",feedbackType:"1→2→3→4→1",feedbackAmplitude:5,operators:[{frequency:"1×",amplitude:15,waveform:"triangle",pulseWidth:5},{frequency:"2×",amplitude:2,waveform:"triangle",pulseWidth:5},{frequency:"1×",amplitude:4,waveform:"sawtooth",pulseWidth:5},{frequency:"2×",amplitude:3,waveform:"triangle",pulseWidth:5},{frequency:"1×",amplitude:0,waveform:"sine",pulseWidth:5},{frequency:"1×",amplitude:0,waveform:"sine",pulseWidth:5}],envelopes:[{target:"operatorAmplitude",envelope:"punch",index:3},{target:"feedbackAmplitude",envelope:"decay 2"},{target:"operatorAmplitude",envelope:"twang 3",index:1}]}},{name:"Bass_Psych",midiProgram:33,settings:{type:"FM",eqFilter:[],eqFilterType:!1,eqSimpleCut:10,eqSimplePeak:0,envelopeSpeed:12,discreteEnvelope:!1,eqSubFilters0:[],eqSubFilters1:[],effects:["transition type","detune","distortion","bitcrusher"],transition:"normal",clicklessTransition:!1,detuneCents:0,distortion:29,aliases:!1,bitcrusherOctave:5,bitcrusherQuantization:57,panDelay:10,fadeInSeconds:0,fadeOutTicks:-3,algorithm:"1←3 2←4",feedbackType:"1⟲",feedbackAmplitude:10,operators:[{frequency:"1×",amplitude:15,waveform:"triangle",pulseWidth:5},{frequency:"0.5×",amplitude:13,waveform:"triangle",pulseWidth:5},{frequency:"1×",amplitude:0,waveform:"sine",pulseWidth:5},{frequency:"1×",amplitude:0,waveform:"sine",pulseWidth:5},{frequency:"1×",amplitude:0,waveform:"sine",pulseWidth:5},{frequency:"1×",amplitude:0,waveform:"sine",pulseWidth:5}],envelopes:[{target:"feedbackAmplitude",envelope:"decay 2"},{target:"operatorAmplitude",envelope:"twang 3",index:1},{target:"noteVolume",envelope:"punch"}]}},{name:"Bass_Filter",midiProgram:39,settings:{type:"chip",eqFilter:[],eqFilterType:!1,eqSimpleCut:10,eqSimplePeak:0,envelopeSpeed:4,discreteEnvelope:!1,eqSubFilters0:[],effects:["note filter","distortion","bitcrusher"],noteFilterType:!1,noteSimpleCut:10,noteSimplePeak:0,noteFilter:[{type:"low-pass",cutoffHz:6727.17,linearGain:11.3137},{type:"peak",cutoffHz:420.45,linearGain:2.8284},{type:"peak",cutoffHz:5656.85,linearGain:.0884}],noteSubFilters0:[{type:"low-pass",cutoffHz:6727.17,linearGain:11.3137},{type:"peak",cutoffHz:420.45,linearGain:2.8284},{type:"peak",cutoffHz:5656.85,linearGain:.0884}],noteSubFilters1:[{type:"low-pass",cutoffHz:19027.31,linearGain:.7071}],distortion:57,aliases:!1,bitcrusherOctave:6.5,bitcrusherQuantization:0,panDelay:0,fadeInSeconds:0,fadeOutTicks:-1,wave:"sawtooth",unison:"none",isUsingAdvancedLoopControls:!1,chipWaveLoopStart:0,chipWaveLoopEnd:32,chipWaveLoopMode:0,chipWavePlayBackwards:!1,chipWaveStartOffset:0,envelopes:[{target:"noteFilterFreq",envelope:"decay 3",index:0},{target:"noteFilterFreq",envelope:"decay 3",index:1}]}},{name:"Bass_SawX03",midiProgram:39,settings:{type:"chip",eqFilter:[{type:"low-pass",cutoffHz:4e3,linearGain:.5}],eqFilterType:!1,eqSimpleCut:10,eqSimplePeak:0,envelopeSpeed:12,discreteEnvelope:!1,eqSubFilters0:[{type:"low-pass",cutoffHz:4e3,linearGain:.5}],effects:["transition type","note filter"],transition:"interrupt",clicklessTransition:!1,noteFilterType:!1,noteSimpleCut:10,noteSimplePeak:0,noteFilter:[{type:"low-pass",cutoffHz:8e3,linearGain:11.3137},{type:"peak",cutoffHz:3363.59,linearGain:11.3137}],noteSubFilters0:[{type:"low-pass",cutoffHz:8e3,linearGain:11.3137},{type:"peak",cutoffHz:3363.59,linearGain:11.3137}],panDelay:10,fadeInSeconds:0,fadeOutTicks:96,wave:"sawtooth",unison:"none",isUsingAdvancedLoopControls:!1,chipWaveLoopStart:0,chipWaveLoopEnd:32,chipWaveLoopMode:0,chipWavePlayBackwards:!1,chipWaveStartOffset:0,envelopes:[{target:"noteFilterAllFreqs",envelope:"twang 2"}]}},{name:"Bass_TriX03",midiProgram:39,settings:{type:"chip",eqFilter:[{type:"low-pass",cutoffHz:4e3,linearGain:.5}],eqFilterType:!1,eqSimpleCut:10,eqSimplePeak:0,envelopeSpeed:12,discreteEnvelope:!1,eqSubFilters0:[{type:"low-pass",cutoffHz:4e3,linearGain:.5}],effects:["transition type","note filter"],transition:"interrupt",clicklessTransition:!1,noteFilterType:!1,noteSimpleCut:10,noteSimplePeak:0,noteFilter:[{type:"low-pass",cutoffHz:8e3,linearGain:11.3137},{type:"peak",cutoffHz:3363.59,linearGain:11.3137}],noteSubFilters0:[{type:"low-pass",cutoffHz:8e3,linearGain:11.3137},{type:"peak",cutoffHz:3363.59,linearGain:11.3137}],panDelay:10,fadeInSeconds:0,fadeOutTicks:96,wave:"triangle",unison:"none",isUsingAdvancedLoopControls:!1,chipWaveLoopStart:0,chipWaveLoopEnd:32,chipWaveLoopMode:0,chipWavePlayBackwards:!1,chipWaveStartOffset:0,envelopes:[{target:"noteFilterAllFreqs",envelope:"twang 2"}]}},{name:"Bass_SqrX03",midiProgram:39,settings:{type:"chip",eqFilter:[{type:"low-pass",cutoffHz:4e3,linearGain:.5}],eqFilterType:!1,eqSimpleCut:10,eqSimplePeak:0,envelopeSpeed:12,discreteEnvelope:!1,eqSubFilters0:[{type:"low-pass",cutoffHz:4e3,linearGain:.5}],effects:["transition type","note filter"],transition:"interrupt",clicklessTransition:!1,noteFilterType:!1,noteSimpleCut:10,noteSimplePeak:0,noteFilter:[{type:"low-pass",cutoffHz:8e3,linearGain:11.3137},{type:"peak",cutoffHz:3363.59,linearGain:11.3137}],noteSubFilters0:[{type:"low-pass",cutoffHz:8e3,linearGain:11.3137},{type:"peak",cutoffHz:3363.59,linearGain:11.3137}],panDelay:10,fadeInSeconds:0,fadeOutTicks:96,wave:"square",unison:"none",isUsingAdvancedLoopControls:!1,chipWaveLoopStart:0,chipWaveLoopEnd:2,chipWaveLoopMode:0,chipWavePlayBackwards:!1,chipWaveStartOffset:0,envelopes:[{target:"noteFilterAllFreqs",envelope:"twang 2"}]}},{name:"Bass_PulX03",midiProgram:39,settings:{type:"PWM",eqFilter:[{type:"low-pass",cutoffHz:4e3,linearGain:.5}],eqFilterType:!1,eqSimpleCut:10,eqSimplePeak:0,envelopeSpeed:12,discreteEnvelope:!1,eqSubFilters0:[{type:"low-pass",cutoffHz:4e3,linearGain:.5}],effects:["transition type","note filter"],transition:"interrupt",clicklessTransition:!1,noteFilterType:!1,noteSimpleCut:10,noteSimplePeak:0,noteFilter:[{type:"low-pass",cutoffHz:8e3,linearGain:11.3137},{type:"peak",cutoffHz:3363.59,linearGain:11.3137}],noteSubFilters0:[{type:"low-pass",cutoffHz:8e3,linearGain:11.3137},{type:"peak",cutoffHz:3363.59,linearGain:11.3137}],panDelay:10,fadeInSeconds:0,fadeOutTicks:96,pulseWidth:49,decimalOffset:0,unison:"none",envelopes:[{target:"noteFilterAllFreqs",envelope:"twang 2"}]}},{name:"Bass_SSWX03",midiProgram:39,settings:{type:"supersaw",eqFilter:[{type:"low-pass",cutoffHz:4e3,linearGain:.5}],eqFilterType:!1,eqSimpleCut:10,eqSimplePeak:0,envelopeSpeed:12,discreteEnvelope:!1,eqSubFilters0:[{type:"low-pass",cutoffHz:4e3,linearGain:.5}],effects:["transition type","note filter"],transition:"interrupt",clicklessTransition:!1,noteFilterType:!1,noteSimpleCut:10,noteSimplePeak:0,noteFilter:[{type:"low-pass",cutoffHz:8e3,linearGain:11.3137},{type:"peak",cutoffHz:3363.59,linearGain:11.3137}],noteSubFilters0:[{type:"low-pass",cutoffHz:8e3,linearGain:11.3137},{type:"peak",cutoffHz:3363.59,linearGain:11.3137}],panDelay:10,fadeInSeconds:0,fadeOutTicks:96,pulseWidth:49,decimalOffset:0,dynamism:100,spread:50,shape:0,envelopes:[{target:"noteFilterAllFreqs",envelope:"twang 2"}]}},{name:"Bass_Bass68",midiProgram:34,settings:{type:"FM",eqFilter:[{type:"peak",cutoffHz:297.3,linearGain:.3536}],eqFilterType:!1,eqSimpleCut:10,eqSimplePeak:0,envelopeSpeed:12,discreteEnvelope:!1,eqSubFilters0:[{type:"peak",cutoffHz:297.3,linearGain:.3536}],effects:["bitcrusher","chorus"],bitcrusherOctave:5.5,bitcrusherQuantization:0,panDelay:10,chorus:43,fadeInSeconds:0,fadeOutTicks:-3,algorithm:"1←(2 3 4)",feedbackType:"1⟲",feedbackAmplitude:5,operators:[{frequency:"1×",amplitude:15,waveform:"sine",pulseWidth:5},{frequency:"1×",amplitude:5,waveform:"sine",pulseWidth:5},{frequency:"1×",amplitude:0,waveform:"sine",pulseWidth:5},{frequency:"1×",amplitude:0,waveform:"sine",pulseWidth:5},{frequency:"1×",amplitude:0,waveform:"sine",pulseWidth:5},{frequency:"1×",amplitude:0,waveform:"sine",pulseWidth:5}],envelopes:[{target:"feedbackAmplitude",envelope:"twang 1"},{target:"operatorAmplitude",envelope:"twang 2",index:1}]}}])},{name:"Synth-Brass",presets:S([{name:"Brass 1",midiProgram:57,settings:{type:"FM",eqFilter:[{type:"high-pass",cutoffHz:707.11,linearGain:.25},{type:"peak",cutoffHz:4756.83,linearGain:5.6569}],eqFilterType:!1,eqSimpleCut:10,eqSimplePeak:0,envelopeSpeed:12,discreteEnvelope:!1,eqSubFilters0:[{type:"high-pass",cutoffHz:707.11,linearGain:.25},{type:"peak",cutoffHz:4756.83,linearGain:5.6569}],effects:["transition type","note filter","chorus","echo","reverb"],transition:"interrupt",clicklessTransition:!1,noteFilterType:!1,noteSimpleCut:10,noteSimplePeak:0,noteFilter:[{type:"low-pass",cutoffHz:9513.66,linearGain:.5}],noteSubFilters0:[{type:"low-pass",cutoffHz:9513.66,linearGain:.5}],panDelay:10,chorus:57,echoSustain:43,echoDelayBeats:.5,reverb:0,fadeInSeconds:0,fadeOutTicks:-1,algorithm:"1 2←(3 4)",feedbackType:"1⟲",feedbackAmplitude:0,operators:[{frequency:"1×",amplitude:15,waveform:"sawtooth",pulseWidth:5},{frequency:"1×",amplitude:13,waveform:"triangle",pulseWidth:5},{frequency:"1×",amplitude:7,waveform:"triangle",pulseWidth:5},{frequency:"1×",amplitude:8,waveform:"triangle",pulseWidth:5},{frequency:"1×",amplitude:0,waveform:"sine",pulseWidth:5},{frequency:"1×",amplitude:0,waveform:"sine",pulseWidth:5}],envelopes:[{target:"noteFilterAllFreqs",envelope:"swell 1"},{target:"noteFilterAllFreqs",envelope:"twang 3"}]}},{name:"Brass 2",midiProgram:61,settings:{type:"FM",eqFilter:[{type:"high-pass",cutoffHz:210.22,linearGain:.5},{type:"peak",cutoffHz:2828.43,linearGain:.7071},{type:"low-pass",cutoffHz:5656.85,linearGain:2}],eqFilterType:!1,eqSimpleCut:10,eqSimplePeak:0,envelopeSpeed:12,discreteEnvelope:!1,eqSubFilters0:[{type:"high-pass",cutoffHz:210.22,linearGain:.5},{type:"peak",cutoffHz:2828.43,linearGain:.7071},{type:"low-pass",cutoffHz:5656.85,linearGain:2}],effects:["transition type","note filter","chorus","echo","reverb"],transition:"interrupt",clicklessTransition:!1,noteFilterType:!1,noteSimpleCut:10,noteSimplePeak:0,noteFilter:[{type:"low-pass",cutoffHz:4756.83,linearGain:1.4142}],noteSubFilters0:[{type:"low-pass",cutoffHz:4756.83,linearGain:1.4142}],panDelay:10,chorus:43,echoSustain:29,echoDelayBeats:.5,reverb:0,fadeInSeconds:0,fadeOutTicks:12,algorithm:"1 2←(3 4)",feedbackType:"1⟲",feedbackAmplitude:0,operators:[{frequency:"1×",amplitude:15,waveform:"sawtooth",pulseWidth:5},{frequency:"1×",amplitude:13,waveform:"triangle",pulseWidth:5},{frequency:"1×",amplitude:7,waveform:"triangle",pulseWidth:5},{frequency:"1×",amplitude:8,waveform:"triangle",pulseWidth:5},{frequency:"1×",amplitude:0,waveform:"sine",pulseWidth:5},{frequency:"1×",amplitude:0,waveform:"sine",pulseWidth:5}],envelopes:[{target:"noteFilterAllFreqs",envelope:"note size"},{target:"noteFilterAllFreqs",envelope:"twang 3"}]}},{name:"Brass 3",midiProgram:58,settings:{type:"FM",eqFilter:[{type:"high-pass",cutoffHz:707.11,linearGain:.25},{type:"peak",cutoffHz:4756.83,linearGain:5.6569}],eqFilterType:!1,eqSimpleCut:10,eqSimplePeak:0,envelopeSpeed:12,discreteEnvelope:!1,eqSubFilters0:[{type:"high-pass",cutoffHz:707.11,linearGain:.25},{type:"peak",cutoffHz:4756.83,linearGain:5.6569}],effects:["transition type","chord type","note filter","chorus","echo","reverb"],transition:"slide",clicklessTransition:!1,chord:"custom interval",fastTwoNoteArp:!1,arpeggioSpeed:12,noteFilterType:!1,noteSimpleCut:10,noteSimplePeak:0,noteFilter:[{type:"low-pass",cutoffHz:9513.66,linearGain:.5}],noteSubFilters0:[{type:"low-pass",cutoffHz:9513.66,linearGain:.5}],panDelay:10,chorus:57,echoSustain:43,echoDelayBeats:.583,reverb:6,fadeInSeconds:0,fadeOutTicks:-1,algorithm:"1 2 3 4",feedbackType:"1⟲",feedbackAmplitude:0,operators:[{frequency:"1×",amplitude:15,waveform:"sawtooth",pulseWidth:5},{frequency:"1×",amplitude:8,waveform:"triangle",pulseWidth:5},{frequency:"1×",amplitude:13,waveform:"triangle",pulseWidth:5},{frequency:"1×",amplitude:4,waveform:"triangle",pulseWidth:5},{frequency:"1×",amplitude:0,waveform:"sine",pulseWidth:5},{frequency:"1×",amplitude:0,waveform:"sine",pulseWidth:5}],envelopes:[{target:"noteFilterAllFreqs",envelope:"swell 1"},{target:"noteFilterAllFreqs",envelope:"twang 3"}]}},{name:"Brass 4",midiProgram:59,settings:{type:"FM",eqFilter:[{type:"high-pass",cutoffHz:707.11,linearGain:.25},{type:"peak",cutoffHz:4756.83,linearGain:5.6569}],eqFilterType:!1,eqSimpleCut:10,eqSimplePeak:0,envelopeSpeed:12,discreteEnvelope:!1,eqSubFilters0:[{type:"high-pass",cutoffHz:707.11,linearGain:.25},{type:"peak",cutoffHz:4756.83,linearGain:5.6569}],effects:["transition type","chord type","note filter","chorus","echo","reverb"],transition:"slide",clicklessTransition:!1,chord:"custom interval",fastTwoNoteArp:!1,arpeggioSpeed:12,noteFilterType:!1,noteSimpleCut:10,noteSimplePeak:0,noteFilter:[{type:"low-pass",cutoffHz:9513.66,linearGain:.5}],noteSubFilters0:[{type:"low-pass",cutoffHz:9513.66,linearGain:.5}],panDelay:10,chorus:57,echoSustain:43,echoDelayBeats:.583,reverb:0,fadeInSeconds:0,fadeOutTicks:-1,algorithm:"1 2 3 4",feedbackType:"1⟲",feedbackAmplitude:0,operators:[{frequency:"1×",amplitude:15,waveform:"sawtooth",pulseWidth:5},{frequency:"1×",amplitude:9,waveform:"triangle",pulseWidth:5},{frequency:"1×",amplitude:0,waveform:"triangle",pulseWidth:5},{frequency:"1×",amplitude:0,waveform:"triangle",pulseWidth:5},{frequency:"1×",amplitude:0,waveform:"sine",pulseWidth:5},{frequency:"1×",amplitude:0,waveform:"sine",pulseWidth:5}],envelopes:[{target:"noteFilterAllFreqs",envelope:"flare 2"},{target:"noteFilterAllFreqs",envelope:"note size"}]}},{name:"Soft 1 ",midiProgram:60,settings:{type:"FM",eqFilter:[{type:"high-pass",cutoffHz:500,linearGain:.0884}],eqFilterType:!1,eqSimpleCut:10,eqSimplePeak:0,envelopeSpeed:12,discreteEnvelope:!1,eqSubFilters0:[{type:"high-pass",cutoffHz:500,linearGain:.0884}],effects:["chorus","reverb"],panDelay:10,chorus:57,reverb:74,fadeInSeconds:.0125,fadeOutTicks:-3,algorithm:"1←3 2←4",feedbackType:"2⟲ 3⟲ 4⟲",feedbackAmplitude:3,operators:[{frequency:"1×",amplitude:15,waveform:"triangle",pulseWidth:5},{frequency:"1×",amplitude:11,waveform:"sine",pulseWidth:5},{frequency:"1×",amplitude:8,waveform:"sine",pulseWidth:5},{frequency:"1×",amplitude:5,waveform:"sine",pulseWidth:5},{frequency:"1×",amplitude:0,waveform:"sine",pulseWidth:5},{frequency:"1×",amplitude:0,waveform:"sine",pulseWidth:5}],envelopes:[]}},{name:"Soft 2",midiProgram:63,settings:{type:"FM",eqFilter:[{type:"high-pass",cutoffHz:210.22,linearGain:.5},{type:"peak",cutoffHz:2828.43,linearGain:.7071},{type:"low-pass",cutoffHz:5656.85,linearGain:2}],eqFilterType:!1,eqSimpleCut:10,eqSimplePeak:0,envelopeSpeed:12,discreteEnvelope:!1,eqSubFilters0:[{type:"high-pass",cutoffHz:210.22,linearGain:.5},{type:"peak",cutoffHz:2828.43,linearGain:.7071},{type:"low-pass",cutoffHz:5656.85,linearGain:2}],effects:["transition type","chord type","note filter","chorus","echo","reverb"],transition:"slide",clicklessTransition:!1,chord:"custom interval",fastTwoNoteArp:!1,arpeggioSpeed:12,noteFilterType:!1,noteSimpleCut:10,noteSimplePeak:0,noteFilter:[{type:"low-pass",cutoffHz:8e3,linearGain:1.4142}],noteSubFilters0:[{type:"low-pass",cutoffHz:8e3,linearGain:1.4142}],panDelay:10,chorus:57,echoSustain:71,echoDelayBeats:.75,reverb:10,fadeInSeconds:0,fadeOutTicks:12,algorithm:"1 2 3 4",feedbackType:"1⟲",feedbackAmplitude:0,operators:[{frequency:"1×",amplitude:15,waveform:"sawtooth",pulseWidth:5},{frequency:"1×",amplitude:8,waveform:"triangle",pulseWidth:5},{frequency:"1×",amplitude:13,waveform:"triangle",pulseWidth:5},{frequency:"1×",amplitude:4,waveform:"triangle",pulseWidth:5},{frequency:"1×",amplitude:0,waveform:"sine",pulseWidth:5},{frequency:"1×",amplitude:0,waveform:"sine",pulseWidth:5}],envelopes:[{target:"noteFilterAllFreqs",envelope:"flare 2"},{target:"noteFilterAllFreqs",envelope:"note size"}]}},{name:"Soft 3",midiProgram:64,settings:{type:"FM",eqFilter:[{type:"low-pass",cutoffHz:2378.41,linearGain:2}],eqFilterType:!1,eqSimpleCut:10,eqSimplePeak:0,envelopeSpeed:12,discreteEnvelope:!1,eqSubFilters0:[{type:"low-pass",cutoffHz:2378.41,linearGain:2}],effects:["transition type","chord type","note filter","echo","reverb"],transition:"slide",clicklessTransition:!1,chord:"custom interval",fastTwoNoteArp:!1,arpeggioSpeed:12,noteFilterType:!1,noteSimpleCut:10,noteSimplePeak:0,noteFilter:[{type:"low-pass",cutoffHz:8e3,linearGain:1.4142}],noteSubFilters0:[{type:"low-pass",cutoffHz:8e3,linearGain:1.4142}],panDelay:10,echoSustain:71,echoDelayBeats:.75,reverb:32,fadeInSeconds:0,fadeOutTicks:6,algorithm:"1 2 3 4",feedbackType:"2⟲",feedbackAmplitude:0,operators:[{frequency:"1×",amplitude:15,waveform:"sawtooth",pulseWidth:5},{frequency:"2×",amplitude:15,waveform:"triangle",pulseWidth:5},{frequency:"4×",amplitude:13,waveform:"triangle",pulseWidth:5},{frequency:"8×",amplitude:4,waveform:"triangle",pulseWidth:5},{frequency:"1×",amplitude:0,waveform:"sine",pulseWidth:5},{frequency:"1×",amplitude:0,waveform:"sine",pulseWidth:5}],envelopes:[{target:"noteFilterAllFreqs",envelope:"flare 2"},{target:"noteFilterAllFreqs",envelope:"note size"}]}}])},{name:"Synth-Winds",presets:S([{name:"Lambent_Wind",midiProgram:76,settings:{type:"spectrum",eqFilter:[{type:"peak",cutoffHz:250,linearGain:.5}],eqFilterType:!1,eqSimpleCut:10,eqSimplePeak:0,envelopeSpeed:12,discreteEnvelope:!1,eqSubFilters0:[{type:"peak",cutoffHz:250,linearGain:.5}],effects:["chord type","pitch shift","detune","note filter","distortion","bitcrusher","reverb"],chord:"strum",fastTwoNoteArp:!1,arpeggioSpeed:12,pitchShiftSemitones:36,detuneCents:0,noteFilterType:!1,noteSimpleCut:10,noteSimplePeak:0,noteFilter:[{type:"high-pass",cutoffHz:420.45,linearGain:1},{type:"low-pass",cutoffHz:5656.85,linearGain:.7071}],noteSubFilters0:[{type:"high-pass",cutoffHz:420.45,linearGain:1},{type:"low-pass",cutoffHz:5656.85,linearGain:.7071}],distortion:0,aliases:!1,bitcrusherOctave:5,bitcrusherQuantization:0,panDelay:10,reverb:10,fadeInSeconds:0,fadeOutTicks:24,spectrum:[100,0,0,0,0,0,0,71,0,0,0,57,0,0,57,0,43,0,43,0,0,29,0,29,0,14,14,14,0,0],unison:"none",envelopes:[]}}])},{name:"Synth-Keys",presets:S([{name:"Keys",generalMidi:!1,settings:{type:"FM",eqFilter:[{type:"high-pass",cutoffHz:210.22,linearGain:.5},{type:"peak",cutoffHz:2828.43,linearGain:.7071},{type:"low-pass",cutoffHz:5656.85,linearGain:2}],eqFilterType:!1,eqSimpleCut:10,eqSimplePeak:0,envelopeSpeed:12,discreteEnvelope:!1,eqSubFilters0:[{type:"high-pass",cutoffHz:210.22,linearGain:.5},{type:"peak",cutoffHz:2828.43,linearGain:.7071},{type:"low-pass",cutoffHz:5656.85,linearGain:2}],effects:["transition type","note filter","chorus","echo","reverb"],transition:"interrupt",clicklessTransition:!1,noteFilterType:!1,noteSimpleCut:10,noteSimplePeak:0,noteFilter:[{type:"low-pass",cutoffHz:4756.83,linearGain:1.4142}],noteSubFilters0:[{type:"low-pass",cutoffHz:4756.83,linearGain:1.4142}],panDelay:10,chorus:57,echoSustain:43,echoDelayBeats:.5,reverb:6,fadeInSeconds:0,fadeOutTicks:12,algorithm:"1 2 3 4",feedbackType:"1⟲",feedbackAmplitude:10,operators:[{frequency:"1×",amplitude:15,waveform:"triangle",pulseWidth:5},{frequency:"1×",amplitude:7,waveform:"triangle",pulseWidth:5},{frequency:"2×",amplitude:13,waveform:"triangle",pulseWidth:5},{frequency:"4×",amplitude:11,waveform:"triangle",pulseWidth:5},{frequency:"1×",amplitude:0,waveform:"sine",pulseWidth:5},{frequency:"1×",amplitude:0,waveform:"sine",pulseWidth:5}],envelopes:[{target:"noteFilterAllFreqs",envelope:"note size"},{target:"noteFilterAllFreqs",envelope:"twang 3"}]}},{name:"Keys_Fuzzy",generalMidi:!1,settings:{type:"Picked String",eqFilter:[{type:"low-pass",cutoffHz:8e3,linearGain:.5},{type:"high-pass",cutoffHz:125,linearGain:1.4142},{type:"peak",cutoffHz:4756.83,linearGain:11.3137}],eqFilterType:!1,eqSimpleCut:10,eqSimplePeak:0,envelopeSpeed:12,discreteEnvelope:!1,eqSubFilters0:[{type:"low-pass",cutoffHz:8e3,linearGain:.5},{type:"high-pass",cutoffHz:125,linearGain:1.4142},{type:"peak",cutoffHz:4756.83,linearGain:11.3137}],effects:["transition type","chord type","note filter","bitcrusher","reverb"],transition:"interrupt",clicklessTransition:!1,chord:"strum",fastTwoNoteArp:!1,arpeggioSpeed:12,noteFilterType:!1,noteSimpleCut:10,noteSimplePeak:0,noteFilter:[{type:"high-pass",cutoffHz:250,linearGain:.3536},{type:"low-pass",cutoffHz:5656.85,linearGain:.5}],noteSubFilters0:[{type:"high-pass",cutoffHz:250,linearGain:.3536},{type:"low-pass",cutoffHz:5656.85,linearGain:.5}],bitcrusherOctave:4,bitcrusherQuantization:43,panDelay:10,reverb:52,fadeInSeconds:0,fadeOutTicks:48,harmonics:[100,71,71,0,0,14,71,43,43,71,29,43,43,29,43,71,14,14,43,43,43,0,14,14,14,43,29,29],unison:"dirty",stringSustain:64,envelopes:[{target:"noteFilterAllFreqs",envelope:"swell 2"}]}},{name:"Keys_Soft",generalMidi:!1,settings:{type:"FM",eqFilter:[{type:"low-pass",cutoffHz:2378.41,linearGain:2}],eqFilterType:!1,eqSimpleCut:10,eqSimplePeak:0,envelopeSpeed:12,discreteEnvelope:!1,eqSubFilters0:[{type:"low-pass",cutoffHz:2378.41,linearGain:2}],effects:["transition type","note filter","reverb"],transition:"slide",clicklessTransition:!1,noteFilterType:!1,noteSimpleCut:10,noteSimplePeak:0,noteFilter:[{type:"low-pass",cutoffHz:8e3,linearGain:1.4142}],noteSubFilters0:[{type:"low-pass",cutoffHz:8e3,linearGain:1.4142}],panDelay:10,reverb:13,fadeInSeconds:0,fadeOutTicks:6,algorithm:"1 2 3 4",feedbackType:"1⟲ 2⟲ 3⟲ 4⟲",feedbackAmplitude:0,operators:[{frequency:"1×",amplitude:15,waveform:"triangle",pulseWidth:5},{frequency:"1×",amplitude:0,waveform:"sine",pulseWidth:5},{frequency:"1×",amplitude:0,waveform:"sine",pulseWidth:5},{frequency:"~1×",amplitude:0,waveform:"sine",pulseWidth:5},{frequency:"1×",amplitude:0,waveform:"sine",pulseWidth:5},{frequency:"1×",amplitude:0,waveform:"sine",pulseWidth:5}],envelopes:[{target:"noteFilterAllFreqs",envelope:"flare 1"}]}},{name:"Keys_Distress",generalMidi:!1,settings:{type:"Picked String",eqFilter:[{type:"low-pass",cutoffHz:8e3,linearGain:.5},{type:"high-pass",cutoffHz:125,linearGain:1.4142},{type:"peak",cutoffHz:4756.83,linearGain:11.3137}],eqFilterType:!1,eqSimpleCut:10,eqSimplePeak:0,envelopeSpeed:12,discreteEnvelope:!1,eqSubFilters0:[{type:"low-pass",cutoffHz:8e3,linearGain:.5},{type:"high-pass",cutoffHz:125,linearGain:1.4142},{type:"peak",cutoffHz:4756.83,linearGain:11.3137}],effects:["chord type","detune","note filter","bitcrusher"],chord:"strum",fastTwoNoteArp:!1,arpeggioSpeed:12,detuneCents:32,noteFilterType:!1,noteSimpleCut:10,noteSimplePeak:0,noteFilter:[{type:"low-pass",cutoffHz:8e3,linearGain:.25}],noteSubFilters0:[{type:"low-pass",cutoffHz:8e3,linearGain:.25}],bitcrusherOctave:4,bitcrusherQuantization:43,panDelay:10,fadeInSeconds:0,fadeOutTicks:48,harmonics:[100,71,71,0,0,14,71,43,43,57,29,43,43,29,57,71,14,14,43,43,43,0,14,14,14,29,14,14],unison:"dirty",stringSustain:71,envelopes:[{target:"noteFilterAllFreqs",envelope:"swell 2"}]}},{name:"Keys_Thin_p1",generalMidi:!1,settings:{type:"Picked String",eqFilter:[{type:"low-pass",cutoffHz:5656.85,linearGain:.7071},{type:"high-pass",cutoffHz:420.45,linearGain:.25}],eqFilterType:!1,eqSimpleCut:10,eqSimplePeak:0,envelopeSpeed:12,discreteEnvelope:!1,eqSubFilters0:[{type:"low-pass",cutoffHz:5656.85,linearGain:.7071},{type:"high-pass",cutoffHz:420.45,linearGain:.25}],effects:["transition type","chord type","vibrato","note filter","bitcrusher","echo","reverb"],transition:"interrupt",clicklessTransition:!1,chord:"simultaneous",fastTwoNoteArp:!1,arpeggioSpeed:12,vibrato:"none",vibratoDepth:0,vibratoDelay:0,vibratoSpeed:10,vibratoType:0,noteFilterType:!1,noteSimpleCut:10,noteSimplePeak:0,noteFilter:[{type:"low-pass",cutoffHz:8e3,linearGain:2.8284}],noteSubFilters0:[{type:"low-pass",cutoffHz:8e3,linearGain:2.8284}],bitcrusherOctave:6.5,bitcrusherQuantization:14,panDelay:10,echoSustain:29,echoDelayBeats:.5,reverb:52,fadeInSeconds:.1575,fadeOutTicks:-1,harmonics:[14,71,71,86,0,100,71,0,0,71,43,0,43,0,100,100,71,0,86,86,100,0,0,0,0,0,0,0],unison:"dirty",stringSustain:93,envelopes:[]}},{name:"Keys_Thin_p2",generalMidi:!1,settings:{type:"Picked String",eqFilter:[{type:"low-pass",cutoffHz:5656.85,linearGain:.7071},{type:"high-pass",cutoffHz:420.45,linearGain:.25}],eqFilterType:!1,eqSimpleCut:10,eqSimplePeak:0,envelopeSpeed:12,discreteEnvelope:!1,eqSubFilters0:[{type:"low-pass",cutoffHz:5656.85,linearGain:.7071},{type:"high-pass",cutoffHz:420.45,linearGain:.25}],effects:["transition type","chord type","vibrato","note filter","bitcrusher","echo","reverb"],transition:"interrupt",clicklessTransition:!1,chord:"arpeggio",fastTwoNoteArp:!1,arpeggioSpeed:12,vibrato:"shaky",vibratoDepth:.1,vibratoDelay:0,vibratoSpeed:10,vibratoType:1,noteFilterType:!1,noteSimpleCut:10,noteSimplePeak:0,noteFilter:[{type:"low-pass",cutoffHz:8e3,linearGain:2.8284}],noteSubFilters0:[{type:"low-pass",cutoffHz:8e3,linearGain:2.8284}],bitcrusherOctave:5.5,bitcrusherQuantization:14,panDelay:10,echoSustain:29,echoDelayBeats:2,reverb:61,fadeInSeconds:.1575,fadeOutTicks:-1,harmonics:[14,71,71,86,0,100,71,0,0,71,43,0,43,0,100,100,71,0,86,86,100,0,0,0,0,0,0,0],unison:"dirty",stringSustain:93,envelopes:[{target:"noteFilterAllFreqs",envelope:"wibble-1"}]}},{name:"LonePulse",midiProgram:81,settings:{type:"chip",eqFilter:[{type:"low-pass",cutoffHz:6727.17,linearGain:.7071}],eqFilterType:!1,eqSimpleCut:10,eqSimplePeak:0,envelopeSpeed:12,discreteEnvelope:!1,eqSubFilters0:[{type:"low-pass",cutoffHz:6727.17,linearGain:.7071}],effects:["transition type","chord type","pitch shift","detune","vibrato","note filter","distortion","bitcrusher","chorus","echo"],transition:"interrupt",clicklessTransition:!1,chord:"strum",fastTwoNoteArp:!1,arpeggioSpeed:12,pitchShiftSemitones:24,detuneCents:4,vibrato:"custom",vibratoDepth:.08,vibratoDelay:26,vibratoSpeed:1,vibratoType:0,noteFilterType:!0,noteSimpleCut:10,noteSimplePeak:0,noteFilter:[{type:"low-pass",cutoffHz:19027.31,linearGain:.7071}],noteSubFilters1:[{type:"low-pass",cutoffHz:19027.31,linearGain:.7071}],distortion:14,aliases:!1,bitcrusherOctave:4,bitcrusherQuantization:29,panDelay:10,chorus:71,echoSustain:57,echoDelayBeats:2,fadeInSeconds:0,fadeOutTicks:48,wave:"square",unison:"none",isUsingAdvancedLoopControls:!1,chipWaveLoopStart:0,chipWaveLoopEnd:2,chipWaveLoopMode:0,chipWavePlayBackwards:!1,chipWaveStartOffset:0,envelopes:[{target:"noteFilterAllFreqs",envelope:"twang 2"}]}},{name:"LoneSaw",midiProgram:82,settings:{type:"chip",eqFilter:[{type:"low-pass",cutoffHz:6727.17,linearGain:.7071}],eqFilterType:!1,eqSimpleCut:10,eqSimplePeak:0,envelopeSpeed:12,discreteEnvelope:!1,eqSubFilters0:[{type:"low-pass",cutoffHz:6727.17,linearGain:.7071}],effects:["transition type","chord type","pitch shift","detune","vibrato","note filter","distortion","bitcrusher","chorus","echo"],transition:"interrupt",clicklessTransition:!1,chord:"strum",fastTwoNoteArp:!1,arpeggioSpeed:12,pitchShiftSemitones:24,detuneCents:4,vibrato:"custom",vibratoDepth:.08,vibratoDelay:26,vibratoSpeed:1,vibratoType:0,noteFilterType:!0,noteSimpleCut:10,noteSimplePeak:0,noteFilter:[{type:"low-pass",cutoffHz:19027.31,linearGain:.7071}],noteSubFilters1:[{type:"low-pass",cutoffHz:19027.31,linearGain:.7071}],distortion:14,aliases:!1,bitcrusherOctave:4,bitcrusherQuantization:29,panDelay:10,chorus:71,echoSustain:57,echoDelayBeats:2,fadeInSeconds:0,fadeOutTicks:48,wave:"sawtooth",unison:"none",isUsingAdvancedLoopControls:!1,chipWaveLoopStart:0,chipWaveLoopEnd:32,chipWaveLoopMode:0,chipWavePlayBackwards:!1,chipWaveStartOffset:0,envelopes:[{target:"noteFilterAllFreqs",envelope:"twang 2"}]}},{name:"LoneTriangle",midiProgram:71,settings:{type:"chip",eqFilter:[{type:"low-pass",cutoffHz:6727.17,linearGain:.7071}],eqFilterType:!1,eqSimpleCut:10,eqSimplePeak:0,envelopeSpeed:12,discreteEnvelope:!1,eqSubFilters0:[{type:"low-pass",cutoffHz:6727.17,linearGain:.7071}],effects:["transition type","chord type","pitch shift","detune","vibrato","note filter","distortion","bitcrusher","chorus","echo"],transition:"interrupt",clicklessTransition:!1,chord:"strum",fastTwoNoteArp:!1,arpeggioSpeed:12,pitchShiftSemitones:24,detuneCents:4,vibrato:"custom",vibratoDepth:.08,vibratoDelay:26,vibratoSpeed:1,vibratoType:0,noteFilterType:!0,noteSimpleCut:10,noteSimplePeak:0,noteFilter:[{type:"low-pass",cutoffHz:19027.31,linearGain:.7071}],noteSubFilters1:[{type:"low-pass",cutoffHz:19027.31,linearGain:.7071}],distortion:14,aliases:!1,bitcrusherOctave:4,bitcrusherQuantization:29,panDelay:10,chorus:71,echoSustain:57,echoDelayBeats:2,fadeInSeconds:0,fadeOutTicks:48,wave:"triangle",unison:"none",isUsingAdvancedLoopControls:!1,chipWaveLoopStart:0,chipWaveLoopEnd:32,chipWaveLoopMode:0,chipWavePlayBackwards:!1,chipWaveStartOffset:0,envelopes:[{target:"noteFilterAllFreqs",envelope:"twang 2"}]}}])},{name:"Mix-Synth",presets:S([{name:"Echo_Far 1",midiProgram:93,settings:{type:"PWM",eqFilter:[{type:"high-pass",cutoffHz:420.45,linearGain:.5},{type:"peak",cutoffHz:707.11,linearGain:2.8284},{type:"low-pass",cutoffHz:9513.66,linearGain:.7071}],eqFilterType:!1,eqSimpleCut:10,eqSimplePeak:0,envelopeSpeed:2,discreteEnvelope:!1,eqSubFilters0:[{type:"high-pass",cutoffHz:420.45,linearGain:.5},{type:"peak",cutoffHz:707.11,linearGain:2.8284},{type:"low-pass",cutoffHz:9513.66,linearGain:.7071}],effects:["transition type","chord type","pitch shift","note filter","distortion","bitcrusher","chorus","echo","reverb"],transition:"normal",clicklessTransition:!1,chord:"arpeggio",fastTwoNoteArp:!1,arpeggioSpeed:4,pitchShiftSemitones:36,noteFilterType:!0,noteSimpleCut:10,noteSimplePeak:2,noteFilter:[{type:"low-pass",cutoffHz:10376.27,linearGain:1.4142}],noteSubFilters1:[{type:"low-pass",cutoffHz:10376.27,linearGain:1.4142}],distortion:43,aliases:!1,bitcrusherOctave:5.5,bitcrusherQuantization:43,panDelay:10,chorus:57,echoSustain:71,echoDelayBeats:1,reverb:84,fadeInSeconds:.0125,fadeOutTicks:6,pulseWidth:100,decimalOffset:0,unison:"detune",envelopes:[{target:"noteFilterAllFreqs",envelope:"flare 2"},{target:"pulseWidth",envelope:"flutter 2"},{target:"noteFilterFreq",envelope:"tremolo3",index:0}]}},{name:"Echo_Far 2",midiProgram:93,settings:{type:"PWM",eqFilter:[{type:"high-pass",cutoffHz:420.45,linearGain:.5},{type:"peak",cutoffHz:707.11,linearGain:2.8284}],eqFilterType:!1,eqSimpleCut:10,eqSimplePeak:0,envelopeSpeed:12,discreteEnvelope:!1,eqSubFilters0:[{type:"high-pass",cutoffHz:420.45,linearGain:.5},{type:"peak",cutoffHz:707.11,linearGain:2.8284}],effects:["transition type","chord type","pitch shift","note filter","distortion","bitcrusher","chorus","echo","reverb"],transition:"normal",clicklessTransition:!1,chord:"arpeggio",fastTwoNoteArp:!1,arpeggioSpeed:2,pitchShiftSemitones:36,noteFilterType:!0,noteSimpleCut:10,noteSimplePeak:2,noteFilter:[{type:"low-pass",cutoffHz:10376.27,linearGain:1.4142}],noteSubFilters1:[{type:"low-pass",cutoffHz:10376.27,linearGain:1.4142}],distortion:43,aliases:!1,bitcrusherOctave:5.5,bitcrusherQuantization:43,panDelay:10,chorus:57,echoSustain:71,echoDelayBeats:1,reverb:81,fadeInSeconds:0,fadeOutTicks:6,pulseWidth:100,decimalOffset:0,unison:"detune",envelopes:[{target:"noteFilterAllFreqs",envelope:"flare 2"},{target:"pulseWidth",envelope:"decay 3"},{target:"noteFilterFreq",envelope:"tremolo3",index:0}]}},{name:"Echo_Far 3",midiProgram:93,settings:{type:"PWM",eqFilter:[{type:"high-pass",cutoffHz:420.45,linearGain:.5},{type:"peak",cutoffHz:707.11,linearGain:2.8284}],eqFilterType:!1,eqSimpleCut:10,eqSimplePeak:0,envelopeSpeed:4,discreteEnvelope:!1,eqSubFilters0:[{type:"high-pass",cutoffHz:420.45,linearGain:.5},{type:"peak",cutoffHz:707.11,linearGain:2.8284}],effects:["transition type","chord type","note filter","distortion","bitcrusher","chorus","echo","reverb"],transition:"interrupt",clicklessTransition:!1,chord:"arpeggio",fastTwoNoteArp:!1,arpeggioSpeed:2,noteFilterType:!0,noteSimpleCut:10,noteSimplePeak:2,noteFilter:[{type:"low-pass",cutoffHz:10376.27,linearGain:1.4142}],noteSubFilters1:[{type:"low-pass",cutoffHz:10376.27,linearGain:1.4142}],distortion:43,aliases:!1,bitcrusherOctave:5.5,bitcrusherQuantization:43,panDelay:10,chorus:57,echoSustain:71,echoDelayBeats:1,reverb:81,fadeInSeconds:0,fadeOutTicks:-1,pulseWidth:100,decimalOffset:0,unison:"detune",envelopes:[{target:"noteFilterAllFreqs",envelope:"flare 2"},{target:"pulseWidth",envelope:"water-y flutter"},{target:"noteFilterFreq",envelope:"tremolo3",index:0}]}},{name:"Echo_Far 4",midiProgram:93,settings:{type:"PWM",eqFilter:[{type:"high-pass",cutoffHz:420.45,linearGain:.5},{type:"peak",cutoffHz:707.11,linearGain:2.8284}],eqFilterType:!1,eqSimpleCut:10,eqSimplePeak:0,envelopeSpeed:4,discreteEnvelope:!1,eqSubFilters0:[{type:"high-pass",cutoffHz:420.45,linearGain:.5},{type:"peak",cutoffHz:707.11,linearGain:2.8284}],effects:["transition type","chord type","note filter","distortion","bitcrusher","chorus","echo","reverb"],transition:"interrupt",clicklessTransition:!1,chord:"arpeggio",fastTwoNoteArp:!1,arpeggioSpeed:2,noteFilterType:!0,noteSimpleCut:10,noteSimplePeak:2,noteFilter:[{type:"low-pass",cutoffHz:10376.27,linearGain:1.4142}],noteSubFilters1:[{type:"low-pass",cutoffHz:10376.27,linearGain:1.4142}],distortion:43,aliases:!1,bitcrusherOctave:5.5,bitcrusherQuantization:43,panDelay:10,chorus:57,echoSustain:71,echoDelayBeats:1,reverb:81,fadeInSeconds:0,fadeOutTicks:-1,pulseWidth:100,decimalOffset:0,unison:"detune",envelopes:[{target:"noteFilterAllFreqs",envelope:"flare 2"},{target:"pulseWidth",envelope:"wibble 3"},{target:"noteFilterFreq",envelope:"tremolo3",index:0}]}},{name:"Echo_Far 5",midiProgram:93,settings:{type:"PWM",eqFilter:[{type:"high-pass",cutoffHz:420.45,linearGain:.5},{type:"peak",cutoffHz:707.11,linearGain:2.8284},{type:"low-pass",cutoffHz:9513.66,linearGain:.7071}],eqFilterType:!1,eqSimpleCut:10,eqSimplePeak:0,envelopeSpeed:2,discreteEnvelope:!1,eqSubFilters0:[{type:"high-pass",cutoffHz:420.45,linearGain:.5},{type:"peak",cutoffHz:707.11,linearGain:2.8284},{type:"low-pass",cutoffHz:9513.66,linearGain:.7071}],effects:["transition type","chord type","pitch shift","note filter","distortion","bitcrusher","chorus","echo","reverb"],transition:"normal",clicklessTransition:!1,chord:"arpeggio",fastTwoNoteArp:!1,arpeggioSpeed:12,pitchShiftSemitones:36,noteFilterType:!0,noteSimpleCut:10,noteSimplePeak:2,noteFilter:[{type:"low-pass",cutoffHz:10376.27,linearGain:1.4142}],noteSubFilters1:[{type:"low-pass",cutoffHz:10376.27,linearGain:1.4142}],distortion:43,aliases:!1,bitcrusherOctave:5.5,bitcrusherQuantization:43,panDelay:10,chorus:57,echoSustain:71,echoDelayBeats:1,reverb:81,fadeInSeconds:0,fadeOutTicks:-1,pulseWidth:50,decimalOffset:0,unison:"detune",envelopes:[{target:"noteFilterAllFreqs",envelope:"flare 2"},{target:"pulseWidth",envelope:"flutter 1"},{target:"noteFilterFreq",envelope:"tremolo3",index:0}]}},{name:"Buzz 1",midiProgram:94,settings:{type:"FM",eqFilter:[{type:"high-pass",cutoffHz:250,linearGain:.7071}],eqFilterType:!1,eqSimpleCut:10,eqSimplePeak:0,envelopeSpeed:12,discreteEnvelope:!1,eqSubFilters0:[{type:"high-pass",cutoffHz:250,linearGain:.7071}],effects:["transition type","chorus","echo","reverb"],transition:"interrupt",clicklessTransition:!1,panDelay:10,chorus:43,echoSustain:43,echoDelayBeats:.583,reverb:45,fadeInSeconds:.0263,fadeOutTicks:12,algorithm:"1 2 3 4",feedbackType:"1⟲",feedbackAmplitude:0,operators:[{frequency:"1×",amplitude:15,waveform:"pulse width",pulseWidth:5},{frequency:"2×",amplitude:15,waveform:"triangle",pulseWidth:5},{frequency:"2×",amplitude:10,waveform:"triangle",pulseWidth:5},{frequency:"1×",amplitude:0,waveform:"triangle",pulseWidth:5},{frequency:"1×",amplitude:0,waveform:"sine",pulseWidth:5},{frequency:"1×",amplitude:0,waveform:"sine",pulseWidth:5}],envelopes:[{target:"noteVolume",envelope:"twang 2"}]}},{name:"Buzz 2",midiProgram:94,settings:{type:"FM",eqFilter:[{type:"high-pass",cutoffHz:707.11,linearGain:.25},{type:"peak",cutoffHz:4756.83,linearGain:5.6569}],eqFilterType:!1,eqSimpleCut:10,eqSimplePeak:0,envelopeSpeed:12,discreteEnvelope:!1,eqSubFilters0:[{type:"high-pass",cutoffHz:707.11,linearGain:.25},{type:"peak",cutoffHz:4756.83,linearGain:5.6569}],effects:["transition type","note filter","chorus","echo"],transition:"interrupt",clicklessTransition:!1,noteFilterType:!1,noteSimpleCut:10,noteSimplePeak:0,noteFilter:[{type:"low-pass",cutoffHz:9513.66,linearGain:.5}],noteSubFilters0:[{type:"low-pass",cutoffHz:9513.66,linearGain:.5}],panDelay:10,chorus:57,echoSustain:43,echoDelayBeats:.583,fadeInSeconds:0,fadeOutTicks:-1,algorithm:"1 2 3 4",feedbackType:"1⟲ 2⟲ 3⟲ 4⟲",feedbackAmplitude:15,operators:[{frequency:"1×",amplitude:15,waveform:"sawtooth",pulseWidth:5},{frequency:"1×",amplitude:15,waveform:"triangle",pulseWidth:5},{frequency:"1×",amplitude:13,waveform:"triangle",pulseWidth:5},{frequency:"1×",amplitude:15,waveform:"pulse width",pulseWidth:5},{frequency:"1×",amplitude:0,waveform:"sine",pulseWidth:5},{frequency:"1×",amplitude:0,waveform:"sine",pulseWidth:5}],envelopes:[{target:"noteFilterAllFreqs",envelope:"swell 1"},{target:"noteFilterAllFreqs",envelope:"twang 3"}]}},{name:"Buzz 3",midiProgram:94,settings:{type:"supersaw",eqFilter:[{type:"low-pass",cutoffHz:11313.71,linearGain:.3536}],eqFilterType:!1,eqSimpleCut:10,eqSimplePeak:0,envelopeSpeed:12,discreteEnvelope:!1,eqSubFilters0:[{type:"low-pass",cutoffHz:11313.71,linearGain:.3536}],effects:["transition type","reverb"],transition:"slide",clicklessTransition:!1,panDelay:10,reverb:10,fadeInSeconds:0,fadeOutTicks:-3,pulseWidth:99,decimalOffset:0,dynamism:83,spread:50,shape:50,envelopes:[]}}])},{name:"Synth-Atmos",presets:S([{name:"Shine 1",midiProgram:83,settings:{type:"spectrum",eqFilter:[{type:"peak",cutoffHz:250,linearGain:.5}],eqFilterType:!1,eqSimpleCut:10,eqSimplePeak:0,envelopeSpeed:12,discreteEnvelope:!1,eqSubFilters0:[{type:"peak",cutoffHz:250,linearGain:.5}],effects:["chord type","pitch shift","detune","note filter","distortion","bitcrusher","reverb"],chord:"strum",fastTwoNoteArp:!1,arpeggioSpeed:12,pitchShiftSemitones:24,detuneCents:2,noteFilterType:!1,noteSimpleCut:10,noteSimplePeak:0,noteFilter:[{type:"high-pass",cutoffHz:420.45,linearGain:1},{type:"low-pass",cutoffHz:5656.85,linearGain:.7071}],noteSubFilters0:[{type:"high-pass",cutoffHz:420.45,linearGain:1},{type:"low-pass",cutoffHz:5656.85,linearGain:.7071}],distortion:0,aliases:!1,bitcrusherOctave:5,bitcrusherQuantization:0,panDelay:10,reverb:10,fadeInSeconds:0,fadeOutTicks:24,spectrum:[100,0,0,0,0,0,0,71,0,0,0,57,0,0,57,0,43,0,43,0,0,29,0,29,0,14,14,14,0,0],unison:"none",envelopes:[]}},{name:"Shine 2",midiProgram:83,settings:{type:"spectrum",eqFilter:[{type:"peak",cutoffHz:250,linearGain:.5}],eqFilterType:!1,eqSimpleCut:10,eqSimplePeak:0,envelopeSpeed:12,discreteEnvelope:!1,eqSubFilters0:[{type:"peak",cutoffHz:250,linearGain:.5}],effects:["chord type","pitch shift","detune","note filter","distortion","bitcrusher","reverb"],chord:"strum",fastTwoNoteArp:!1,arpeggioSpeed:12,pitchShiftSemitones:24,detuneCents:0,noteFilterType:!1,noteSimpleCut:10,noteSimplePeak:0,noteFilter:[{type:"high-pass",cutoffHz:420.45,linearGain:1},{type:"low-pass",cutoffHz:5656.85,linearGain:.7071}],noteSubFilters0:[{type:"high-pass",cutoffHz:420.45,linearGain:1},{type:"low-pass",cutoffHz:5656.85,linearGain:.7071}],distortion:0,aliases:!1,bitcrusherOctave:5,bitcrusherQuantization:43,panDelay:10,reverb:10,fadeInSeconds:0,fadeOutTicks:24,spectrum:[100,0,0,0,0,0,0,71,0,0,0,57,0,0,57,0,43,0,43,0,0,29,0,29,0,14,14,14,0,0],unison:"none",envelopes:[]}},{name:"Shine 3",midiProgram:83,settings:{type:"spectrum",eqFilter:[],eqFilterType:!1,eqSimpleCut:10,eqSimplePeak:0,envelopeSpeed:12,discreteEnvelope:!1,eqSubFilters0:[],effects:["transition type","detune","note filter","reverb"],transition:"normal",clicklessTransition:!1,detuneCents:-2,noteFilterType:!1,noteSimpleCut:10,noteSimplePeak:0,noteFilter:[{type:"low-pass",cutoffHz:5656.85,linearGain:.7071},{type:"high-pass",cutoffHz:210.22,linearGain:.7071}],noteSubFilters0:[{type:"low-pass",cutoffHz:5656.85,linearGain:.7071},{type:"high-pass",cutoffHz:210.22,linearGain:.7071}],panDelay:10,reverb:3,fadeInSeconds:0,fadeOutTicks:96,spectrum:[100,0,0,0,0,0,0,71,0,0,0,0,0,0,57,0,43,0,43,0,0,29,0,29,0,14,14,14,0,0],unison:"none",envelopes:[{target:"noteFilterAllFreqs",envelope:"swell 1"}]}},{name:"Shine 4",midiProgram:83,settings:{type:"spectrum",eqFilter:[],eqFilterType:!1,eqSimpleCut:10,eqSimplePeak:0,envelopeSpeed:12,discreteEnvelope:!1,eqSubFilters0:[],effects:["transition type","detune","note filter","bitcrusher","reverb"],transition:"normal",clicklessTransition:!1,detuneCents:2,noteFilterType:!1,noteSimpleCut:10,noteSimplePeak:0,noteFilter:[{type:"low-pass",cutoffHz:5656.85,linearGain:.7071},{type:"high-pass",cutoffHz:210.22,linearGain:.7071}],noteSubFilters0:[{type:"low-pass",cutoffHz:5656.85,linearGain:.7071},{type:"high-pass",cutoffHz:210.22,linearGain:.7071}],bitcrusherOctave:4,bitcrusherQuantization:0,panDelay:10,reverb:3,fadeInSeconds:0,fadeOutTicks:96,spectrum:[100,0,0,0,0,0,0,71,0,0,0,0,0,0,57,0,43,0,43,0,0,29,0,29,0,14,14,14,0,0],unison:"none",envelopes:[{target:"noteFilterAllFreqs",envelope:"swell 1"}]}},{name:"Shine 5",midiProgram:83,settings:{type:"spectrum",eqFilter:[{type:"peak",cutoffHz:250,linearGain:.5}],eqFilterType:!1,eqSimpleCut:10,eqSimplePeak:0,envelopeSpeed:12,discreteEnvelope:!1,eqSubFilters0:[{type:"peak",cutoffHz:250,linearGain:.5}],effects:["transition type","chord type","detune","note filter","bitcrusher","chorus","echo","reverb"],transition:"normal",clicklessTransition:!1,chord:"strum",fastTwoNoteArp:!1,arpeggioSpeed:12,detuneCents:2,noteFilterType:!1,noteSimpleCut:10,noteSimplePeak:0,noteFilter:[{type:"high-pass",cutoffHz:420.45,linearGain:1},{type:"low-pass",cutoffHz:5656.85,linearGain:.7071}],noteSubFilters0:[{type:"high-pass",cutoffHz:420.45,linearGain:1},{type:"low-pass",cutoffHz:5656.85,linearGain:.7071}],bitcrusherOctave:5,bitcrusherQuantization:0,panDelay:10,chorus:14,echoSustain:71,echoDelayBeats:.917,reverb:16,fadeInSeconds:0,fadeOutTicks:96,spectrum:[100,0,0,0,0,0,0,71,0,0,0,57,0,0,57,0,43,0,43,0,0,29,0,29,0,14,14,14,14,0],unison:"none",envelopes:[]}},{name:"ShineSoft 1",midiProgram:95,settings:{type:"spectrum",eqFilter:[],eqFilterType:!1,eqSimpleCut:10,eqSimplePeak:0,envelopeSpeed:12,discreteEnvelope:!1,eqSubFilters0:[],effects:["transition type","chord type","detune","note filter","bitcrusher","chorus","echo","reverb"],transition:"slide",clicklessTransition:!1,chord:"arpeggio",fastTwoNoteArp:!1,arpeggioSpeed:2,detuneCents:2,noteFilterType:!1,noteSimpleCut:10,noteSimplePeak:0,noteFilter:[{type:"low-pass",cutoffHz:11313.71,linearGain:5.6569},{type:"peak",cutoffHz:2828.43,linearGain:.3536},{type:"high-pass",cutoffHz:500,linearGain:1}],noteSubFilters0:[{type:"low-pass",cutoffHz:11313.71,linearGain:5.6569},{type:"peak",cutoffHz:2828.43,linearGain:.3536},{type:"high-pass",cutoffHz:500,linearGain:1}],bitcrusherOctave:3.5,bitcrusherQuantization:0,panDelay:10,chorus:29,echoSustain:71,echoDelayBeats:.917,reverb:16,fadeInSeconds:0,fadeOutTicks:96,spectrum:[100,0,0,0,0,0,0,71,0,0,0,57,0,0,57,0,43,0,43,0,0,29,0,29,0,14,14,14,14,43],unison:"none",envelopes:[{target:"noteFilterAllFreqs",envelope:"rise -2"}]}},{name:"ShineSoft 2",midiProgram:95,settings:{type:"spectrum",eqFilter:[{type:"high-pass",cutoffHz:420.45,linearGain:.7071},{type:"low-pass",cutoffHz:5656.85,linearGain:.7071}],eqFilterType:!1,eqSimpleCut:10,eqSimplePeak:0,envelopeSpeed:12,discreteEnvelope:!1,eqSubFilters0:[{type:"high-pass",cutoffHz:420.45,linearGain:.7071},{type:"low-pass",cutoffHz:5656.85,linearGain:.7071}],effects:["transition type","chord type","detune","note filter","distortion","bitcrusher","chorus","echo","reverb"],transition:"slide",clicklessTransition:!1,chord:"arpeggio",fastTwoNoteArp:!1,arpeggioSpeed:2,detuneCents:2,noteFilterType:!1,noteSimpleCut:10,noteSimplePeak:0,noteFilter:[{type:"low-pass",cutoffHz:5656.85,linearGain:.5},{type:"peak",cutoffHz:2828.43,linearGain:.3536},{type:"high-pass",cutoffHz:500,linearGain:1}],noteSubFilters0:[{type:"low-pass",cutoffHz:5656.85,linearGain:.5},{type:"peak",cutoffHz:2828.43,linearGain:.3536},{type:"high-pass",cutoffHz:500,linearGain:1}],distortion:14,aliases:!1,bitcrusherOctave:3.5,bitcrusherQuantization:71,panDelay:10,chorus:29,echoSustain:71,echoDelayBeats:.917,reverb:19,fadeInSeconds:0,fadeOutTicks:96,spectrum:[100,0,0,0,0,0,0,71,0,0,0,57,0,0,57,0,43,0,43,0,0,29,0,29,0,14,14,14,14,43],unison:"none",envelopes:[{target:"noteFilterAllFreqs",envelope:"rise -2"}]}},{name:"Woosh 1",midiProgram:103,settings:{type:"spectrum",eqFilter:[{type:"high-pass",cutoffHz:707.11,linearGain:.7071}],eqFilterType:!1,eqSimpleCut:10,eqSimplePeak:0,envelopeSpeed:12,discreteEnvelope:!1,eqSubFilters0:[{type:"high-pass",cutoffHz:707.11,linearGain:.7071}],effects:["transition type","bitcrusher","echo","reverb"],transition:"normal",clicklessTransition:!1,bitcrusherOctave:5,bitcrusherQuantization:0,panDelay:10,echoSustain:71,echoDelayBeats:2,reverb:100,fadeInSeconds:0,fadeOutTicks:-1,spectrum:[100,0,0,0,0,0,0,71,0,0,0,57,0,0,71,0,0,86,0,100,0,43,0,0,71,14,43,0,71,0],unison:"none",envelopes:[{target:"noteVolume",envelope:"tremolo0"}]}},{name:"Woosh 2",midiProgram:103,settings:{type:"spectrum",eqFilter:[{type:"high-pass",cutoffHz:707.11,linearGain:.7071}],eqFilterType:!1,eqSimpleCut:10,eqSimplePeak:0,envelopeSpeed:12,discreteEnvelope:!1,eqSubFilters0:[{type:"high-pass",cutoffHz:707.11,linearGain:.7071}],effects:["transition type","bitcrusher","echo","reverb"],transition:"normal",clicklessTransition:!1,bitcrusherOctave:4,bitcrusherQuantization:0,panDelay:10,echoSustain:71,echoDelayBeats:2,reverb:100,fadeInSeconds:0,fadeOutTicks:-1,spectrum:[100,0,0,0,0,0,0,71,0,0,0,57,0,0,71,0,0,86,0,100,0,43,0,0,71,14,43,0,71,0],unison:"none",envelopes:[{target:"noteVolume",envelope:"tremolo0"}]}},{name:"Creak 1",midiProgram:100,settings:{type:"spectrum",eqFilter:[{type:"low-pass",cutoffHz:4e3,linearGain:1.4142},{type:"high-pass",cutoffHz:210.22,linearGain:.7071}],eqFilterType:!1,eqSimpleCut:10,eqSimplePeak:0,envelopeSpeed:12,discreteEnvelope:!1,eqSubFilters0:[{type:"low-pass",cutoffHz:4e3,linearGain:1.4142},{type:"high-pass",cutoffHz:210.22,linearGain:.7071}],effects:["transition type","chord type","pitch shift","detune","note filter","distortion","bitcrusher","chorus","echo","reverb"],transition:"slide",clicklessTransition:!1,chord:"simultaneous",fastTwoNoteArp:!0,arpeggioSpeed:12,pitchShiftSemitones:24,detuneCents:-16,noteFilterType:!1,noteSimpleCut:10,noteSimplePeak:0,noteFilter:[{type:"low-pass",cutoffHz:11313.71,linearGain:5.6569},{type:"peak",cutoffHz:2828.43,linearGain:.3536},{type:"high-pass",cutoffHz:500,linearGain:1}],noteSubFilters0:[{type:"low-pass",cutoffHz:11313.71,linearGain:5.6569},{type:"peak",cutoffHz:2828.43,linearGain:.3536},{type:"high-pass",cutoffHz:500,linearGain:1}],distortion:14,aliases:!1,bitcrusherOctave:3,bitcrusherQuantization:29,panDelay:10,chorus:57,echoSustain:100,echoDelayBeats:1.333,reverb:87,fadeInSeconds:0,fadeOutTicks:6,spectrum:[100,0,0,0,0,0,0,71,0,0,0,57,0,0,57,0,43,0,43,0,0,29,0,29,0,14,14,14,0,43],unison:"none",envelopes:[{target:"noteFilterAllFreqs",envelope:"rise -2"}]}},{name:"Creak Arp 1",midiProgram:100,settings:{type:"spectrum",eqFilter:[{type:"low-pass",cutoffHz:4e3,linearGain:1.4142},{type:"high-pass",cutoffHz:210.22,linearGain:.7071}],eqFilterType:!1,eqSimpleCut:10,eqSimplePeak:0,envelopeSpeed:12,discreteEnvelope:!1,eqSubFilters0:[{type:"low-pass",cutoffHz:4e3,linearGain:1.4142},{type:"high-pass",cutoffHz:210.22,linearGain:.7071}],effects:["transition type","chord type","pitch shift","detune","note filter","distortion","bitcrusher","chorus","echo","reverb"],transition:"slide",clicklessTransition:!1,chord:"arpeggio",fastTwoNoteArp:!0,arpeggioSpeed:12,pitchShiftSemitones:24,detuneCents:-16,noteFilterType:!1,noteSimpleCut:10,noteSimplePeak:0,noteFilter:[{type:"low-pass",cutoffHz:11313.71,linearGain:5.6569},{type:"peak",cutoffHz:2828.43,linearGain:.3536},{type:"high-pass",cutoffHz:500,linearGain:1}],noteSubFilters0:[{type:"low-pass",cutoffHz:11313.71,linearGain:5.6569},{type:"peak",cutoffHz:2828.43,linearGain:.3536},{type:"high-pass",cutoffHz:500,linearGain:1}],distortion:14,aliases:!1,bitcrusherOctave:3,bitcrusherQuantization:29,panDelay:10,chorus:57,echoSustain:100,echoDelayBeats:1.333,reverb:87,fadeInSeconds:0,fadeOutTicks:6,spectrum:[100,0,0,0,0,0,0,71,0,0,0,57,0,0,57,0,43,0,43,0,0,29,0,29,0,14,14,14,0,43],unison:"none",envelopes:[{target:"noteFilterAllFreqs",envelope:"rise -2"}]}},{name:"Creak 2",midiProgram:100,settings:{type:"spectrum",eqFilter:[{type:"low-pass",cutoffHz:4e3,linearGain:1.4142},{type:"high-pass",cutoffHz:210.22,linearGain:.7071}],eqFilterType:!1,eqSimpleCut:10,eqSimplePeak:0,envelopeSpeed:12,discreteEnvelope:!1,eqSubFilters0:[{type:"low-pass",cutoffHz:4e3,linearGain:1.4142},{type:"high-pass",cutoffHz:210.22,linearGain:.7071}],effects:["transition type","chord type","pitch shift","detune","note filter","distortion","bitcrusher","chorus","echo","reverb"],transition:"slide",clicklessTransition:!1,chord:"simultaneous",fastTwoNoteArp:!0,arpeggioSpeed:12,pitchShiftSemitones:12,detuneCents:-16,noteFilterType:!1,noteSimpleCut:10,noteSimplePeak:0,noteFilter:[{type:"low-pass",cutoffHz:11313.71,linearGain:5.6569},{type:"peak",cutoffHz:2828.43,linearGain:.3536},{type:"high-pass",cutoffHz:500,linearGain:1}],noteSubFilters0:[{type:"low-pass",cutoffHz:11313.71,linearGain:5.6569},{type:"peak",cutoffHz:2828.43,linearGain:.3536},{type:"high-pass",cutoffHz:500,linearGain:1}],distortion:29,aliases:!1,bitcrusherOctave:1.5,bitcrusherQuantization:57,panDelay:10,chorus:57,echoSustain:100,echoDelayBeats:1.333,reverb:87,fadeInSeconds:0,fadeOutTicks:6,spectrum:[100,0,0,0,0,0,0,71,0,0,0,57,0,0,57,0,43,0,43,0,0,29,0,29,0,14,14,14,0,43],unison:"none",envelopes:[{target:"noteFilterAllFreqs",envelope:"rise -2"}]}},{name:"Creak_Arp 2",midiProgram:100,settings:{type:"spectrum",eqFilter:[{type:"low-pass",cutoffHz:4e3,linearGain:1.4142},{type:"high-pass",cutoffHz:210.22,linearGain:.7071}],eqFilterType:!1,eqSimpleCut:10,eqSimplePeak:0,envelopeSpeed:12,discreteEnvelope:!1,eqSubFilters0:[{type:"low-pass",cutoffHz:4e3,linearGain:1.4142},{type:"high-pass",cutoffHz:210.22,linearGain:.7071}],effects:["transition type","chord type","pitch shift","detune","note filter","distortion","bitcrusher","chorus","echo","reverb"],transition:"slide",clicklessTransition:!1,chord:"arpeggio",fastTwoNoteArp:!0,arpeggioSpeed:12,pitchShiftSemitones:12,detuneCents:-16,noteFilterType:!1,noteSimpleCut:10,noteSimplePeak:0,noteFilter:[{type:"low-pass",cutoffHz:11313.71,linearGain:5.6569},{type:"peak",cutoffHz:2828.43,linearGain:.3536},{type:"high-pass",cutoffHz:500,linearGain:1}],noteSubFilters0:[{type:"low-pass",cutoffHz:11313.71,linearGain:5.6569},{type:"peak",cutoffHz:2828.43,linearGain:.3536},{type:"high-pass",cutoffHz:500,linearGain:1}],distortion:29,aliases:!1,bitcrusherOctave:1.5,bitcrusherQuantization:57,panDelay:10,chorus:57,echoSustain:100,echoDelayBeats:1.333,reverb:87,fadeInSeconds:0,fadeOutTicks:6,spectrum:[100,0,0,0,0,0,0,71,0,0,0,57,0,0,57,0,43,0,43,0,0,29,0,29,0,14,14,14,0,43],unison:"none",envelopes:[{target:"noteFilterAllFreqs",envelope:"rise -2"}]}},{name:"Distant",midiProgram:103,settings:{type:"spectrum",eqFilter:[{type:"low-pass",cutoffHz:1681.79,linearGain:1},{type:"high-pass",cutoffHz:210.22,linearGain:.7071}],eqFilterType:!1,eqSimpleCut:10,eqSimplePeak:0,envelopeSpeed:12,discreteEnvelope:!1,eqSubFilters0:[{type:"low-pass",cutoffHz:1681.79,linearGain:1},{type:"high-pass",cutoffHz:210.22,linearGain:.7071}],effects:["transition type","chord type","pitch shift","detune","note filter","distortion","bitcrusher","chorus","echo","reverb"],transition:"slide",clicklessTransition:!1,chord:"simultaneous",fastTwoNoteArp:!1,arpeggioSpeed:12,pitchShiftSemitones:24,detuneCents:0,noteFilterType:!1,noteSimpleCut:10,noteSimplePeak:0,noteFilter:[{type:"low-pass",cutoffHz:11313.71,linearGain:5.6569},{type:"peak",cutoffHz:2828.43,linearGain:.3536},{type:"high-pass",cutoffHz:500,linearGain:1}],noteSubFilters0:[{type:"low-pass",cutoffHz:11313.71,linearGain:5.6569},{type:"peak",cutoffHz:2828.43,linearGain:.3536},{type:"high-pass",cutoffHz:500,linearGain:1}],distortion:14,aliases:!1,bitcrusherOctave:3,bitcrusherQuantization:0,panDelay:10,chorus:29,echoSustain:71,echoDelayBeats:1,reverb:10,fadeInSeconds:0,fadeOutTicks:6,spectrum:[100,0,0,0,0,0,0,71,0,0,0,57,0,0,57,0,43,0,43,0,0,29,0,29,0,14,14,14,0,43],unison:"none",envelopes:[{target:"noteFilterAllFreqs",envelope:"rise -2"}]}},{name:"Shimmer",midiProgram:103,settings:{type:"FM",eqFilter:[],eqFilterType:!1,eqSimpleCut:10,eqSimplePeak:0,envelopeSpeed:12,discreteEnvelope:!1,eqSubFilters0:[],effects:["transition type","pitch shift","note filter","bitcrusher","chorus","echo","reverb"],transition:"normal",clicklessTransition:!1,pitchShiftSemitones:24,noteFilterType:!1,noteSimpleCut:10,noteSimplePeak:0,noteFilter:[{type:"low-pass",cutoffHz:2378.41,linearGain:.5}],noteSubFilters0:[{type:"low-pass",cutoffHz:2378.41,linearGain:.5}],bitcrusherOctave:3,bitcrusherQuantization:43,panDelay:10,chorus:71,echoSustain:57,echoDelayBeats:1.5,reverb:48,fadeInSeconds:0,fadeOutTicks:-1,algorithm:"1←(2 3←4)",feedbackType:"1⟲",feedbackAmplitude:0,operators:[{frequency:"1×",amplitude:15,waveform:"triangle",pulseWidth:5},{frequency:"1×",amplitude:0,waveform:"sine",pulseWidth:5},{frequency:"1×",amplitude:0,waveform:"sine",pulseWidth:5},{frequency:"~2×",amplitude:0,waveform:"sine",pulseWidth:5},{frequency:"1×",amplitude:0,waveform:"sine",pulseWidth:5},{frequency:"1×",amplitude:0,waveform:"sine",pulseWidth:5}],envelopes:[{target:"noteFilterFreq",envelope:"wibble 2",index:0}]}}])},{name:"Synth-Pluck",presets:S([{name:"Pluck 1",generalMidi:!1,settings:{type:"spectrum",eqFilter:[],eqFilterType:!1,eqSimpleCut:10,eqSimplePeak:0,envelopeSpeed:12,discreteEnvelope:!1,eqSubFilters0:[],eqSubFilters1:[],effects:["detune","note filter","bitcrusher","chorus","echo"],detuneCents:0,noteFilterType:!1,noteSimpleCut:10,noteSimplePeak:0,noteFilter:[],noteSubFilters0:[],bitcrusherOctave:4,bitcrusherQuantization:0,panDelay:10,chorus:14,echoSustain:71,echoDelayBeats:1,fadeInSeconds:0,fadeOutTicks:-1,spectrum:[100,0,0,0,0,0,0,100,0,0,0,0,0,0,100,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],unison:"none",envelopes:[{target:"noteVolume",envelope:"twang 1"}]}},{name:"Pluck 2",generalMidi:!1,settings:{type:"FM",eqFilter:[{type:"low-pass",cutoffHz:11313.71,linearGain:.1768},{type:"peak",cutoffHz:500,linearGain:.25},{type:"peak",cutoffHz:1681.79,linearGain:4}],eqFilterType:!1,eqSimpleCut:10,eqSimplePeak:0,envelopeSpeed:12,discreteEnvelope:!1,eqSubFilters0:[{type:"low-pass",cutoffHz:11313.71,linearGain:.1768},{type:"peak",cutoffHz:500,linearGain:.25},{type:"peak",cutoffHz:1681.79,linearGain:4}],effects:["chord type","detune","note filter","distortion","bitcrusher","chorus","echo","reverb"],chord:"strum",fastTwoNoteArp:!1,arpeggioSpeed:12,detuneCents:0,noteFilterType:!1,noteSimpleCut:10,noteSimplePeak:0,noteFilter:[{type:"low-pass",cutoffHz:5656.85,linearGain:11.3137}],noteSubFilters0:[{type:"low-pass",cutoffHz:5656.85,linearGain:11.3137}],distortion:0,aliases:!1,bitcrusherOctave:6.5,bitcrusherQuantization:29,panDelay:10,chorus:43,echoSustain:43,echoDelayBeats:1,reverb:100,fadeInSeconds:0,fadeOutTicks:-1,algorithm:"1←2←(3 4)",feedbackType:"1⟲ 2⟲",feedbackAmplitude:0,operators:[{frequency:"1×",amplitude:15,waveform:"sine",pulseWidth:5},{frequency:"2×",amplitude:15,waveform:"sine",pulseWidth:5},{frequency:"1×",amplitude:0,waveform:"sine",pulseWidth:5},{frequency:"1×",amplitude:0,waveform:"sine",pulseWidth:5},{frequency:"1×",amplitude:0,waveform:"sine",pulseWidth:5},{frequency:"1×",amplitude:0,waveform:"sine",pulseWidth:5}],envelopes:[{target:"noteFilterAllFreqs",envelope:"twang -1"},{target:"noteVolume",envelope:"twang -1"}]}},{name:"Pluck 3",generalMidi:!1,settings:{type:"FM",eqFilter:[],eqFilterType:!1,eqSimpleCut:10,eqSimplePeak:0,envelopeSpeed:12,discreteEnvelope:!1,eqSubFilters0:[],effects:["transition type","pitch shift","bitcrusher","chorus","echo","reverb"],transition:"normal",clicklessTransition:!1,pitchShiftSemitones:24,bitcrusherOctave:3,bitcrusherQuantization:43,panDelay:10,chorus:71,echoSustain:57,echoDelayBeats:1.5,reverb:48,fadeInSeconds:0,fadeOutTicks:-1,algorithm:"1←(2 3←4)",feedbackType:"1⟲",feedbackAmplitude:0,operators:[{frequency:"1×",amplitude:15,waveform:"triangle",pulseWidth:5},{frequency:"1×",amplitude:10,waveform:"sine",pulseWidth:5},{frequency:"1×",amplitude:0,waveform:"sine",pulseWidth:5},{frequency:"~2×",amplitude:0,waveform:"sine",pulseWidth:5},{frequency:"1×",amplitude:0,waveform:"sine",pulseWidth:5},{frequency:"1×",amplitude:0,waveform:"sine",pulseWidth:5}],envelopes:[{target:"operatorAmplitude",envelope:"twang -1",index:1},{target:"operatorAmplitude",envelope:"twang 1",index:0}]}},{name:"Pluck 4",generalMidi:!1,settings:{type:"Picked String",eqFilter:[],eqFilterType:!1,eqSimpleCut:10,eqSimplePeak:0,envelopeSpeed:12,discreteEnvelope:!1,eqSubFilters0:[],effects:["transition type","echo"],transition:"interrupt",clicklessTransition:!1,panDelay:10,echoSustain:57,echoDelayBeats:.333,fadeInSeconds:0,fadeOutTicks:-1,harmonics:[100,100,100,100,71,0,57,100,57,0,29,0,29,0,43,43,43,0,0,0,0,43,43,43,29,14,0,0],unison:"fluctuate",stringSustain:21,envelopes:[]}},{name:"Pluck 5",generalMidi:!1,settings:{type:"chip",eqFilter:[{type:"low-pass",cutoffHz:5656.85,linearGain:11.3137},{type:"high-pass",cutoffHz:210.22,linearGain:8},{type:"peak",cutoffHz:1189.21,linearGain:11.3137},{type:"peak",cutoffHz:2378.41,linearGain:.0884},{type:"peak",cutoffHz:594.6,linearGain:.0884}],eqFilterType:!1,eqSimpleCut:10,eqSimplePeak:0,envelopeSpeed:12,discreteEnvelope:!1,eqSubFilters0:[{type:"low-pass",cutoffHz:5656.85,linearGain:11.3137},{type:"high-pass",cutoffHz:210.22,linearGain:8},{type:"peak",cutoffHz:1189.21,linearGain:11.3137},{type:"peak",cutoffHz:2378.41,linearGain:.0884},{type:"peak",cutoffHz:594.6,linearGain:.0884}],effects:["transition type","echo"],transition:"interrupt",clicklessTransition:!1,panDelay:10,echoSustain:71,echoDelayBeats:1,fadeInSeconds:0,fadeOutTicks:12,wave:"Sync Buzzer Test",unison:"none",isUsingAdvancedLoopControls:!1,chipWaveLoopStart:0,chipWaveLoopEnd:64,chipWaveLoopMode:0,chipWavePlayBackwards:!1,chipWaveStartOffset:0,envelopes:[]}},{name:"Pluck 6",generalMidi:!1,settings:{type:"FM",eqFilter:[{type:"low-pass",cutoffHz:2828.43,linearGain:11.3137}],eqFilterType:!1,eqSimpleCut:10,eqSimplePeak:0,envelopeSpeed:12,discreteEnvelope:!1,eqSubFilters0:[{type:"low-pass",cutoffHz:2828.43,linearGain:11.3137}],effects:["transition type","distortion","bitcrusher","chorus","echo","reverb"],transition:"interrupt",clicklessTransition:!1,distortion:14,aliases:!1,bitcrusherOctave:3,bitcrusherQuantization:29,panDelay:10,chorus:29,echoSustain:43,echoDelayBeats:1,reverb:16,fadeInSeconds:0,fadeOutTicks:-1,algorithm:"1 2 3 4",feedbackType:"1→2→3→4",feedbackAmplitude:4,operators:[{frequency:"2×",amplitude:10,waveform:"trapezoid",pulseWidth:5},{frequency:"1×",amplitude:10,waveform:"trapezoid",pulseWidth:5},{frequency:"0.5×",amplitude:13,waveform:"trapezoid",pulseWidth:5},{frequency:"0.25×",amplitude:10,waveform:"trapezoid",pulseWidth:5},{frequency:"1×",amplitude:0,waveform:"sine",pulseWidth:5},{frequency:"1×",amplitude:0,waveform:"sine",pulseWidth:5}],envelopes:[{target:"noteVolume",envelope:"twang -1"},{target:"operatorAmplitude",envelope:"flare 1",index:0}]}},{name:"Pluck 7",generalMidi:!1,settings:{type:"FM",eqFilter:[],eqFilterType:!1,eqSimpleCut:10,eqSimplePeak:0,envelopeSpeed:12,discreteEnvelope:!1,eqSubFilters0:[],effects:["transition type"],transition:"interrupt",clicklessTransition:!1,panDelay:10,fadeInSeconds:0,fadeOutTicks:96,algorithm:"1 2 3 4",feedbackType:"1→2→3→4",feedbackAmplitude:3,operators:[{frequency:"1×",amplitude:15,waveform:"sine",pulseWidth:5},{frequency:"0.5×",amplitude:12,waveform:"sine",pulseWidth:5},{frequency:"0.25×",amplitude:9,waveform:"sine",pulseWidth:5},{frequency:"0.12×",amplitude:7,waveform:"sine",pulseWidth:5},{frequency:"1×",amplitude:0,waveform:"sine",pulseWidth:5},{frequency:"1×",amplitude:0,waveform:"sine",pulseWidth:5}],envelopes:[{target:"noteVolume",envelope:"twang -1"}]}},{name:"Pluck 8",generalMidi:!1,settings:{type:"spectrum",eqFilter:[],eqFilterType:!1,eqSimpleCut:10,eqSimplePeak:0,envelopeSpeed:12,discreteEnvelope:!1,eqSubFilters0:[],eqSubFilters1:[],effects:["detune","note filter","bitcrusher","chorus","echo"],detuneCents:0,noteFilterType:!1,noteSimpleCut:10,noteSimplePeak:0,noteFilter:[],noteSubFilters0:[],bitcrusherOctave:4,bitcrusherQuantization:0,panDelay:10,chorus:14,echoSustain:71,echoDelayBeats:1.75,fadeInSeconds:0,fadeOutTicks:-1,spectrum:[100,0,0,0,57,0,0,100,0,0,0,86,0,0,100,0,0,0,0,0,0,0,0,0,0,0,0,0,0,29],unison:"dirty",envelopes:[{target:"noteVolume",envelope:"twang 1"}]}},{name:"Pluck_Dist68",generalMidi:!1,settings:{type:"Picked String",eqFilter:[],eqFilterType:!1,eqSimpleCut:10,eqSimplePeak:0,envelopeSpeed:9,discreteEnvelope:!1,eqSubFilters0:[],effects:["note filter","distortion","chorus","echo"],noteFilterType:!1,noteSimpleCut:10,noteSimplePeak:0,noteFilter:[{type:"low-pass",cutoffHz:19027.31,linearGain:.5}],noteSubFilters0:[{type:"low-pass",cutoffHz:19027.31,linearGain:.5}],distortion:71,aliases:!1,panDelay:10,chorus:29,echoSustain:43,echoDelayBeats:.75,fadeInSeconds:0,fadeOutTicks:-1,harmonics:[100,0,100,0,100,0,100,0,100,0,100,0,100,0,100,0,100,0,100,0,100,0,100,0,100,0,100,0],unison:"none",stringSustain:57,envelopes:[{target:"stringSustain",envelope:"tremolo3"},{target:"noteFilterFreq",envelope:"twang -1",index:0}]}},{name:"Pluck_Harp68",generalMidi:!1,settings:{type:"chip",eqFilter:[{type:"high-pass",cutoffHz:176.78,linearGain:.3536},{type:"peak",cutoffHz:4e3,linearGain:.3536},{type:"peak",cutoffHz:707.11,linearGain:.3536},{type:"peak",cutoffHz:2e3,linearGain:1.4142}],eqFilterType:!1,eqSimpleCut:10,eqSimplePeak:0,envelopeSpeed:12,discreteEnvelope:!1,eqSubFilters0:[{type:"high-pass",cutoffHz:176.78,linearGain:.3536},{type:"peak",cutoffHz:4e3,linearGain:.3536},{type:"peak",cutoffHz:707.11,linearGain:.3536},{type:"peak",cutoffHz:2e3,linearGain:1.4142}],effects:["detune","vibrato","note filter","chorus","reverb"],detuneCents:200,vibrato:"custom",vibratoDepth:.12,vibratoDelay:1,vibratoSpeed:1,vibratoType:0,noteFilterType:!1,noteSimpleCut:10,noteSimplePeak:0,noteFilter:[{type:"low-pass",cutoffHz:16e3,linearGain:.5}],noteSubFilters0:[{type:"low-pass",cutoffHz:16e3,linearGain:.5}],panDelay:10,chorus:43,reverb:61,fadeInSeconds:.0263,fadeOutTicks:96,wave:"rounded",unison:"custom",unisonVoices:2,unisonSpread:6,unisonOffset:16,unisonExpression:1,unisonSign:-1,isUsingAdvancedLoopControls:!1,chipWaveLoopStart:0,chipWaveLoopEnd:64,chipWaveLoopMode:0,chipWavePlayBackwards:!1,chipWaveStartOffset:0,envelopes:[{target:"noteFilterFreq",envelope:"flare 1",index:0},{target:"noteVolume",envelope:"twang 2"}]}}])},{name:"Synth-Perc",presets:S([{name:"Cowbell68",generalMidi:!1,settings:{type:"harmonics",eqFilter:[{type:"peak",cutoffHz:250,linearGain:11.3137},{type:"peak",cutoffHz:2378.41,linearGain:5.6569},{type:"low-pass",cutoffHz:13454.34,linearGain:.7071},{type:"high-pass",cutoffHz:125,linearGain:.7071}],eqFilterType:!1,eqSimpleCut:10,eqSimplePeak:0,envelopeSpeed:12,discreteEnvelope:!1,eqSubFilters0:[{type:"peak",cutoffHz:250,linearGain:11.3137},{type:"peak",cutoffHz:2378.41,linearGain:5.6569},{type:"low-pass",cutoffHz:13454.34,linearGain:.7071},{type:"high-pass",cutoffHz:125,linearGain:.7071}],effects:["detune","distortion"],detuneCents:-32,distortion:29,aliases:!1,panDelay:10,fadeInSeconds:0,fadeOutTicks:48,harmonics:[57,71,86,43,0,100,0,29,0,0,0,57,0,0,0,57,0,43,0,0,0,57,0,43,0,0,0,0],unison:"stationary",envelopes:[{target:"noteVolume",envelope:"twang 1"}]}},{name:"Kick68_p1",generalMidi:!1,settings:{type:"FM",eqFilter:[{type:"peak",cutoffHz:125,linearGain:2},{type:"peak",cutoffHz:420.45,linearGain:.1768},{type:"peak",cutoffHz:1e3,linearGain:.1768}],eqFilterType:!1,eqSimpleCut:10,eqSimplePeak:0,envelopeSpeed:12,discreteEnvelope:!1,eqSubFilters0:[{type:"peak",cutoffHz:125,linearGain:2},{type:"peak",cutoffHz:420.45,linearGain:.1768},{type:"peak",cutoffHz:1e3,linearGain:.1768}],effects:["pitch shift","distortion","bitcrusher"],pitchShiftSemitones:7,distortion:14,aliases:!1,bitcrusherOctave:5.5,bitcrusherQuantization:14,panDelay:10,fadeInSeconds:0,fadeOutTicks:-12,algorithm:"1←(2 3 4)",feedbackType:"1⟲",feedbackAmplitude:2,operators:[{frequency:"8×",amplitude:15,waveform:"sine",pulseWidth:5},{frequency:"1×",amplitude:0,waveform:"sine",pulseWidth:5},{frequency:"1×",amplitude:0,waveform:"sine",pulseWidth:5},{frequency:"1×",amplitude:0,waveform:"sine",pulseWidth:5},{frequency:"1×",amplitude:0,waveform:"sine",pulseWidth:5},{frequency:"1×",amplitude:0,waveform:"sine",pulseWidth:5}],envelopes:[{target:"operatorFrequency",envelope:"twang 1",index:0},{target:"noteVolume",envelope:"twang 2"},{target:"pitchShift",envelope:"twang 1"}]}},{name:"Kick68_p2",generalMidi:!1,settings:{type:"FM",eqFilter:[{type:"low-pass",cutoffHz:19027.31,linearGain:.25}],eqFilterType:!1,eqSimpleCut:10,eqSimplePeak:0,envelopeSpeed:12,discreteEnvelope:!1,eqSubFilters0:[{type:"low-pass",cutoffHz:19027.31,linearGain:.25}],effects:["pitch shift","distortion"],pitchShiftSemitones:24,distortion:29,aliases:!1,panDelay:10,fadeInSeconds:0,fadeOutTicks:-1,algorithm:"1←(2 3 4)",feedbackType:"ALL",feedbackAmplitude:15,operators:[{frequency:"8×",amplitude:15,waveform:"sine",pulseWidth:5},{frequency:"9×",amplitude:15,waveform:"sine",pulseWidth:5},{frequency:"9×",amplitude:15,waveform:"sine",pulseWidth:5},{frequency:"8×",amplitude:15,waveform:"sine",pulseWidth:5},{frequency:"1×",amplitude:0,waveform:"sine",pulseWidth:5},{frequency:"1×",amplitude:0,waveform:"sine",pulseWidth:5}],envelopes:[{target:"operatorFrequency",envelope:"twang 1",index:0},{target:"noteVolume",envelope:"punch"},{target:"noteVolume",envelope:"twang -1"},{target:"noteVolume",envelope:"twang -1"},{target:"noteVolume",envelope:"twang -1"}]}}])},{name:"Crunchy",presets:S([{name:"Crunch 1",generalMidi:!1,settings:{type:"Picked String",eqFilter:[{type:"low-pass",cutoffHz:5656.85,linearGain:.7071},{type:"high-pass",cutoffHz:420.45,linearGain:.25},{type:"peak",cutoffHz:105.11,linearGain:.0884}],eqFilterType:!1,eqSimpleCut:10,eqSimplePeak:0,envelopeSpeed:12,discreteEnvelope:!1,eqSubFilters0:[{type:"low-pass",cutoffHz:5656.85,linearGain:.7071},{type:"high-pass",cutoffHz:420.45,linearGain:.25},{type:"peak",cutoffHz:105.11,linearGain:.0884}],effects:["transition type","chord type","pitch shift","vibrato","note filter","bitcrusher","echo","reverb"],transition:"interrupt",clicklessTransition:!1,chord:"simultaneous",fastTwoNoteArp:!1,arpeggioSpeed:12,pitchShiftSemitones:24,vibrato:"none",vibratoDepth:0,vibratoDelay:0,vibratoSpeed:10,vibratoType:0,noteFilterType:!1,noteSimpleCut:10,noteSimplePeak:0,noteFilter:[{type:"low-pass",cutoffHz:8e3,linearGain:2.8284}],noteSubFilters0:[{type:"low-pass",cutoffHz:8e3,linearGain:2.8284}],bitcrusherOctave:6.5,bitcrusherQuantization:57,panDelay:10,echoSustain:71,echoDelayBeats:.5,reverb:3,fadeInSeconds:.1575,fadeOutTicks:-1,harmonics:[14,71,71,86,0,100,71,0,0,71,43,0,43,0,100,100,71,0,86,86,100,0,0,0,0,0,0,0],unison:"dirty",stringSustain:71,envelopes:[]}},{name:"Crunch 2",generalMidi:!1,settings:{type:"Picked String",eqFilter:[{type:"low-pass",cutoffHz:5656.85,linearGain:.7071},{type:"high-pass",cutoffHz:420.45,linearGain:.25},{type:"peak",cutoffHz:105.11,linearGain:.0884}],eqFilterType:!1,eqSimpleCut:10,eqSimplePeak:0,envelopeSpeed:12,discreteEnvelope:!1,eqSubFilters0:[{type:"low-pass",cutoffHz:5656.85,linearGain:.7071},{type:"high-pass",cutoffHz:420.45,linearGain:.25},{type:"peak",cutoffHz:105.11,linearGain:.0884}],effects:["transition type","chord type","pitch shift","vibrato","note filter","bitcrusher","echo","reverb"],transition:"interrupt",clicklessTransition:!1,chord:"arpeggio",fastTwoNoteArp:!1,arpeggioSpeed:1,pitchShiftSemitones:24,vibrato:"shaky",vibratoDepth:.1,vibratoDelay:0,vibratoSpeed:10,vibratoType:1,noteFilterType:!1,noteSimpleCut:10,noteSimplePeak:0,noteFilter:[{type:"low-pass",cutoffHz:8e3,linearGain:2.8284}],noteSubFilters0:[{type:"low-pass",cutoffHz:8e3,linearGain:2.8284}],bitcrusherOctave:1.5,bitcrusherQuantization:57,panDelay:10,echoSustain:71,echoDelayBeats:.5,reverb:32,fadeInSeconds:.1575,fadeOutTicks:-1,harmonics:[14,71,71,86,0,100,71,0,0,71,43,0,43,0,100,100,71,0,86,86,100,0,0,0,0,0,0,0],unison:"dirty",stringSustain:71,envelopes:[{target:"noteFilterAllFreqs",envelope:"wibble-1"}]}}])},{name:"Distortion",presets:S([{name:"Signal",generalMidi:!1,settings:{type:"spectrum",eqFilter:[],eqFilterType:!1,eqSimpleCut:10,eqSimplePeak:0,envelopeSpeed:12,discreteEnvelope:!1,eqSubFilters0:[],effects:["transition type","pitch shift","distortion","bitcrusher","reverb"],transition:"normal",clicklessTransition:!1,pitchShiftSemitones:0,distortion:71,aliases:!1,bitcrusherOctave:3.5,bitcrusherQuantization:43,reverb:81,fadeInSeconds:0,fadeOutTicks:96,spectrum:[0,0,0,0,0,0,0,100,71,71,71,71,71,71,100,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],unison:"none",envelopes:[]}},{name:"Broken",generalMidi:!1,settings:{type:"FM",eqFilter:[{type:"low-pass",cutoffHz:6727.17,linearGain:.7071}],eqFilterType:!1,eqSimpleCut:10,eqSimplePeak:0,envelopeSpeed:12,discreteEnvelope:!1,eqSubFilters0:[{type:"low-pass",cutoffHz:6727.17,linearGain:.7071}],effects:["transition type","chord type","pitch shift","detune","vibrato","note filter","distortion","bitcrusher","chorus","echo","reverb"],transition:"interrupt",clicklessTransition:!1,chord:"arpeggio",fastTwoNoteArp:!1,arpeggioSpeed:7,pitchShiftSemitones:24,detuneCents:-200,vibrato:"custom",vibratoDepth:.08,vibratoDelay:26,vibratoSpeed:1,vibratoType:0,noteFilterType:!1,noteSimpleCut:10,noteSimplePeak:0,noteFilter:[{type:"low-pass",cutoffHz:6727.17,linearGain:11.3137},{type:"peak",cutoffHz:4e3,linearGain:11.3137},{type:"peak",cutoffHz:5656.85,linearGain:8},{type:"peak",cutoffHz:2828.43,linearGain:11.3137},{type:"high-pass",cutoffHz:74.33,linearGain:2}],noteSubFilters0:[{type:"low-pass",cutoffHz:6727.17,linearGain:11.3137},{type:"peak",cutoffHz:4e3,linearGain:11.3137},{type:"peak",cutoffHz:5656.85,linearGain:8},{type:"peak",cutoffHz:2828.43,linearGain:11.3137},{type:"high-pass",cutoffHz:74.33,linearGain:2}],noteSubFilters1:[{type:"low-pass",cutoffHz:8e3,linearGain:11.3137}],distortion:86,aliases:!1,bitcrusherOctave:1.5,bitcrusherQuantization:29,panDelay:10,chorus:29,echoSustain:43,echoDelayBeats:.667,reverb:58,fadeInSeconds:0,fadeOutTicks:96,algorithm:"1←(2 3←4)",feedbackType:"1⟲ 2⟲",feedbackAmplitude:2,operators:[{frequency:"~1×",amplitude:15,waveform:"sine",pulseWidth:5},{frequency:"8×",amplitude:2,waveform:"sine",pulseWidth:5},{frequency:"20×",amplitude:2,waveform:"sine",pulseWidth:5},{frequency:"1×",amplitude:3,waveform:"sine",pulseWidth:5},{frequency:"1×",amplitude:0,waveform:"sine",pulseWidth:5},{frequency:"1×",amplitude:0,waveform:"sine",pulseWidth:5}],envelopes:[{target:"noteFilterAllFreqs",envelope:"twang 2"},{target:"operatorAmplitude",envelope:"twang 3",index:2},{target:"operatorAmplitude",envelope:"twang 1",index:1}]}},{name:"Siren",generalMidi:!1,settings:{type:"FM",eqFilter:[{type:"low-pass",cutoffHz:6727.17,linearGain:.7071}],eqFilterType:!1,eqSimpleCut:10,eqSimplePeak:0,envelopeSpeed:12,discreteEnvelope:!1,eqSubFilters0:[{type:"low-pass",cutoffHz:6727.17,linearGain:.7071}],effects:["transition type","chord type","detune","vibrato","note filter","distortion","bitcrusher","chorus","echo"],transition:"normal",clicklessTransition:!1,chord:"strum",fastTwoNoteArp:!1,arpeggioSpeed:12,detuneCents:0,vibrato:"custom",vibratoDepth:.08,vibratoDelay:26,vibratoSpeed:1,vibratoType:0,noteFilterType:!0,noteSimpleCut:10,noteSimplePeak:0,noteFilter:[{type:"low-pass",cutoffHz:19027.31,linearGain:.7071}],noteSubFilters1:[{type:"low-pass",cutoffHz:19027.31,linearGain:.7071}],distortion:29,aliases:!1,bitcrusherOctave:2.5,bitcrusherQuantization:57,panDelay:10,chorus:29,echoSustain:71,echoDelayBeats:1,fadeInSeconds:0,fadeOutTicks:-1,algorithm:"(1 2)←(3 4)",feedbackType:"1⟲ 2⟲",feedbackAmplitude:0,operators:[{frequency:"~1×",amplitude:13,waveform:"sine",pulseWidth:5},{frequency:"8×",amplitude:8,waveform:"sine",pulseWidth:5},{frequency:"20×",amplitude:3,waveform:"sine",pulseWidth:5},{frequency:"1×",amplitude:1,waveform:"sine",pulseWidth:5},{frequency:"1×",amplitude:0,waveform:"sine",pulseWidth:5},{frequency:"1×",amplitude:0,waveform:"sine",pulseWidth:5}],envelopes:[{target:"noteFilterAllFreqs",envelope:"twang 2"},{target:"operatorAmplitude",envelope:"twang 3",index:2},{target:"operatorAmplitude",envelope:"twang 1",index:1}]}},{name:"Dist_Pulse 1",generalMidi:!1,settings:{type:"PWM",eqFilter:[],eqFilterType:!1,eqSimpleCut:10,eqSimplePeak:0,envelopeSpeed:12,discreteEnvelope:!1,eqSubFilters0:[],effects:["transition type","detune","vibrato","bitcrusher","echo"],transition:"interrupt",clicklessTransition:!1,detuneCents:0,vibrato:"custom",vibratoDepth:.08,vibratoDelay:24,vibratoSpeed:10,vibratoType:0,bitcrusherOctave:3,bitcrusherQuantization:43,panDelay:10,echoSustain:57,echoDelayBeats:1.5,fadeInSeconds:0,fadeOutTicks:-1,pulseWidth:12,decimalOffset:0,unison:"none",envelopes:[]}},{name:"Dist_Pulse 2",generalMidi:!1,settings:{type:"PWM",eqFilter:[],eqFilterType:!1,eqSimpleCut:10,eqSimplePeak:0,envelopeSpeed:12,discreteEnvelope:!1,eqSubFilters0:[],effects:["transition type","chord type","detune","bitcrusher"],transition:"interrupt",clicklessTransition:!1,chord:"simultaneous",fastTwoNoteArp:!1,arpeggioSpeed:12,detuneCents:0,bitcrusherOctave:4.5,bitcrusherQuantization:14,panDelay:10,fadeInSeconds:0,fadeOutTicks:-1,pulseWidth:25,decimalOffset:0,unison:"none",envelopes:[]}},{name:"Forest_p1",generalMidi:!1,settings:{type:"FM6op",eqFilter:[{type:"high-pass",cutoffHz:148.65,linearGain:1}],eqFilterType:!1,eqSimpleCut:10,eqSimplePeak:0,envelopeSpeed:12,discreteEnvelope:!1,eqSubFilters0:[{type:"high-pass",cutoffHz:148.65,linearGain:1}],effects:["transition type","note filter","distortion","chorus"],transition:"normal",clicklessTransition:!1,noteFilterType:!1,noteSimpleCut:10,noteSimplePeak:0,noteFilter:[],noteSubFilters0:[],distortion:100,aliases:!1,panDelay:10,chorus:29,fadeInSeconds:0,fadeOutTicks:-1,algorithm:"1←2←3←4←5←6",feedbackType:"1↔4 2↔5 3↔6",feedbackAmplitude:11,operators:[{frequency:"1×",amplitude:15,waveform:"sine",pulseWidth:5},{frequency:"2×",amplitude:4,waveform:"sine",pulseWidth:5},{frequency:"4×",amplitude:5,waveform:"sine",pulseWidth:5},{frequency:"1×",amplitude:2,waveform:"sine",pulseWidth:5},{frequency:"4×",amplitude:0,waveform:"sine",pulseWidth:5},{frequency:"1×",amplitude:0,waveform:"sine",pulseWidth:5}],envelopes:[]}},{name:"Forest_p2",generalMidi:!1,settings:{type:"FM6op",eqFilter:[{type:"high-pass",cutoffHz:148.65,linearGain:1}],eqFilterType:!1,eqSimpleCut:10,eqSimplePeak:0,envelopeSpeed:12,discreteEnvelope:!1,eqSubFilters0:[{type:"high-pass",cutoffHz:148.65,linearGain:1}],effects:["transition type","echo","reverb"],transition:"normal",clicklessTransition:!1,panDelay:10,echoSustain:57,echoDelayBeats:2,reverb:19,fadeInSeconds:0,fadeOutTicks:-1,algorithm:"1←3 2←(4 5)←6",feedbackType:"Custom",feedbackAmplitude:6,customFeedback:{mods:[[1],[4],[],[],[],[]]},operators:[{frequency:"1×",amplitude:15,waveform:"triangle",pulseWidth:5},{frequency:"2×",amplitude:4,waveform:"trapezoid",pulseWidth:5},{frequency:"2×",amplitude:1,waveform:"trapezoid",pulseWidth:5},{frequency:"~1×",amplitude:2,waveform:"sine",pulseWidth:5},{frequency:"8×",amplitude:5,waveform:"sine",pulseWidth:5},{frequency:"1×",amplitude:0,waveform:"sine",pulseWidth:5}],envelopes:[]}}])},{name:"Guitar",presets:S([{name:"Guitar 1",generalMidi:!1,settings:{type:"FM",eqFilter:[{type:"low-pass",cutoffHz:2828.43,linearGain:11.3137}],eqFilterType:!1,eqSimpleCut:10,eqSimplePeak:0,envelopeSpeed:12,discreteEnvelope:!1,eqSubFilters0:[{type:"low-pass",cutoffHz:2828.43,linearGain:11.3137}],effects:["transition type","pitch shift","note filter","distortion","bitcrusher","chorus","echo","reverb"],transition:"interrupt",clicklessTransition:!1,pitchShiftSemitones:36,noteFilterType:!1,noteSimpleCut:10,noteSimplePeak:0,noteFilter:[{type:"low-pass",cutoffHz:2378.41,linearGain:.5}],noteSubFilters0:[{type:"low-pass",cutoffHz:2378.41,linearGain:.5}],distortion:71,aliases:!1,bitcrusherOctave:3.5,bitcrusherQuantization:43,panDelay:10,chorus:14,echoSustain:43,echoDelayBeats:1,reverb:0,fadeInSeconds:0,fadeOutTicks:-1,algorithm:"1 2 3 4",feedbackType:"1⟲",feedbackAmplitude:0,operators:[{frequency:"2×",amplitude:10,waveform:"trapezoid",pulseWidth:5},{frequency:"1×",amplitude:10,waveform:"trapezoid",pulseWidth:5},{frequency:"0.5×",amplitude:13,waveform:"trapezoid",pulseWidth:5},{frequency:"0.25×",amplitude:10,waveform:"trapezoid",pulseWidth:5},{frequency:"1×",amplitude:0,waveform:"sine",pulseWidth:5},{frequency:"1×",amplitude:0,waveform:"sine",pulseWidth:5}],envelopes:[{target:"noteFilterFreq",envelope:"wibble 2",index:0}]}},{name:"Guitar 2",generalMidi:!1,settings:{type:"FM",eqFilter:[{type:"low-pass",cutoffHz:2828.43,linearGain:11.3137}],eqFilterType:!1,eqSimpleCut:10,eqSimplePeak:0,envelopeSpeed:12,discreteEnvelope:!1,eqSubFilters0:[{type:"low-pass",cutoffHz:2828.43,linearGain:11.3137}],effects:["transition type","pitch shift","note filter","distortion","bitcrusher","chorus","echo","reverb"],transition:"interrupt",clicklessTransition:!1,pitchShiftSemitones:36,noteFilterType:!1,noteSimpleCut:10,noteSimplePeak:0,noteFilter:[{type:"low-pass",cutoffHz:2378.41,linearGain:.5}],noteSubFilters0:[{type:"low-pass",cutoffHz:2378.41,linearGain:.5}],distortion:71,aliases:!1,bitcrusherOctave:3,bitcrusherQuantization:29,panDelay:10,chorus:29,echoSustain:43,echoDelayBeats:1,reverb:0,fadeInSeconds:0,fadeOutTicks:-1,algorithm:"1 2 3 4",feedbackType:"1→2→3→4",feedbackAmplitude:11,operators:[{frequency:"2×",amplitude:10,waveform:"trapezoid",pulseWidth:5},{frequency:"1×",amplitude:10,waveform:"trapezoid",pulseWidth:5},{frequency:"0.5×",amplitude:13,waveform:"trapezoid",pulseWidth:5},{frequency:"0.25×",amplitude:10,waveform:"trapezoid",pulseWidth:5},{frequency:"1×",amplitude:0,waveform:"sine",pulseWidth:5},{frequency:"1×",amplitude:0,waveform:"sine",pulseWidth:5}],envelopes:[{target:"noteFilterFreq",envelope:"wibble 2",index:0}]}},{name:"Guitar 3",generalMidi:!1,settings:{type:"Picked String",eqFilter:[{type:"peak",cutoffHz:353.55,linearGain:11.3137}],eqFilterType:!1,eqSimpleCut:10,eqSimplePeak:0,envelopeSpeed:12,discreteEnvelope:!1,eqSubFilters0:[{type:"peak",cutoffHz:353.55,linearGain:11.3137}],effects:["transition type","pitch shift","vibrato","note filter","distortion","bitcrusher","echo","reverb"],transition:"interrupt",clicklessTransition:!1,pitchShiftSemitones:12,vibrato:"none",vibratoDepth:0,vibratoDelay:0,vibratoSpeed:10,vibratoType:0,noteFilterType:!1,noteSimpleCut:10,noteSimplePeak:0,noteFilter:[{type:"low-pass",cutoffHz:2378.41,linearGain:.5}],noteSubFilters0:[{type:"low-pass",cutoffHz:2378.41,linearGain:.5}],distortion:14,aliases:!1,bitcrusherOctave:4.5,bitcrusherQuantization:100,panDelay:10,echoSustain:29,echoDelayBeats:2,reverb:55,fadeInSeconds:0,fadeOutTicks:-1,harmonics:[100,100,0,100,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],unison:"dirty",stringSustain:71,envelopes:[{target:"noteFilterFreq",envelope:"wibble 2",index:0}]}},{name:"Mod_p1",generalMidi:!1,settings:{type:"Picked String",eqFilter:[{type:"low-pass",cutoffHz:4756.83,linearGain:.7071},{type:"low-pass",cutoffHz:5656.85,linearGain:1},{type:"high-pass",cutoffHz:210.22,linearGain:1},{type:"peak",cutoffHz:594.6,linearGain:.3536},{type:"peak",cutoffHz:707.11,linearGain:5.6569},{type:"peak",cutoffHz:1189.21,linearGain:11.3137}],eqFilterType:!1,eqSimpleCut:10,eqSimplePeak:0,envelopeSpeed:12,discreteEnvelope:!1,eqSubFilters0:[{type:"low-pass",cutoffHz:4756.83,linearGain:.7071},{type:"low-pass",cutoffHz:5656.85,linearGain:1},{type:"high-pass",cutoffHz:210.22,linearGain:1},{type:"peak",cutoffHz:594.6,linearGain:.3536},{type:"peak",cutoffHz:707.11,linearGain:5.6569},{type:"peak",cutoffHz:1189.21,linearGain:11.3137}],effects:["transition type","note filter","distortion"],transition:"interrupt",clicklessTransition:!1,noteFilterType:!1,noteSimpleCut:10,noteSimplePeak:0,noteFilter:[{type:"high-pass",cutoffHz:297.3,linearGain:2},{type:"low-pass",cutoffHz:2378.41,linearGain:.7071}],noteSubFilters0:[{type:"high-pass",cutoffHz:297.3,linearGain:2},{type:"low-pass",cutoffHz:2378.41,linearGain:.7071}],distortion:71,aliases:!1,panDelay:10,fadeInSeconds:0,fadeOutTicks:-1,harmonics:[100,100,57,29,57,71,100,100,71,57,43,29,29,29,0,0,0,0,0,0,0,0,0,0,0,0,0,0],unison:"fifth",stringSustain:71,envelopes:[{target:"noteFilterFreq",envelope:"wibble 2",index:1}]}},{name:"Mod_p2",generalMidi:!1,settings:{type:"Picked String",eqFilter:[{type:"low-pass",cutoffHz:4756.83,linearGain:.7071},{type:"low-pass",cutoffHz:5656.85,linearGain:1},{type:"high-pass",cutoffHz:210.22,linearGain:1},{type:"peak",cutoffHz:353.55,linearGain:1},{type:"peak",cutoffHz:420.45,linearGain:11.3137},{type:"peak",cutoffHz:4e3,linearGain:11.3137},{type:"peak",cutoffHz:1414.21,linearGain:4}],eqFilterType:!1,eqSimpleCut:10,eqSimplePeak:0,envelopeSpeed:12,discreteEnvelope:!1,eqSubFilters0:[{type:"low-pass",cutoffHz:4756.83,linearGain:.7071},{type:"low-pass",cutoffHz:5656.85,linearGain:1},{type:"high-pass",cutoffHz:210.22,linearGain:1},{type:"peak",cutoffHz:353.55,linearGain:1},{type:"peak",cutoffHz:420.45,linearGain:11.3137},{type:"peak",cutoffHz:4e3,linearGain:11.3137},{type:"peak",cutoffHz:1414.21,linearGain:4}],effects:["transition type","pitch shift","note filter","distortion","echo"],transition:"interrupt",clicklessTransition:!1,pitchShiftSemitones:12,noteFilterType:!1,noteSimpleCut:10,noteSimplePeak:0,noteFilter:[{type:"high-pass",cutoffHz:297.3,linearGain:2},{type:"low-pass",cutoffHz:2378.41,linearGain:.7071}],noteSubFilters0:[{type:"high-pass",cutoffHz:297.3,linearGain:2},{type:"low-pass",cutoffHz:2378.41,linearGain:.7071}],distortion:71,aliases:!1,panDelay:10,echoSustain:43,echoDelayBeats:.25,fadeInSeconds:0,fadeOutTicks:-1,harmonics:[86,100,100,71,29,100,100,71,100,100,100,100,14,14,0,0,0,0,0,0,0,0,0,0,0,0,0,0],unison:"fifth",stringSustain:71,envelopes:[{target:"noteFilterFreq",envelope:"wibble 2",index:1}]}},{name:"Mod_p3",generalMidi:!1,settings:{type:"Picked String",eqFilter:[{type:"low-pass",cutoffHz:4756.83,linearGain:.7071},{type:"low-pass",cutoffHz:5656.85,linearGain:1},{type:"high-pass",cutoffHz:210.22,linearGain:1},{type:"peak",cutoffHz:353.55,linearGain:1},{type:"peak",cutoffHz:420.45,linearGain:11.3137},{type:"peak",cutoffHz:4e3,linearGain:11.3137},{type:"peak",cutoffHz:1414.21,linearGain:4}],eqFilterType:!1,eqSimpleCut:10,eqSimplePeak:0,envelopeSpeed:12,discreteEnvelope:!1,eqSubFilters0:[{type:"low-pass",cutoffHz:4756.83,linearGain:.7071},{type:"low-pass",cutoffHz:5656.85,linearGain:1},{type:"high-pass",cutoffHz:210.22,linearGain:1},{type:"peak",cutoffHz:353.55,linearGain:1},{type:"peak",cutoffHz:420.45,linearGain:11.3137},{type:"peak",cutoffHz:4e3,linearGain:11.3137},{type:"peak",cutoffHz:1414.21,linearGain:4}],effects:["transition type","note filter","distortion","chorus","reverb"],transition:"interrupt",clicklessTransition:!1,noteFilterType:!1,noteSimpleCut:10,noteSimplePeak:0,noteFilter:[{type:"high-pass",cutoffHz:297.3,linearGain:2},{type:"low-pass",cutoffHz:2378.41,linearGain:.7071}],noteSubFilters0:[{type:"high-pass",cutoffHz:297.3,linearGain:2},{type:"low-pass",cutoffHz:2378.41,linearGain:.7071}],distortion:100,aliases:!1,panDelay:10,chorus:43,reverb:23,fadeInSeconds:0,fadeOutTicks:-1,harmonics:[100,100,100,100,100,100,100,86,86,71,71,57,100,100,0,0,0,0,0,0,0,0,0,0,0,0,0,0],unison:"fifth",stringSustain:71,envelopes:[{target:"noteFilterFreq",envelope:"wibble 2",index:1}]}},{name:"Mod_p4_T",generalMidi:!1,settings:{type:"chip",eqFilter:[{type:"high-pass",cutoffHz:125,linearGain:.7071},{type:"low-pass",cutoffHz:3363.59,linearGain:2},{type:"peak",cutoffHz:2378.41,linearGain:.0884},{type:"peak",cutoffHz:1e3,linearGain:.125},{type:"peak",cutoffHz:1189.21,linearGain:11.3137},{type:"peak",cutoffHz:840.9,linearGain:11.3137}],eqFilterType:!1,eqSimpleCut:10,eqSimplePeak:0,envelopeSpeed:12,discreteEnvelope:!1,eqSubFilters0:[{type:"high-pass",cutoffHz:125,linearGain:.7071},{type:"low-pass",cutoffHz:3363.59,linearGain:2},{type:"peak",cutoffHz:2378.41,linearGain:.0884},{type:"peak",cutoffHz:1e3,linearGain:.125},{type:"peak",cutoffHz:1189.21,linearGain:11.3137},{type:"peak",cutoffHz:840.9,linearGain:11.3137}],eqSubFilters1:[{type:"low-pass",cutoffHz:4756.83,linearGain:.7071},{type:"low-pass",cutoffHz:5656.85,linearGain:1},{type:"high-pass",cutoffHz:210.22,linearGain:1},{type:"peak",cutoffHz:353.55,linearGain:1},{type:"peak",cutoffHz:420.45,linearGain:11.3137},{type:"peak",cutoffHz:4e3,linearGain:11.3137},{type:"peak",cutoffHz:1414.21,linearGain:4}],effects:["transition type","pitch shift","note filter","bitcrusher","reverb"],transition:"interrupt",clicklessTransition:!1,pitchShiftSemitones:12,noteFilterType:!1,noteSimpleCut:10,noteSimplePeak:0,noteFilter:[{type:"low-pass",cutoffHz:2378.41,linearGain:.5}],noteSubFilters0:[{type:"low-pass",cutoffHz:2378.41,linearGain:.5}],bitcrusherOctave:3.5,bitcrusherQuantization:0,panDelay:10,reverb:32,fadeInSeconds:0,fadeOutTicks:-1,wave:"triangle",unison:"none",isUsingAdvancedLoopControls:!0,chipWaveLoopStart:0,chipWaveLoopEnd:32,chipWaveLoopMode:1,chipWavePlayBackwards:!1,chipWaveStartOffset:0,envelopes:[{target:"noteFilterFreq",envelope:"wibble 2",index:0},{target:"noteFilterAllFreqs",envelope:"note size"}]}}])},{name:"Picked Bass",presets:S([{name:"Picked Bass_p1",generalMidi:!1,settings:{type:"Picked String",eqFilter:[],eqFilterType:!1,eqSimpleCut:10,eqSimplePeak:0,envelopeSpeed:12,discreteEnvelope:!1,eqSubFilters0:[],eqSubFilters1:[],effects:["pitch shift","distortion"],pitchShiftSemitones:12,distortion:14,aliases:!1,panDelay:10,fadeInSeconds:0,fadeOutTicks:-3,harmonics:[100,86,71,43,29,43,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],unison:"dirty",stringSustain:79,envelopes:[{target:"unison",envelope:"twang -1"},{target:"noteVolume",envelope:"decay 3"},{target:"noteVolume",envelope:"twang 3"}]}},{name:"Picked Bass_p2",generalMidi:!1,settings:{type:"Picked String",eqFilter:[{type:"low-pass",cutoffHz:9513.66,linearGain:.7071},{type:"high-pass",cutoffHz:74.33,linearGain:1}],eqFilterType:!1,eqSimpleCut:10,eqSimplePeak:0,envelopeSpeed:12,discreteEnvelope:!1,eqSubFilters0:[{type:"low-pass",cutoffHz:9513.66,linearGain:.7071},{type:"high-pass",cutoffHz:74.33,linearGain:1}],eqSubFilters1:[],effects:["pitch shift","distortion"],pitchShiftSemitones:24,distortion:14,aliases:!1,panDelay:10,fadeInSeconds:0,fadeOutTicks:-3,harmonics:[100,86,71,43,29,29,29,43,43,29,29,29,29,29,29,29,14,14,14,14,14,14,14,14,14,14,14,14],unison:"dirty",stringSustain:79,envelopes:[{target:"unison",envelope:"twang -1"},{target:"noteVolume",envelope:"decay 3"},{target:"noteVolume",envelope:"twang 3"}]}}])},{name:"Picked String",presets:S([{name:"Mando_p1",generalMidi:!1,settings:{type:"Picked String",eqFilter:[],eqFilterType:!1,eqSimpleCut:10,eqSimplePeak:0,envelopeSpeed:12,discreteEnvelope:!1,eqSubFilters0:[],effects:["chord type","distortion","reverb"],chord:"strum",fastTwoNoteArp:!1,arpeggioSpeed:12,distortion:14,aliases:!1,panDelay:10,reverb:32,fadeInSeconds:0,fadeOutTicks:48,harmonics:[100,100,86,71,71,71,86,86,71,57,43,43,43,57,57,57,57,57,43,43,43,43,43,43,43,43,43,43],unison:"none",stringSustain:71,envelopes:[]}},{name:"Mando_p2_a",generalMidi:!1,settings:{type:"Picked String",eqFilter:[],eqFilterType:!1,eqSimpleCut:10,eqSimplePeak:0,envelopeSpeed:12,discreteEnvelope:!1,eqSubFilters0:[],effects:["chord type","note filter","distortion","reverb"],chord:"strum",fastTwoNoteArp:!1,arpeggioSpeed:12,noteFilterType:!0,noteSimpleCut:7,noteSimplePeak:1,noteFilter:[],distortion:29,aliases:!1,panDelay:10,reverb:0,fadeInSeconds:0,fadeOutTicks:48,harmonics:[86,100,100,100,86,57,86,100,100,100,71,57,43,71,86,71,57,57,71,71,71,71,57,57,57,57,57,43],unison:"dirty",stringSustain:71,envelopes:[{target:"noteFilterAllFreqs",envelope:"twang 2"}]}},{name:"Mando_p2_b",generalMidi:!1,settings:{type:"Picked String",eqFilter:[],eqFilterType:!1,eqSimpleCut:10,eqSimplePeak:0,envelopeSpeed:12,discreteEnvelope:!1,eqSubFilters0:[],effects:["chord type","note filter","distortion","reverb"],chord:"strum",fastTwoNoteArp:!1,arpeggioSpeed:12,noteFilterType:!1,noteSimpleCut:10,noteSimplePeak:0,noteFilter:[{type:"low-pass",cutoffHz:4e3,linearGain:.5}],noteSubFilters0:[{type:"low-pass",cutoffHz:4e3,linearGain:.5}],noteSubFilters1:[{type:"low-pass",cutoffHz:4e3,linearGain:.5}],distortion:29,aliases:!1,panDelay:10,reverb:0,fadeInSeconds:0,fadeOutTicks:48,harmonics:[86,100,100,100,86,57,86,100,100,100,71,57,43,71,86,71,57,57,71,71,71,71,57,57,57,57,57,43],unison:"dirty",stringSustain:71,envelopes:[{target:"noteFilterAllFreqs",envelope:"twang 2"},{target:"stringSustain",envelope:"water-y flutter"}]}},{name:"Banjo_p1",generalMidi:!1,settings:{type:"harmonics",eqFilter:[{type:"high-pass",cutoffHz:176.78,linearGain:.7071},{type:"low-pass",cutoffHz:5656.85,linearGain:1.4142}],eqFilterType:!1,eqSimpleCut:10,eqSimplePeak:0,envelopeSpeed:12,discreteEnvelope:!1,eqSubFilters0:[{type:"high-pass",cutoffHz:176.78,linearGain:.7071},{type:"low-pass",cutoffHz:5656.85,linearGain:1.4142}],effects:["chord type","detune","note filter","reverb"],chord:"strum",fastTwoNoteArp:!1,arpeggioSpeed:12,detuneCents:0,noteFilterType:!0,noteSimpleCut:9,noteSimplePeak:0,noteFilter:[],panDelay:10,reverb:23,fadeInSeconds:0,fadeOutTicks:96,harmonics:[86,100,100,100,86,57,86,100,100,100,71,86,86,86,86,71,57,57,71,71,71,71,71,71,57,57,57,86],unison:"dirty",envelopes:[{target:"noteFilterAllFreqs",envelope:"flare -1"},{target:"noteFilterFreq",envelope:"twang 2",index:0},{target:"detune",envelope:"note size"}]}},{name:"Banjo_p2",generalMidi:!1,settings:{type:"FM",eqFilter:[],eqFilterType:!1,eqSimpleCut:10,eqSimplePeak:0,envelopeSpeed:12,discreteEnvelope:!1,eqSubFilters0:[],effects:["chord type","note filter","reverb"],chord:"strum",fastTwoNoteArp:!1,arpeggioSpeed:12,noteFilterType:!0,noteSimpleCut:6,noteSimplePeak:1,noteFilter:[],panDelay:10,reverb:13,fadeInSeconds:0,fadeOutTicks:48,algorithm:"1←(2 3←4)",feedbackType:"2⟲",feedbackAmplitude:5,operators:[{frequency:"4×",amplitude:15,waveform:"sine",pulseWidth:5},{frequency:"1×",amplitude:10,waveform:"sine",pulseWidth:5},{frequency:"11×",amplitude:6,waveform:"sine",pulseWidth:5},{frequency:"1×",amplitude:11,waveform:"sine",pulseWidth:5},{frequency:"1×",amplitude:0,waveform:"sine",pulseWidth:5},{frequency:"1×",amplitude:0,waveform:"sine",pulseWidth:5}],envelopes:[{target:"noteFilterAllFreqs",envelope:"twang 2"},{target:"operatorAmplitude",envelope:"twang 3",index:2}]}},{name:"RGuit_HI_p1",generalMidi:!1,settings:{type:"Picked String",eqFilter:[{type:"high-pass",cutoffHz:250,linearGain:2},{type:"low-pass",cutoffHz:5656.85,linearGain:1.4142}],eqFilterType:!1,eqSimpleCut:10,eqSimplePeak:0,envelopeSpeed:12,discreteEnvelope:!1,eqSubFilters0:[{type:"high-pass",cutoffHz:250,linearGain:2},{type:"low-pass",cutoffHz:5656.85,linearGain:1.4142}],effects:["transition type","chord type","detune","note filter","reverb"],transition:"interrupt",clicklessTransition:!1,chord:"strum",fastTwoNoteArp:!1,arpeggioSpeed:12,detuneCents:0,noteFilterType:!0,noteSimpleCut:9,noteSimplePeak:1,noteFilter:[{type:"low-pass",cutoffHz:9656.85,linearGain:.5}],noteSubFilters1:[{type:"low-pass",cutoffHz:9656.85,linearGain:.5}],panDelay:10,reverb:39,fadeInSeconds:0,fadeOutTicks:96,harmonics:[86,100,100,100,86,57,86,100,100,100,71,57,43,71,86,71,57,57,71,71,71,71,57,43,43,43,57,57],unison:"dirty",stringSustain:100,envelopes:[{target:"noteFilterAllFreqs",envelope:"twang 2"},{target:"noteFilterFreq",envelope:"twang 3",index:0}]}},{name:"RGuit_HI_p2",generalMidi:!1,settings:{type:"Picked String",eqFilter:[{type:"high-pass",cutoffHz:105.11,linearGain:.7071},{type:"low-pass",cutoffHz:5656.85,linearGain:1.4142}],eqFilterType:!1,eqSimpleCut:10,eqSimplePeak:0,envelopeSpeed:12,discreteEnvelope:!1,eqSubFilters0:[{type:"high-pass",cutoffHz:105.11,linearGain:.7071},{type:"low-pass",cutoffHz:5656.85,linearGain:1.4142}],effects:["chord type","detune","note filter","reverb"],chord:"strum",fastTwoNoteArp:!1,arpeggioSpeed:12,detuneCents:0,noteFilterType:!0,noteSimpleCut:9,noteSimplePeak:0,noteFilter:[],panDelay:10,reverb:23,fadeInSeconds:0,fadeOutTicks:96,harmonics:[86,100,100,100,86,57,86,100,100,100,71,57,43,71,86,71,57,57,71,71,71,71,71,71,57,57,57,86],unison:"octave",stringSustain:100,envelopes:[{target:"noteFilterAllFreqs",envelope:"flare -1"},{target:"noteFilterFreq",envelope:"twang 2",index:0}]}},{name:"RGuit_LO_p1",generalMidi:!1,settings:{type:"Picked String",eqFilter:[{type:"high-pass",cutoffHz:125,linearGain:1.4142},{type:"low-pass",cutoffHz:5656.85,linearGain:1.4142}],eqFilterType:!1,eqSimpleCut:10,eqSimplePeak:0,envelopeSpeed:12,discreteEnvelope:!1,eqSubFilters0:[{type:"high-pass",cutoffHz:125,linearGain:1.4142},{type:"low-pass",cutoffHz:5656.85,linearGain:1.4142}],effects:["transition type","chord type","detune","note filter","reverb"],transition:"interrupt",clicklessTransition:!1,chord:"strum",fastTwoNoteArp:!1,arpeggioSpeed:12,detuneCents:0,noteFilterType:!0,noteSimpleCut:9,noteSimplePeak:1,noteFilter:[],panDelay:10,reverb:39,fadeInSeconds:0,fadeOutTicks:96,harmonics:[86,100,100,100,86,57,86,100,100,100,71,57,43,71,86,71,57,57,71,71,71,71,57,43,43,29,29,43],unison:"dirty",stringSustain:100,envelopes:[{target:"noteFilterAllFreqs",envelope:"twang 2"},{target:"noteFilterFreq",envelope:"twang 3",index:0}]}},{name:"RGuit_LO_p2",generalMidi:!1,settings:{type:"Picked String",eqFilter:[{type:"high-pass",cutoffHz:105.11,linearGain:.7071},{type:"low-pass",cutoffHz:5656.85,linearGain:1.4142}],eqFilterType:!1,eqSimpleCut:10,eqSimplePeak:0,envelopeSpeed:12,discreteEnvelope:!1,eqSubFilters0:[{type:"high-pass",cutoffHz:105.11,linearGain:.7071},{type:"low-pass",cutoffHz:5656.85,linearGain:1.4142}],effects:["chord type","detune","note filter","reverb"],chord:"strum",fastTwoNoteArp:!1,arpeggioSpeed:12,detuneCents:0,noteFilterType:!0,noteSimpleCut:9,noteSimplePeak:0,noteFilter:[],panDelay:10,reverb:23,fadeInSeconds:0,fadeOutTicks:96,harmonics:[86,100,100,100,86,57,86,100,100,100,71,57,43,71,86,71,57,57,71,71,71,71,71,57,57,43,43,29],unison:"octave",stringSustain:100,envelopes:[{target:"noteFilterAllFreqs",envelope:"flare -1"},{target:"noteFilterFreq",envelope:"twang 2",index:0}]}}])},{name:"Strings",presets:S([])},{name:"Bellows",presets:S([])},{name:"Reed",presets:S([])},{name:"Brasswind",presets:S([])},{name:"Woodwind_Reed",presets:S([])},{name:"Woodwind_Flute",presets:S([])},{name:"Perc-Chordophone",presets:S([])},{name:"Perc-Membranophone",presets:S([])},{name:"Perc-Idiophone",presets:S([{name:"Chime_Soft",generalMidi:!1,settings:{type:"FM",eqFilter:[{type:"low-pass",cutoffHz:6727.17,linearGain:.7071}],eqFilterType:!1,eqSimpleCut:10,eqSimplePeak:0,envelopeSpeed:12,discreteEnvelope:!1,eqSubFilters0:[{type:"low-pass",cutoffHz:6727.17,linearGain:.7071}],effects:["transition type","chord type","detune","vibrato","note filter","distortion","bitcrusher","chorus","echo"],transition:"interrupt",clicklessTransition:!1,chord:"strum",fastTwoNoteArp:!1,arpeggioSpeed:12,detuneCents:0,vibrato:"custom",vibratoDepth:.08,vibratoDelay:26,vibratoSpeed:1,vibratoType:0,noteFilterType:!0,noteSimpleCut:10,noteSimplePeak:0,noteFilter:[],distortion:14,aliases:!1,bitcrusherOctave:5,bitcrusherQuantization:43,panDelay:10,chorus:29,echoSustain:71,echoDelayBeats:1,fadeInSeconds:0,fadeOutTicks:-1,algorithm:"(1 2)←(3 4)",feedbackType:"1⟲ 2⟲",feedbackAmplitude:0,operators:[{frequency:"~1×",amplitude:13,waveform:"sine",pulseWidth:5},{frequency:"8×",amplitude:8,waveform:"sine",pulseWidth:5},{frequency:"20×",amplitude:3,waveform:"sine",pulseWidth:5},{frequency:"1×",amplitude:1,waveform:"sine",pulseWidth:5},{frequency:"1×",amplitude:0,waveform:"sine",pulseWidth:5},{frequency:"1×",amplitude:0,waveform:"sine",pulseWidth:5}],envelopes:[{target:"noteFilterAllFreqs",envelope:"twang 2"},{target:"operatorAmplitude",envelope:"twang 3",index:2},{target:"operatorAmplitude",envelope:"twang 1",index:1}]}},{name:"Chime_Wrm 1",generalMidi:!1,settings:{type:"Picked String",eqFilter:[{type:"peak",cutoffHz:2828.43,linearGain:.5},{type:"peak",cutoffHz:1414.21,linearGain:1.4142}],eqFilterType:!1,eqSimpleCut:10,eqSimplePeak:0,envelopeSpeed:12,discreteEnvelope:!1,eqSubFilters0:[{type:"peak",cutoffHz:2828.43,linearGain:.5},{type:"peak",cutoffHz:1414.21,linearGain:1.4142}],effects:["pitch shift","note filter","echo","reverb"],pitchShiftSemitones:12,noteFilterType:!1,noteSimpleCut:10,noteSimplePeak:0,noteFilter:[{type:"low-pass",cutoffHz:6727.17,linearGain:.5}],noteSubFilters0:[{type:"low-pass",cutoffHz:6727.17,linearGain:.5}],panDelay:10,echoSustain:43,echoDelayBeats:2,reverb:3,fadeInSeconds:0,fadeOutTicks:96,harmonics:[100,0,0,100,0,0,0,0,29,0,14,0,43,0,71,0,0,86,57,0,0,100,0,43,0,71,71,43],unison:"octave",stringSustain:71,envelopes:[{target:"noteFilterAllFreqs",envelope:"swell 1"}]}},{name:"Chime_Wrm 2",generalMidi:!1,settings:{type:"FM",eqFilter:[{type:"low-pass",cutoffHz:6727.17,linearGain:.7071}],eqFilterType:!1,eqSimpleCut:10,eqSimplePeak:0,envelopeSpeed:12,discreteEnvelope:!1,eqSubFilters0:[{type:"low-pass",cutoffHz:6727.17,linearGain:.7071}],effects:["transition type","chord type","pitch shift","detune","vibrato","note filter","distortion","bitcrusher","chorus","echo"],transition:"interrupt",clicklessTransition:!1,chord:"strum",fastTwoNoteArp:!1,arpeggioSpeed:12,pitchShiftSemitones:24,detuneCents:4,vibrato:"custom",vibratoDepth:.08,vibratoDelay:26,vibratoSpeed:1,vibratoType:0,noteFilterType:!0,noteSimpleCut:10,noteSimplePeak:0,noteFilter:[{type:"low-pass",cutoffHz:19027.31,linearGain:.7071}],noteSubFilters1:[{type:"low-pass",cutoffHz:19027.31,linearGain:.7071}],distortion:14,aliases:!1,bitcrusherOctave:4,bitcrusherQuantization:29,panDelay:10,chorus:71,echoSustain:57,echoDelayBeats:2,fadeInSeconds:0,fadeOutTicks:48,algorithm:"(1 2)←(3 4)",feedbackType:"1⟲ 2⟲",feedbackAmplitude:0,operators:[{frequency:"1×",amplitude:15,waveform:"triangle",pulseWidth:5},{frequency:"8×",amplitude:8,waveform:"triangle",pulseWidth:5},{frequency:"20×",amplitude:0,waveform:"sine",pulseWidth:5},{frequency:"1×",amplitude:0,waveform:"sine",pulseWidth:5},{frequency:"1×",amplitude:0,waveform:"sine",pulseWidth:5},{frequency:"1×",amplitude:0,waveform:"sine",pulseWidth:5}],envelopes:[{target:"noteFilterAllFreqs",envelope:"twang 2"},{target:"operatorAmplitude",envelope:"twang 3",index:2},{target:"operatorAmplitude",envelope:"decay 3",index:1}]}},{name:"Chime_Bow",generalMidi:!1,settings:{type:"FM",eqFilter:[{type:"low-pass",cutoffHz:6727.17,linearGain:.7071}],eqFilterType:!1,eqSimpleCut:10,eqSimplePeak:0,envelopeSpeed:12,discreteEnvelope:!1,eqSubFilters0:[{type:"low-pass",cutoffHz:6727.17,linearGain:.7071}],effects:["transition type","chord type","pitch shift","detune","vibrato","note filter","distortion","bitcrusher","chorus","echo"],transition:"normal",clicklessTransition:!1,chord:"strum",fastTwoNoteArp:!1,arpeggioSpeed:12,pitchShiftSemitones:24,detuneCents:0,vibrato:"custom",vibratoDepth:.08,vibratoDelay:26,vibratoSpeed:1,vibratoType:0,noteFilterType:!0,noteSimpleCut:10,noteSimplePeak:0,noteFilter:[{type:"low-pass",cutoffHz:19027.31,linearGain:.7071}],noteSubFilters1:[{type:"low-pass",cutoffHz:19027.31,linearGain:.7071}],distortion:14,aliases:!1,bitcrusherOctave:5,bitcrusherQuantization:29,panDelay:10,chorus:29,echoSustain:14,echoDelayBeats:2,fadeInSeconds:.1575,fadeOutTicks:48,algorithm:"(1 2)←(3 4)",feedbackType:"1⟲",feedbackAmplitude:0,operators:[{frequency:"~1×",amplitude:13,waveform:"sine",pulseWidth:5},{frequency:"8×",amplitude:8,waveform:"sine",pulseWidth:5},{frequency:"20×",amplitude:3,waveform:"sine",pulseWidth:5},{frequency:"1×",amplitude:1,waveform:"sine",pulseWidth:5},{frequency:"1×",amplitude:0,waveform:"sine",pulseWidth:5},{frequency:"1×",amplitude:0,waveform:"sine",pulseWidth:5}],envelopes:[{target:"noteFilterAllFreqs",envelope:"twang 2"},{target:"operatorAmplitude",envelope:"twang 3",index:2},{target:"operatorAmplitude",envelope:"twang 1",index:1}]}},{name:"Chime_Dist",generalMidi:!1,settings:{type:"FM",eqFilter:[{type:"low-pass",cutoffHz:6727.17,linearGain:.7071}],eqFilterType:!1,eqSimpleCut:10,eqSimplePeak:0,envelopeSpeed:12,discreteEnvelope:!1,eqSubFilters0:[{type:"low-pass",cutoffHz:6727.17,linearGain:.7071}],effects:["transition type","chord type","detune","vibrato","note filter","distortion","bitcrusher","chorus","echo"],transition:"normal",clicklessTransition:!1,chord:"strum",fastTwoNoteArp:!1,arpeggioSpeed:12,detuneCents:0,vibrato:"custom",vibratoDepth:.08,vibratoDelay:26,vibratoSpeed:1,vibratoType:0,noteFilterType:!0,noteSimpleCut:10,noteSimplePeak:0,noteFilter:[{type:"low-pass",cutoffHz:19027.31,linearGain:.7071}],noteSubFilters1:[{type:"low-pass",cutoffHz:19027.31,linearGain:.7071}],distortion:29,aliases:!1,bitcrusherOctave:3.5,bitcrusherQuantization:57,panDelay:10,chorus:29,echoSustain:71,echoDelayBeats:1,fadeInSeconds:0,fadeOutTicks:-1,algorithm:"(1 2)←(3 4)",feedbackType:"1⟲ 2⟲",feedbackAmplitude:0,operators:[{frequency:"~1×",amplitude:13,waveform:"sine",pulseWidth:5},{frequency:"8×",amplitude:8,waveform:"sine",pulseWidth:5},{frequency:"20×",amplitude:3,waveform:"sine",pulseWidth:5},{frequency:"1×",amplitude:1,waveform:"sine",pulseWidth:5},{frequency:"1×",amplitude:0,waveform:"sine",pulseWidth:5},{frequency:"1×",amplitude:0,waveform:"sine",pulseWidth:5}],envelopes:[{target:"noteFilterAllFreqs",envelope:"twang 2"},{target:"operatorAmplitude",envelope:"twang 3",index:2},{target:"operatorAmplitude",envelope:"twang 1",index:1}]}},{name:"Chime_Hvy",generalMidi:!1,settings:{type:"FM",eqFilter:[{type:"low-pass",cutoffHz:6727.17,linearGain:.7071}],eqFilterType:!1,eqSimpleCut:10,eqSimplePeak:0,envelopeSpeed:12,discreteEnvelope:!1,eqSubFilters0:[{type:"low-pass",cutoffHz:6727.17,linearGain:.7071}],effects:["transition type","chord type","detune","vibrato","note filter","distortion","bitcrusher","chorus","echo"],transition:"normal",clicklessTransition:!1,chord:"strum",fastTwoNoteArp:!1,arpeggioSpeed:12,detuneCents:0,vibrato:"custom",vibratoDepth:.08,vibratoDelay:26,vibratoSpeed:1,vibratoType:0,noteFilterType:!0,noteSimpleCut:10,noteSimplePeak:0,noteFilter:[{type:"low-pass",cutoffHz:19027.31,linearGain:.7071}],noteSubFilters1:[{type:"low-pass",cutoffHz:19027.31,linearGain:.7071}],distortion:86,aliases:!1,bitcrusherOctave:2.5,bitcrusherQuantization:57,panDelay:10,chorus:29,echoSustain:71,echoDelayBeats:1,fadeInSeconds:0,fadeOutTicks:-1,algorithm:"(1 2)←(3 4)",feedbackType:"1⟲ 2⟲",feedbackAmplitude:0,operators:[{frequency:"~1×",amplitude:13,waveform:"sine",pulseWidth:5},{frequency:"8×",amplitude:8,waveform:"sine",pulseWidth:5},{frequency:"20×",amplitude:3,waveform:"sine",pulseWidth:5},{frequency:"1×",amplitude:1,waveform:"sine",pulseWidth:5},{frequency:"1×",amplitude:0,waveform:"sine",pulseWidth:5},{frequency:"1×",amplitude:0,waveform:"sine",pulseWidth:5}],envelopes:[{target:"noteFilterAllFreqs",envelope:"twang 2"},{target:"operatorAmplitude",envelope:"twang 3",index:2},{target:"operatorAmplitude",envelope:"twang 1",index:1}]}},{name:"MusBox_UN",generalMidi:!1,settings:{type:"Picked String",eqFilter:[],eqFilterType:!1,eqSimpleCut:10,eqSimplePeak:0,envelopeSpeed:12,discreteEnvelope:!1,eqSubFilters0:[],effects:["transition type","echo","reverb"],transition:"interrupt",clicklessTransition:!1,panDelay:10,echoSustain:71,echoDelayBeats:.5,reverb:68,fadeInSeconds:0,fadeOutTicks:96,harmonics:[100,0,0,57,0,0,100,0,0,0,0,0,86,0,0,86,0,0,0,0,0,0,0,29,0,0,0,0],unison:"none",stringSustain:71,envelopes:[]}},{name:"Jawharp",generalMidi:!1,settings:{type:"chip",eqFilter:[{type:"low-pass",cutoffHz:4e3,linearGain:1}],eqFilterType:!1,eqSimpleCut:10,eqSimplePeak:0,envelopeSpeed:12,discreteEnvelope:!1,eqSubFilters0:[{type:"low-pass",cutoffHz:4e3,linearGain:1}],effects:["transition type","pitch shift","note filter","chorus","echo"],transition:"normal",clicklessTransition:!1,pitchShiftSemitones:36,noteFilterType:!1,noteSimpleCut:10,noteSimplePeak:0,noteFilter:[{type:"high-pass",cutoffHz:1681.79,linearGain:8},{type:"peak",cutoffHz:88.39,linearGain:11.3137},{type:"peak",cutoffHz:353.55,linearGain:11.3137},{type:"low-pass",cutoffHz:8e3,linearGain:1},{type:"low-pass",cutoffHz:9513.66,linearGain:8}],noteSubFilters0:[{type:"high-pass",cutoffHz:1681.79,linearGain:8},{type:"peak",cutoffHz:88.39,linearGain:11.3137},{type:"peak",cutoffHz:353.55,linearGain:11.3137},{type:"low-pass",cutoffHz:8e3,linearGain:1},{type:"low-pass",cutoffHz:9513.66,linearGain:8}],noteSubFilters1:[{type:"low-pass",cutoffHz:4756.83,linearGain:1.4142}],panDelay:10,chorus:29,echoSustain:29,echoDelayBeats:.083,fadeInSeconds:0,fadeOutTicks:96,wave:"sawtooth",unison:"piano",isUsingAdvancedLoopControls:!1,chipWaveLoopStart:0,chipWaveLoopEnd:2,chipWaveLoopMode:0,chipWavePlayBackwards:!1,chipWaveStartOffset:0,envelopes:[{target:"noteFilterFreq",envelope:"tremolo6",index:0},{target:"pitchShift",envelope:"flare 1"},{target:"pitchShift",envelope:"twang -1"},{target:"pitchShift",envelope:"twang -1"},{target:"pitchShift",envelope:"twang -1"},{target:"pitchShift",envelope:"flare -1"},{target:"noteFilterFreq",envelope:"punch",index:0}]}}])},{name:"Noise",presets:S([{name:"Fade",generalMidi:!1,settings:{type:"noise",eqFilter:[],eqFilterType:!1,eqSimpleCut:10,eqSimplePeak:0,envelopeSpeed:12,discreteEnvelope:!1,eqSubFilters0:[],eqSubFilters1:[],effects:[],panDelay:10,fadeInSeconds:0,fadeOutTicks:96,wave:"1-bit white",unison:"none",envelopes:[]}},{name:"DistantWoosh",generalMidi:!1,settings:{type:"spectrum",eqFilter:[{type:"low-pass",cutoffHz:4e3,linearGain:1.4142},{type:"high-pass",cutoffHz:148.65,linearGain:2},{type:"peak",cutoffHz:1189.21,linearGain:.1768},{type:"peak",cutoffHz:2e3,linearGain:.1768},{type:"peak",cutoffHz:500,linearGain:.1768}],eqFilterType:!1,eqSimpleCut:10,eqSimplePeak:0,envelopeSpeed:12,discreteEnvelope:!1,eqSubFilters0:[{type:"low-pass",cutoffHz:4e3,linearGain:1.4142},{type:"high-pass",cutoffHz:148.65,linearGain:2},{type:"peak",cutoffHz:1189.21,linearGain:.1768},{type:"peak",cutoffHz:2e3,linearGain:.1768},{type:"peak",cutoffHz:500,linearGain:.1768}],effects:["transition type","pitch shift","detune","vibrato","note filter","distortion","bitcrusher","chorus","echo","reverb"],transition:"interrupt",clicklessTransition:!1,pitchShiftSemitones:23,detuneCents:196,vibrato:"custom",vibratoDepth:.16,vibratoDelay:36,vibratoSpeed:2,vibratoType:0,noteFilterType:!1,noteSimpleCut:10,noteSimplePeak:0,noteFilter:[{type:"low-pass",cutoffHz:9513.66,linearGain:4},{type:"peak",cutoffHz:500,linearGain:2},{type:"peak",cutoffHz:2828.43,linearGain:.25},{type:"high-pass",cutoffHz:148.65,linearGain:.3536},{type:"peak",cutoffHz:1414.21,linearGain:.0884}],noteSubFilters0:[{type:"low-pass",cutoffHz:9513.66,linearGain:4},{type:"peak",cutoffHz:500,linearGain:2},{type:"peak",cutoffHz:2828.43,linearGain:.25},{type:"high-pass",cutoffHz:148.65,linearGain:.3536},{type:"peak",cutoffHz:1414.21,linearGain:.0884}],distortion:43,aliases:!1,bitcrusherOctave:4.5,bitcrusherQuantization:14,panDelay:10,chorus:57,echoSustain:71,echoDelayBeats:1.583,reverb:87,fadeInSeconds:0,fadeOutTicks:6,spectrum:[0,0,0,29,43,57,57,43,57,29,29,29,43,29,57,29,57,29,29,0,14,43,43,29,14,14,0,0,0,14],unison:"none",envelopes:[{target:"noteFilterAllFreqs",envelope:"rise -2"},{target:"vibratoDepth",envelope:"swell -1"}]}},{name:"HissMetallic",generalMidi:!1,settings:{type:"FM",eqFilter:[{type:"low-pass",cutoffHz:19027.31,linearGain:.7071}],eqFilterType:!0,eqSimpleCut:10,eqSimplePeak:0,envelopeSpeed:12,discreteEnvelope:!1,eqSubFilters1:[],effects:["transition type","detune","bitcrusher","reverb"],transition:"interrupt",clicklessTransition:!1,detuneCents:0,bitcrusherOctave:6.5,bitcrusherQuantization:43,panDelay:10,reverb:58,fadeInSeconds:0,fadeOutTicks:-1,algorithm:"1←(2 3 4)",feedbackType:"1→2→3→4",feedbackAmplitude:9,operators:[{frequency:"20×",amplitude:15,waveform:"sine",pulseWidth:5},{frequency:"20×",amplitude:10,waveform:"sine",pulseWidth:5},{frequency:"20×",amplitude:7,waveform:"sine",pulseWidth:5},{frequency:"20×",amplitude:15,waveform:"sine",pulseWidth:5},{frequency:"1×",amplitude:0,waveform:"sine",pulseWidth:5},{frequency:"1×",amplitude:0,waveform:"sine",pulseWidth:5}],envelopes:[{target:"operatorAmplitude",envelope:"punch",index:3}]}},{name:"Hiss_a",generalMidi:!1,settings:{type:"FM",eqFilter:[{type:"low-pass",cutoffHz:2378.41,linearGain:.0884}],eqFilterType:!0,eqSimpleCut:0,eqSimplePeak:0,envelopeSpeed:12,discreteEnvelope:!1,eqSubFilters1:[],effects:["transition type","pitch shift","detune","bitcrusher","reverb"],transition:"interrupt",clicklessTransition:!1,pitchShiftSemitones:0,detuneCents:0,bitcrusherOctave:6.5,bitcrusherQuantization:57,panDelay:10,reverb:58,fadeInSeconds:0,fadeOutTicks:-1,algorithm:"1←(2 3 4)",feedbackType:"1→2→3→4",feedbackAmplitude:9,operators:[{frequency:"20×",amplitude:15,waveform:"sine",pulseWidth:5},{frequency:"20×",amplitude:13,waveform:"sine",pulseWidth:5},{frequency:"20×",amplitude:15,waveform:"sine",pulseWidth:5},{frequency:"20×",amplitude:11,waveform:"sine",pulseWidth:5},{frequency:"1×",amplitude:0,waveform:"sine",pulseWidth:5},{frequency:"1×",amplitude:0,waveform:"sine",pulseWidth:5}],envelopes:[{target:"operatorAmplitude",envelope:"punch",index:3}]}},{name:"Hiss_b",generalMidi:!1,settings:{type:"spectrum",eqFilter:[{type:"high-pass",cutoffHz:210.22,linearGain:.7071}],eqFilterType:!1,eqSimpleCut:10,eqSimplePeak:0,envelopeSpeed:12,discreteEnvelope:!1,eqSubFilters0:[{type:"high-pass",cutoffHz:210.22,linearGain:.7071}],eqSubFilters1:[],effects:["chord type","detune","note filter","reverb"],chord:"simultaneous",fastTwoNoteArp:!1,arpeggioSpeed:12,detuneCents:132,noteFilterType:!1,noteSimpleCut:10,noteSimplePeak:0,noteFilter:[{type:"low-pass",cutoffHz:3363.59,linearGain:1.4142}],noteSubFilters0:[{type:"low-pass",cutoffHz:3363.59,linearGain:1.4142}],panDelay:10,reverb:52,fadeInSeconds:0,fadeOutTicks:-1,spectrum:[43,43,29,29,0,14,43,43,57,0,14,57,57,71,71,0,57,86,71,100,86,57,0,0,71,57,100,43,14,0],unison:"none",envelopes:[{target:"noteFilterAllFreqs",envelope:"swell 2"}]}},{name:"Hiss_c",generalMidi:!1,settings:{type:"spectrum",eqFilter:[{type:"low-pass",cutoffHz:11313.71,linearGain:1.4142},{type:"high-pass",cutoffHz:420.45,linearGain:1.4142}],eqFilterType:!1,eqSimpleCut:10,eqSimplePeak:0,envelopeSpeed:12,discreteEnvelope:!1,eqSubFilters0:[{type:"low-pass",cutoffHz:11313.71,linearGain:1.4142},{type:"high-pass",cutoffHz:420.45,linearGain:1.4142}],eqSubFilters1:[],effects:["chord type","pitch shift","detune","note filter","reverb"],chord:"simultaneous",fastTwoNoteArp:!1,arpeggioSpeed:12,pitchShiftSemitones:24,detuneCents:200,noteFilterType:!1,noteSimpleCut:10,noteSimplePeak:0,noteFilter:[{type:"high-pass",cutoffHz:594.6,linearGain:.7071}],noteSubFilters0:[{type:"high-pass",cutoffHz:594.6,linearGain:.7071}],panDelay:10,reverb:52,fadeInSeconds:0,fadeOutTicks:-1,spectrum:[100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100],unison:"none",envelopes:[]}},{name:"Clicky",generalMidi:!1,settings:{type:"noise",eqFilter:[{type:"high-pass",cutoffHz:210.22,linearGain:.5},{type:"peak",cutoffHz:11313.71,linearGain:5.6569}],eqFilterType:!1,eqSimpleCut:10,eqSimplePeak:0,envelopeSpeed:12,discreteEnvelope:!1,eqSubFilters0:[{type:"high-pass",cutoffHz:210.22,linearGain:.5},{type:"peak",cutoffHz:11313.71,linearGain:5.6569}],eqSubFilters1:[],effects:["transition type","chord type","pitch shift","detune","bitcrusher"],transition:"interrupt",clicklessTransition:!1,chord:"arpeggio",fastTwoNoteArp:!1,arpeggioSpeed:12,pitchShiftSemitones:26,detuneCents:0,bitcrusherOctave:5,bitcrusherQuantization:57,panDelay:10,fadeInSeconds:0,fadeOutTicks:-1,wave:"1-bit white",unison:"none",envelopes:[{target:"noteVolume",envelope:"note size"},{target:"pitchShift",envelope:"note size"},{target:"noteVolume",envelope:"twang -1"},{target:"pitchShift",envelope:"twang -1"},{target:"pitchShift",envelope:"decay -1"},{target:"noteVolume",envelope:"blip 3"}]}},{name:"Crackle_UN",generalMidi:!1,settings:{type:"noise",eqFilter:[{type:"low-pass",cutoffHz:1681.79,linearGain:.7071},{type:"high-pass",cutoffHz:500,linearGain:1}],eqFilterType:!1,eqSimpleCut:10,eqSimplePeak:0,envelopeSpeed:12,discreteEnvelope:!1,eqSubFilters0:[{type:"low-pass",cutoffHz:1681.79,linearGain:.7071},{type:"high-pass",cutoffHz:500,linearGain:1}],eqSubFilters1:[],effects:["transition type","pitch shift","detune","distortion","bitcrusher","chorus","echo","reverb"],transition:"slide in pattern",clicklessTransition:!1,pitchShiftSemitones:36,detuneCents:200,distortion:29,aliases:!1,bitcrusherOctave:5,bitcrusherQuantization:57,panDelay:10,chorus:29,echoSustain:14,echoDelayBeats:.25,reverb:13,fadeInSeconds:0,fadeOutTicks:24,wave:"crackling",unison:"none",envelopes:[]}},{name:"CSnare68_p1",generalMidi:!1,settings:{type:"noise",eqFilter:[{type:"low-pass",cutoffHz:13454.34,linearGain:.5},{type:"high-pass",cutoffHz:210.22,linearGain:.5},{type:"peak",cutoffHz:1414.21,linearGain:2.8284},{type:"peak",cutoffHz:2828.43,linearGain:2}],eqFilterType:!1,eqSimpleCut:10,eqSimplePeak:0,envelopeSpeed:12,discreteEnvelope:!1,eqSubFilters0:[{type:"low-pass",cutoffHz:13454.34,linearGain:.5},{type:"high-pass",cutoffHz:210.22,linearGain:.5},{type:"peak",cutoffHz:1414.21,linearGain:2.8284},{type:"peak",cutoffHz:2828.43,linearGain:2}],effects:["detune","chorus"],detuneCents:-20,panDelay:10,chorus:29,fadeInSeconds:0,fadeOutTicks:-1,wave:"1-bit white",unison:"none",envelopes:[{target:"noteVolume",envelope:"twang 1"}]}},{name:"CSnare68_p2",generalMidi:!1,settings:{type:"noise",eqFilter:[{type:"peak",cutoffHz:3363.59,linearGain:.0884},{type:"peak",cutoffHz:594.6,linearGain:.0884}],eqFilterType:!1,eqSimpleCut:10,eqSimplePeak:0,envelopeSpeed:12,discreteEnvelope:!1,eqSubFilters0:[{type:"peak",cutoffHz:3363.59,linearGain:.0884},{type:"peak",cutoffHz:594.6,linearGain:.0884}],effects:["chorus"],panDelay:10,chorus:29,fadeInSeconds:0,fadeOutTicks:-1,wave:"crackling",unison:"none",envelopes:[{target:"noteVolume",envelope:"twang 1"}]}},{name:"HiHat68",generalMidi:!1,settings:{type:"spectrum",eqFilter:[{type:"peak",cutoffHz:8e3,linearGain:1.4142},{type:"peak",cutoffHz:594.6,linearGain:.3536},{type:"peak",cutoffHz:1681.79,linearGain:.5},{type:"peak",cutoffHz:4e3,linearGain:.0884},{type:"peak",cutoffHz:125,linearGain:.3536}],eqFilterType:!1,eqSimpleCut:10,eqSimplePeak:0,envelopeSpeed:12,discreteEnvelope:!1,eqSubFilters0:[{type:"peak",cutoffHz:8e3,linearGain:1.4142},{type:"peak",cutoffHz:594.6,linearGain:.3536},{type:"peak",cutoffHz:1681.79,linearGain:.5},{type:"peak",cutoffHz:4e3,linearGain:.0884},{type:"peak",cutoffHz:125,linearGain:.3536}],effects:["chord type","note filter","chorus","reverb"],chord:"strum",fastTwoNoteArp:!1,arpeggioSpeed:12,noteFilterType:!1,noteSimpleCut:10,noteSimplePeak:0,noteFilter:[{type:"low-pass",cutoffHz:16e3,linearGain:.7071}],noteSubFilters0:[{type:"low-pass",cutoffHz:16e3,linearGain:.7071}],noteSubFilters1:[{type:"low-pass",cutoffHz:4e3,linearGain:.5}],panDelay:10,chorus:14,reverb:10,fadeInSeconds:0,fadeOutTicks:24,spectrum:[14,29,29,14,29,29,29,14,29,29,43,29,29,43,43,43,43,57,43,71,57,71,71,86,100,100,71,43,71,71],unison:"none",envelopes:[{target:"noteFilterFreq",envelope:"twang 3",index:0}]}}])},{name:"Vocal",presets:S([{name:"Ouw-Filter",generalMidi:!1,settings:{type:"chip",eqFilter:[],eqFilterType:!1,eqSimpleCut:10,eqSimplePeak:0,envelopeSpeed:4,discreteEnvelope:!1,eqSubFilters0:[],effects:["transition type","note filter","distortion","bitcrusher","echo"],transition:"interrupt",clicklessTransition:!1,noteFilterType:!1,noteSimpleCut:10,noteSimplePeak:0,noteFilter:[{type:"low-pass",cutoffHz:6727.17,linearGain:11.3137},{type:"peak",cutoffHz:594.6,linearGain:11.3137},{type:"peak",cutoffHz:2e3,linearGain:11.3137},{type:"peak",cutoffHz:1e3,linearGain:.0884},{type:"peak",cutoffHz:4e3,linearGain:.0884}],noteSubFilters0:[{type:"low-pass",cutoffHz:6727.17,linearGain:11.3137},{type:"peak",cutoffHz:594.6,linearGain:11.3137},{type:"peak",cutoffHz:2e3,linearGain:11.3137},{type:"peak",cutoffHz:1e3,linearGain:.0884},{type:"peak",cutoffHz:4e3,linearGain:.0884}],noteSubFilters1:[{type:"low-pass",cutoffHz:19027.31,linearGain:.7071}],distortion:43,aliases:!1,bitcrusherOctave:6.5,bitcrusherQuantization:0,panDelay:0,echoSustain:71,echoDelayBeats:.5,fadeInSeconds:0,fadeOutTicks:-1,wave:"sawtooth",unison:"none",isUsingAdvancedLoopControls:!1,chipWaveLoopStart:0,chipWaveLoopEnd:32,chipWaveLoopMode:0,chipWavePlayBackwards:!1,chipWaveStartOffset:0,envelopes:[{target:"noteFilterFreq",envelope:"decay 3",index:0},{target:"noteFilterFreq",envelope:"decay 3",index:1}]}}])},{name:"Funny",presets:S([{name:"Aouw-Bass",generalMidi:!1,settings:{type:"FM",eqFilter:[{type:"low-pass",cutoffHz:4756.83,linearGain:.3536},{type:"high-pass",cutoffHz:148.65,linearGain:.5}],eqFilterType:!1,eqSimpleCut:10,eqSimplePeak:0,envelopeSpeed:12,discreteEnvelope:!1,eqSubFilters0:[{type:"low-pass",cutoffHz:4756.83,linearGain:.3536},{type:"high-pass",cutoffHz:148.65,linearGain:.5}],eqSubFilters1:[],effects:["detune","note filter","bitcrusher","reverb"],detuneCents:16,noteFilterType:!1,noteSimpleCut:10,noteSimplePeak:0,noteFilter:[{type:"peak",cutoffHz:1e3,linearGain:5.6569},{type:"peak",cutoffHz:2378.41,linearGain:8}],noteSubFilters0:[{type:"peak",cutoffHz:1e3,linearGain:5.6569},{type:"peak",cutoffHz:2378.41,linearGain:8}],bitcrusherOctave:5,bitcrusherQuantization:0,panDelay:10,reverb:0,fadeInSeconds:0,fadeOutTicks:-3,algorithm:"1←(2 3 4)",feedbackType:"1⟲ 2⟲ 3⟲ 4⟲",feedbackAmplitude:8,operators:[{frequency:"1×",amplitude:15,waveform:"sine",pulseWidth:5},{frequency:"2×",amplitude:4,waveform:"sine",pulseWidth:5},{frequency:"1×",amplitude:8,waveform:"sine",pulseWidth:5},{frequency:"100×",amplitude:2,waveform:"sine",pulseWidth:5},{frequency:"1×",amplitude:0,waveform:"sine",pulseWidth:5},{frequency:"1×",amplitude:0,waveform:"sine",pulseWidth:5}],envelopes:[{target:"operatorAmplitude",envelope:"punch",index:3},{target:"feedbackAmplitude",envelope:"decay 2"},{target:"operatorAmplitude",envelope:"twang 3",index:1},{target:"noteFilterAllFreqs",envelope:"twang 3"}]}},{name:"Broken-Bass",generalMidi:!1,settings:{type:"FM",eqFilter:[],eqFilterType:!1,eqSimpleCut:10,eqSimplePeak:0,envelopeSpeed:12,discreteEnvelope:!1,eqSubFilters0:[],eqSubFilters1:[],effects:["transition type","detune","bitcrusher"],transition:"normal",clicklessTransition:!0,detuneCents:0,bitcrusherOctave:4.5,bitcrusherQuantization:29,panDelay:10,fadeInSeconds:0,fadeOutTicks:-3,algorithm:"1←(2 3 4)",feedbackType:"1⟲ 2⟲ 3⟲ 4⟲",feedbackAmplitude:4,operators:[{frequency:"1×",amplitude:15,waveform:"sine",pulseWidth:5},{frequency:"1×",amplitude:4,waveform:"sine",pulseWidth:5},{frequency:"1×",amplitude:9,waveform:"sine",pulseWidth:5},{frequency:"100×",amplitude:3,waveform:"sine",pulseWidth:5},{frequency:"1×",amplitude:0,waveform:"sine",pulseWidth:5},{frequency:"1×",amplitude:0,waveform:"sine",pulseWidth:5}],envelopes:[{target:"noteVolume",envelope:"note size"}]}},{name:"OWU",generalMidi:!1,settings:{type:"FM",eqFilter:[{type:"low-pass",cutoffHz:4756.83,linearGain:.3536},{type:"high-pass",cutoffHz:148.65,linearGain:.5}],eqFilterType:!1,eqSimpleCut:10,eqSimplePeak:0,envelopeSpeed:12,discreteEnvelope:!1,eqSubFilters0:[{type:"low-pass",cutoffHz:4756.83,linearGain:.3536},{type:"high-pass",cutoffHz:148.65,linearGain:.5}],eqSubFilters1:[],effects:["pitch shift","detune","note filter","bitcrusher","reverb"],pitchShiftSemitones:28,detuneCents:0,noteFilterType:!1,noteSimpleCut:10,noteSimplePeak:0,noteFilter:[{type:"peak",cutoffHz:1e3,linearGain:5.6569},{type:"peak",cutoffHz:2378.41,linearGain:8},{type:"peak",cutoffHz:1681.79,linearGain:.0884},{type:"low-pass",cutoffHz:4e3,linearGain:1}],noteSubFilters0:[{type:"peak",cutoffHz:1e3,linearGain:5.6569},{type:"peak",cutoffHz:2378.41,linearGain:8},{type:"peak",cutoffHz:1681.79,linearGain:.0884},{type:"low-pass",cutoffHz:4e3,linearGain:1}],bitcrusherOctave:5,bitcrusherQuantization:14,panDelay:10,reverb:23,fadeInSeconds:0,fadeOutTicks:-3,algorithm:"1←(2 3 4)",feedbackType:"1⟲ 2⟲ 3⟲ 4⟲",feedbackAmplitude:6,operators:[{frequency:"1×",amplitude:15,waveform:"sine",pulseWidth:5},{frequency:"2×",amplitude:4,waveform:"sine",pulseWidth:5},{frequency:"1×",amplitude:8,waveform:"sine",pulseWidth:5},{frequency:"20×",amplitude:10,waveform:"sine",pulseWidth:5},{frequency:"1×",amplitude:0,waveform:"sine",pulseWidth:5},{frequency:"1×",amplitude:0,waveform:"sine",pulseWidth:5}],envelopes:[{target:"feedbackAmplitude",envelope:"decay 2"},{target:"noteFilterAllFreqs",envelope:"twang 3"},{target:"operatorAmplitude",envelope:"decay 3",index:3},{target:"pitchShift",envelope:"tremolo3"}]}},{name:"MAD",generalMidi:!1,settings:{type:"FM6op",eqFilter:[],eqFilterType:!1,eqSimpleCut:10,eqSimplePeak:0,envelopeSpeed:12,discreteEnvelope:!1,eqSubFilters0:[],effects:["transition type","vibrato","note filter","bitcrusher"],transition:"interrupt",clicklessTransition:!1,vibrato:"custom",vibratoDepth:.08,vibratoDelay:26,vibratoSpeed:10,vibratoType:0,noteFilterType:!1,noteSimpleCut:10,noteSimplePeak:0,noteFilter:[],noteSubFilters0:[],bitcrusherOctave:6.5,bitcrusherQuantization:57,panDelay:10,fadeInSeconds:0,fadeOutTicks:-1,algorithm:"1←3 2←(4 5 6)",feedbackType:"1⟲ 2⟲",feedbackAmplitude:6,operators:[{frequency:"1×",amplitude:15,waveform:"sine",pulseWidth:5},{frequency:"1×",amplitude:6,waveform:"sine",pulseWidth:5},{frequency:"1×",amplitude:3,waveform:"sine",pulseWidth:5},{frequency:"1×",amplitude:12,waveform:"sine",pulseWidth:5},{frequency:"2×",amplitude:3,waveform:"sine",pulseWidth:5},{frequency:"4×",amplitude:12,waveform:"sine",pulseWidth:5}],envelopes:[]}},{name:"Goofy-Chime",generalMidi:!1,settings:{type:"FM",eqFilter:[{type:"high-pass",cutoffHz:420.45,linearGain:.3536},{type:"peak",cutoffHz:3363.59,linearGain:.5}],eqFilterType:!1,eqSimpleCut:10,eqSimplePeak:0,envelopeSpeed:12,discreteEnvelope:!1,eqSubFilters0:[{type:"high-pass",cutoffHz:420.45,linearGain:.3536},{type:"peak",cutoffHz:3363.59,linearGain:.5}],effects:["transition type","note filter","distortion","chorus","echo","reverb"],transition:"interrupt",clicklessTransition:!1,noteFilterType:!1,noteSimpleCut:10,noteSimplePeak:0,noteFilter:[{type:"low-pass",cutoffHz:11313.71,linearGain:1.4142}],noteSubFilters0:[{type:"low-pass",cutoffHz:11313.71,linearGain:1.4142}],distortion:0,aliases:!1,panDelay:10,chorus:57,echoSustain:57,echoDelayBeats:.5,reverb:10,fadeInSeconds:0,fadeOutTicks:-1,algorithm:"1 2 3 4",feedbackType:"1⟲",feedbackAmplitude:0,operators:[{frequency:"1×",amplitude:15,waveform:"sawtooth",pulseWidth:5},{frequency:"11×",amplitude:15,waveform:"triangle",pulseWidth:5},{frequency:"2×",amplitude:15,waveform:"triangle",pulseWidth:5},{frequency:"2×",amplitude:15,waveform:"pulse width",pulseWidth:5},{frequency:"1×",amplitude:0,waveform:"sine",pulseWidth:5},{frequency:"1×",amplitude:0,waveform:"sine",pulseWidth:5}],envelopes:[{target:"noteFilterAllFreqs",envelope:"swell 1"},{target:"noteFilterAllFreqs",envelope:"twang 3"},{target:"noteFilterFreq",envelope:"wibble 2",index:0}]}},{name:"Fall",generalMidi:!1,settings:{type:"spectrum",eqFilter:[{type:"high-pass",cutoffHz:707.11,linearGain:.7071}],eqFilterType:!1,eqSimpleCut:10,eqSimplePeak:0,envelopeSpeed:12,discreteEnvelope:!1,eqSubFilters0:[{type:"high-pass",cutoffHz:707.11,linearGain:.7071}],effects:["transition type","note filter","bitcrusher","echo","reverb"],transition:"normal",clicklessTransition:!1,noteFilterType:!1,noteSimpleCut:10,noteSimplePeak:0,noteFilter:[{type:"low-pass",cutoffHz:2378.41,linearGain:.5}],noteSubFilters0:[{type:"low-pass",cutoffHz:2378.41,linearGain:.5}],bitcrusherOctave:2,bitcrusherQuantization:43,panDelay:10,echoSustain:71,echoDelayBeats:2,reverb:68,fadeInSeconds:0,fadeOutTicks:-1,spectrum:[100,0,0,0,0,0,0,71,0,0,0,57,0,0,71,0,0,86,0,100,0,43,0,0,71,14,43,0,71,0],unison:"dirty",envelopes:[{target:"noteVolume",envelope:"tremolo0"},{target:"noteFilterFreq",envelope:"wibble 3",index:0}]}},{name:"Silly-String",generalMidi:!1,settings:{type:"FM",eqFilter:[{type:"high-pass",cutoffHz:297.3,linearGain:.3536},{type:"peak",cutoffHz:2e3,linearGain:.0884},{type:"peak",cutoffHz:500,linearGain:1.4142},{type:"peak",cutoffHz:594.6,linearGain:.125}],eqFilterType:!1,eqSimpleCut:10,eqSimplePeak:0,envelopeSpeed:12,discreteEnvelope:!1,eqSubFilters0:[{type:"high-pass",cutoffHz:297.3,linearGain:.3536},{type:"peak",cutoffHz:2e3,linearGain:.0884},{type:"peak",cutoffHz:500,linearGain:1.4142},{type:"peak",cutoffHz:594.6,linearGain:.125}],effects:["chord type","vibrato","echo","reverb"],chord:"strum",fastTwoNoteArp:!1,arpeggioSpeed:12,vibrato:"light",vibratoDepth:.15,vibratoDelay:0,vibratoSpeed:10,vibratoType:0,panDelay:10,echoSustain:100,echoDelayBeats:1.083,reverb:6,fadeInSeconds:.075,fadeOutTicks:6,algorithm:"(1 2 3)←4",feedbackType:"3→4",feedbackAmplitude:0,operators:[{frequency:"50×",amplitude:12,waveform:"ramp",pulseWidth:5},{frequency:"0.5×",amplitude:13,waveform:"trapezoid",pulseWidth:5},{frequency:"0.5×",amplitude:13,waveform:"triangle",pulseWidth:5},{frequency:"4×",amplitude:1,waveform:"sine",pulseWidth:5},{frequency:"1×",amplitude:0,waveform:"sine",pulseWidth:5},{frequency:"1×",amplitude:0,waveform:"sine",pulseWidth:5}],envelopes:[]}},{name:"Sharkfin",generalMidi:!1,settings:{type:"chip",eqFilter:[],eqFilterType:!1,eqSimpleCut:10,eqSimplePeak:0,envelopeSpeed:12,discreteEnvelope:!1,eqSubFilters0:[],effects:["transition type"],transition:"normal",clicklessTransition:!1,panDelay:10,fadeInSeconds:0,fadeOutTicks:-1,wave:"Sharkfin",unison:"none",isUsingAdvancedLoopControls:!0,chipWaveLoopStart:0,chipWaveLoopEnd:32,chipWaveLoopMode:0,chipWavePlayBackwards:!1,chipWaveStartOffset:0,envelopes:[]}}])},{name:"Memory",presets:S([])},{name:"MISC(WIP)",presets:S([])},{name:"🪚",presets:S([{name:"M Tooth",generalMidi:!1,settings:{type:"chip",eqFilter:[],eqFilterType:!1,eqSimpleCut:10,eqSimplePeak:0,envelopeSpeed:12,discreteEnvelope:!1,eqSubFilters0:[],effects:["transition type"],transition:"normal",clicklessTransition:!1,panDelay:10,fadeInSeconds:0,fadeOutTicks:-1,wave:"M Tooth",unison:"none",isUsingAdvancedLoopControls:!1,chipWaveLoopStart:0,chipWaveLoopEnd:48,chipWaveLoopMode:0,chipWavePlayBackwards:!1,chipWaveStartOffset:0,envelopes:[]}},{name:"Great Tooth",generalMidi:!1,settings:{type:"chip",eqFilter:[],eqFilterType:!1,eqSimpleCut:10,eqSimplePeak:0,envelopeSpeed:12,discreteEnvelope:!1,eqSubFilters0:[],effects:["transition type"],transition:"normal",clicklessTransition:!1,panDelay:10,fadeInSeconds:0,fadeOutTicks:-1,wave:"Great Tooth",unison:"none",isUsingAdvancedLoopControls:!1,chipWaveLoopStart:0,chipWaveLoopEnd:48,chipWaveLoopMode:0,chipWavePlayBackwards:!1,chipWaveStartOffset:0,envelopes:[]}},{name:"Lance Tooth",generalMidi:!1,settings:{type:"chip",eqFilter:[],eqFilterType:!1,eqSimpleCut:10,eqSimplePeak:0,envelopeSpeed:12,discreteEnvelope:!1,eqSubFilters0:[],effects:["transition type"],transition:"normal",clicklessTransition:!1,panDelay:10,fadeInSeconds:0,fadeOutTicks:-1,wave:"Lance Tooth",unison:"none",isUsingAdvancedLoopControls:!1,chipWaveLoopStart:0,chipWaveLoopEnd:80,chipWaveLoopMode:0,chipWavePlayBackwards:!1,chipWaveStartOffset:0,envelopes:[]}},{name:"Champion Tooth",generalMidi:!1,settings:{type:"chip",eqFilter:[],eqFilterType:!1,eqSimpleCut:10,eqSimplePeak:0,envelopeSpeed:12,discreteEnvelope:!1,eqSubFilters0:[],effects:["transition type"],transition:"normal",clicklessTransition:!1,panDelay:10,fadeInSeconds:0,fadeOutTicks:-1,wave:"Champ Tooth",unison:"none",isUsingAdvancedLoopControls:!1,chipWaveLoopStart:0,chipWaveLoopEnd:96,chipWaveLoopMode:0,chipWavePlayBackwards:!1,chipWaveStartOffset:0,envelopes:[]}},{name:"Skip Tooth",generalMidi:!1,settings:{type:"chip",eqFilter:[],eqFilterType:!1,eqSimpleCut:10,eqSimplePeak:0,envelopeSpeed:12,discreteEnvelope:!1,eqSubFilters0:[],effects:["transition type"],transition:"normal",clicklessTransition:!1,panDelay:10,fadeInSeconds:0,fadeOutTicks:-1,wave:"Skip Tooth",unison:"none",isUsingAdvancedLoopControls:!1,chipWaveLoopStart:0,chipWaveLoopEnd:32,chipWaveLoopMode:0,chipWavePlayBackwards:!1,chipWaveStartOffset:0,envelopes:[]}},{name:"Double Tooth",generalMidi:!1,settings:{type:"chip",eqFilter:[],eqFilterType:!1,eqSimpleCut:10,eqSimplePeak:0,envelopeSpeed:12,discreteEnvelope:!1,eqSubFilters0:[],effects:["transition type"],transition:"normal",clicklessTransition:!1,panDelay:10,fadeInSeconds:0,fadeOutTicks:-1,wave:"Double Tooth",unison:"none",isUsingAdvancedLoopControls:!1,chipWaveLoopStart:0,chipWaveLoopEnd:80,chipWaveLoopMode:0,chipWavePlayBackwards:!1,chipWaveStartOffset:0,envelopes:[]}},{name:"Reverse Skip",generalMidi:!1,settings:{type:"chip",eqFilter:[],eqFilterType:!1,eqSimpleCut:10,eqSimplePeak:0,envelopeSpeed:12,discreteEnvelope:!1,eqSubFilters0:[],effects:["transition type"],transition:"normal",clicklessTransition:!1,panDelay:10,fadeInSeconds:0,fadeOutTicks:-1,wave:"Alt Skip Tooth",unison:"none",isUsingAdvancedLoopControls:!1,chipWaveLoopStart:0,chipWaveLoopEnd:224,chipWaveLoopMode:0,chipWavePlayBackwards:!1,chipWaveStartOffset:0,envelopes:[]}}])},{name:"OLD/Legacy",presets:S([{name:"Legacy saw_rise",midiProgram:71,settings:{type:"chip",eqFilter:[],eqFilterType:!1,eqSimpleCut:10,eqSimplePeak:0,envelopeSpeed:12,discreteEnvelope:!1,eqSubFilters0:[],effects:["transition type"],transition:"interrupt",clicklessTransition:!1,panDelay:10,fadeInSeconds:0,fadeOutTicks:-1,wave:"Old_Falling Saw",unison:"none",isUsingAdvancedLoopControls:!1,chipWaveLoopStart:0,chipWaveLoopEnd:64,chipWaveLoopMode:0,chipWavePlayBackwards:!1,chipWaveStartOffset:0,envelopes:[]}},{name:"Legacy saw_fall",midiProgram:71,settings:{type:"chip",eqFilter:[],eqFilterType:!1,eqSimpleCut:10,eqSimplePeak:0,envelopeSpeed:12,discreteEnvelope:!1,eqSubFilters0:[],effects:["transition type"],transition:"interrupt",clicklessTransition:!1,panDelay:10,fadeInSeconds:0,fadeOutTicks:-1,wave:"Old_Rising Saw",unison:"none",isUsingAdvancedLoopControls:!1,chipWaveLoopStart:0,chipWaveLoopEnd:64,chipWaveLoopMode:0,chipWavePlayBackwards:!1,chipWaveStartOffset:0,envelopes:[]}},{name:"Old_Obelisco",midiProgram:68,settings:{type:"chip",eqFilter:[],eqFilterType:!1,eqSimpleCut:10,eqSimplePeak:0,envelopeSpeed:12,discreteEnvelope:!1,eqSubFilters0:[],effects:["transition type"],transition:"interrupt",clicklessTransition:!1,panDelay:10,fadeInSeconds:0,fadeOutTicks:-1,wave:"Old_Obelisco",unison:"none",isUsingAdvancedLoopControls:!1,chipWaveLoopStart:0,chipWaveLoopEnd:64,chipWaveLoopMode:0,chipWavePlayBackwards:!1,chipWaveStartOffset:0,envelopes:[]}},{name:"Old_Half Obelisco ↑",midiProgram:71,settings:{type:"chip",eqFilter:[],eqFilterType:!1,eqSimpleCut:10,eqSimplePeak:0,envelopeSpeed:12,discreteEnvelope:!1,eqSubFilters0:[],effects:["transition type"],transition:"interrupt",clicklessTransition:!1,panDelay:10,fadeInSeconds:0,fadeOutTicks:-1,wave:"Old_Half Obelisco ↑",unison:"none",isUsingAdvancedLoopControls:!1,chipWaveLoopStart:0,chipWaveLoopEnd:64,chipWaveLoopMode:0,chipWavePlayBackwards:!1,chipWaveStartOffset:0,envelopes:[]}},{name:"Old_Half Obelisco ↓",midiProgram:71,settings:{type:"chip",eqFilter:[],eqFilterType:!1,eqSimpleCut:10,eqSimplePeak:0,envelopeSpeed:12,discreteEnvelope:!1,eqSubFilters0:[],effects:["transition type"],transition:"interrupt",clicklessTransition:!1,panDelay:10,fadeInSeconds:0,fadeOutTicks:-1,wave:"Old_Half Obelisco ↓",unison:"none",isUsingAdvancedLoopControls:!1,chipWaveLoopStart:0,chipWaveLoopEnd:64,chipWaveLoopMode:0,chipWavePlayBackwards:!1,chipWaveStartOffset:0,envelopes:[]}},{name:"Old_Pseudo Sine",midiProgram:70,settings:{type:"chip",eqFilter:[],eqFilterType:!1,eqSimpleCut:10,eqSimplePeak:0,envelopeSpeed:12,discreteEnvelope:!1,eqSubFilters0:[],effects:["transition type"],transition:"interrupt",clicklessTransition:!1,panDelay:10,fadeInSeconds:0,fadeOutTicks:-1,wave:"Old_Pseudo Sine",unison:"none",isUsingAdvancedLoopControls:!1,chipWaveLoopStart:0,chipWaveLoopEnd:64,chipWaveLoopMode:0,chipWavePlayBackwards:!1,chipWaveStartOffset:0,envelopes:[]}},{name:"Old_ST Kick",midiProgram:72,settings:{type:"chip",eqFilter:[],eqFilterType:!1,eqSimpleCut:10,eqSimplePeak:0,envelopeSpeed:12,discreteEnvelope:!1,eqSubFilters0:[],effects:["transition type"],transition:"interrupt",clicklessTransition:!1,panDelay:10,fadeInSeconds:0,fadeOutTicks:-1,wave:"Old_ST Kick",unison:"none",isUsingAdvancedLoopControls:!1,chipWaveLoopStart:0,chipWaveLoopEnd:64,chipWaveLoopMode:0,chipWavePlayBackwards:!1,chipWaveStartOffset:0,envelopes:[]}},{name:"Old_Sync Buzzer Test",midiProgram:70,settings:{type:"chip",eqFilter:[],eqFilterType:!1,eqSimpleCut:10,eqSimplePeak:0,envelopeSpeed:12,discreteEnvelope:!1,eqSubFilters0:[],effects:["transition type"],transition:"normal",clicklessTransition:!1,panDelay:10,fadeInSeconds:0,fadeOutTicks:-1,wave:"Old_Sync Buzzer Test",unison:"none",isUsingAdvancedLoopControls:!1,chipWaveLoopStart:0,chipWaveLoopEnd:64,chipWaveLoopMode:0,chipWavePlayBackwards:!1,chipWaveStartOffset:0,envelopes:[]}}])}]);class A{constructor(){this.i=1,this.o=[void 0],this.l=0,this.p=0,this.u=0}pushFront(e){this.u>=this.i&&this.h(),this.p=this.p-1&this.l,this.o[this.p]=e,this.u++}pushBack(e){this.u>=this.i&&this.h(),this.o[this.p+this.u&this.l]=e,this.u++}popFront(){if(this.u<=0)throw new Error("No elements left to pop.");const e=this.o[this.p];return this.o[this.p]=void 0,this.p=this.p+1&this.l,this.u--,e}popBack(){if(this.u<=0)throw new Error("No elements left to pop.");this.u--;const e=this.p+this.u&this.l,t=this.o[e];return this.o[e]=void 0,t}peakFront(){if(this.u<=0)throw new Error("No elements left to pop.");return this.o[this.p]}peakBack(){if(this.u<=0)throw new Error("No elements left to pop.");return this.o[this.p+this.u-1&this.l]}count(){return this.u}set(e,t){if(e<0||e>=this.u)throw new Error("Invalid index");this.o[this.p+e&this.l]=t}get(e){if(e<0||e>=this.u)throw new Error("Invalid index");return this.o[this.p+e&this.l]}remove(e){if(e<0||e>=this.u)throw new Error("Invalid index");if(e<=this.u>>1){for(;e>0;)this.set(e,this.get(e-1)),e--;this.popFront()}else{for(e++;e<this.u;)this.set(e-1,this.get(e)),e++;this.popBack()}}h(){if(this.i>=1073741824)throw new Error("Capacity too big.");this.i=this.i<<1;const e=this.o,t=new Array(this.i),i=0|this.u,n=0|this.p;for(let s=0;s<i;s++)t[s]=e[n+s&this.l];for(let e=i;e<this.i;e++)t[e]=void 0;this.p=0,this.o=t,this.l=this.i-1}}const E=new class{constructor(){this.activeEvents=[],this.listeners={},this.activeEvents=[],this.listeners={}}raise(e,t,i){if(null!=this.listeners[e]){this.activeEvents.push(e);for(let n=0;n<this.listeners[e].length;n++)this.listeners[e][n](t,i);this.activeEvents.pop()}}listen(e,t){null==this.listeners[e]&&(this.listeners[e]=[]),this.listeners[e].push(t)}unlisten(e,t){if(null==this.listeners[e])return;const i=this.listeners[e].indexOf(t);-1!=i&&this.listeners[e].splice(i,1)}unlistenAll(e){null!=this.listeners[e]&&(this.listeners[e]=[])}};class L{constructor(){this.a=[1],this.b=[1],this.order=0}linearGain0thOrder(e){this.b[0]=e,this.order=0}lowPass1stOrderButterworth(e){const t=1/Math.tan(.5*e),i=1+t;this.a[1]=(1-t)/i,this.b[1]=this.b[0]=1/i,this.order=1}lowPass1stOrderSimplified(e){const t=2*Math.sin(.5*e);this.a[1]=t-1,this.b[0]=t,this.b[1]=0,this.order=1}highPass1stOrderButterworth(e){const t=1/Math.tan(.5*e),i=1+t;this.a[1]=(1-t)/i,this.b[0]=t/i,this.b[1]=-t/i,this.order=1}highShelf1stOrder(e,t){const i=Math.tan(.5*e),n=Math.sqrt(t),s=(i*n-1)/(i*n+1);this.a[1]=s/1,this.b[0]=(1+s+t*(1-s))/2,this.b[1]=(1+s-t*(1-s))/2,this.order=1}allPass1stOrderInvertPhaseAbove(e){const t=(Math.sin(e)-1)/Math.cos(e);this.a[1]=t,this.b[0]=t,this.b[1]=1,this.order=1}allPass1stOrderFractionalDelay(e){const t=(1-e)/(1+e);this.a[1]=t,this.b[0]=t,this.b[1]=1,this.order=1}lowPass2ndOrderButterworth(e,t){const i=Math.sin(e)/(2*t),n=Math.cos(e),s=1+i;this.a[1]=-2*n/s,this.a[2]=(1-i)/s,this.b[2]=this.b[0]=(1-n)/(2*s),this.b[1]=(1-n)/s,this.order=2}lowPass2ndOrderSimplified(e,t){const i=2*Math.sin(e/2),n=1-1/(2*t),s=n+n/(1-i);this.a[1]=2*i+(i-1)*i*s-2,this.a[2]=(i-1)*(i-i*s-1),this.b[0]=i*i,this.b[1]=0,this.b[2]=0,this.order=2}highPass2ndOrderButterworth(e,t){const i=Math.sin(e)/(2*t),n=Math.cos(e),s=1+i;this.a[1]=-2*n/s,this.a[2]=(1-i)/s,this.b[2]=this.b[0]=(1+n)/(2*s),this.b[1]=-(1+n)/s,this.order=2}highShelf2ndOrder(e,t,i){const n=Math.sqrt(t),s=Math.cos(e),a=n+1,r=n-1,o=.5*Math.sin(e)*Math.sqrt(a/n*(1/i-1)+2),l=2*Math.sqrt(n)*o,p=a-r*s+l;this.a[1]=2*(r-a*s)/p,this.a[2]=(a-r*s-l)/p,this.b[0]=n*(a+r*s+l)/p,this.b[1]=-2*n*(r+a*s)/p,this.b[2]=n*(a+r*s-l)/p,this.order=2}peak2ndOrder(e,t,i){const n=Math.sqrt(t),s=i*e/(n>=1?n:1/n),a=Math.tan(.5*s),r=1+a/n;this.b[0]=(1+a*n)/r,this.b[1]=this.a[1]=-2*Math.cos(e)/r,this.b[2]=(1-a*n)/r,this.a[2]=(1-a/n)/r,this.order=2}}class R{constructor(){this.real=0,this.imag=0,this.denom=1}analyze(e,t){this.analyzeComplex(e,Math.cos(t),Math.sin(t))}analyzeComplex(e,t,i){const n=e.a,s=e.b,a=t,r=-i;let o=s[0]+s[1]*a,l=s[1]*r,p=1+n[1]*a,u=n[1]*r,c=a,h=r;for(let t=2;t<=e.order;t++){const e=c*r+h*a;c=c*a-h*r,h=e,o+=s[t]*c,l+=s[t]*h,p+=n[t]*c,u+=n[t]*h}this.denom=p*p+u*u,this.real=o*p+l*u,this.imag=l*p-o*u}magnitude(){return Math.sqrt(this.real*this.real+this.imag*this.imag)/this.denom}angle(){return Math.atan2(this.imag,this.real)}}class N{constructor(){this.a1=0,this.a2=0,this.b0=1,this.b1=0,this.b2=0,this.a1Delta=0,this.a2Delta=0,this.b0Delta=0,this.b1Delta=0,this.b2Delta=0,this.output1=0,this.output2=0,this.useMultiplicativeInputCoefficients=!1}resetOutput(){this.output1=0,this.output2=0}loadCoefficientsWithGradient(e,t,i,n){if(2!=e.order||2!=t.order)throw new Error;this.a1=e.a[1],this.a2=e.a[2],this.b0=e.b[0],this.b1=e.b[1],this.b2=e.b[2],this.a1Delta=(t.a[1]-e.a[1])*i,this.a2Delta=(t.a[2]-e.a[2])*i,n?(this.b0Delta=Math.pow(t.b[0]/e.b[0],i),this.b1Delta=Math.pow(t.b[1]/e.b[1],i),this.b2Delta=Math.pow(t.b[2]/e.b[2],i)):(this.b0Delta=(t.b[0]-e.b[0])*i,this.b1Delta=(t.b[1]-e.b[1])*i,this.b2Delta=(t.b[2]-e.b[2])*i),this.useMultiplicativeInputCoefficients=n}}function B(e){return 2*Math.atan(.5*e)}const V=1e-24;function $(e,t,i){return i<=(t-=1)?i>=e?i:e:t}function _(e,t,i){if(e<=i&&i<=t)return i;throw new Error(`Value ${i} not in range [${e}, ${t}]`)}function U(e,t){let i=parseFloat(e);return Number.isNaN(i)&&(i=t),i}function j(e,t){let i=parseInt(e);return Number.isNaN(i)&&(i=t),i}function Q(e,t){e.push(Y[t>>>30&3]),e.push(Y[t>>>24&63]),e.push(Y[t>>>18&63]),e.push(Y[t>>>12&63]),e.push(Y[t>>>6&63]),e.push(Y[t>>>0&63])}function K(e,t){let i=0;return i|=Z[e.charCodeAt(t++)]<<30,i|=Z[e.charCodeAt(t++)]<<24,i|=Z[e.charCodeAt(t++)]<<18,i|=Z[e.charCodeAt(t++)]<<12,i|=Z[e.charCodeAt(t++)]<<6,i|=Z[e.charCodeAt(t++)]<<0,i}function J(e,t,i,n,s,a){e.push(Y[t]),e.push(Y[Number(i>0)]);let r=Math.round(1e3*Math.abs(i)),o=Math.floor(r/63);e.push(Y[r%63],Y[o%63],Y[Math.floor(o/63)]),e.push(Y[Number(n>0)]);let l=Math.round(1e3*Math.abs(n)),p=Math.floor(l/63);e.push(Y[l%63],Y[p%63],Y[Math.floor(p/63)]),e.push(Y[Number(s>0)]);let u=Math.round(1e3*Math.abs(s));e.push(Y[u%63],Y[Math.floor(u/63)]),e.push(Y[Number(a>0)]);let c=Math.round(1e3*Math.abs(a));e.push(Y[c%63],Y[Math.floor(c/63)])}function X(e){let t=$(0,u.keys.length,e),i=0;return 12===e?(t=0,i=1):13===e?(t=6,i=-1):14===e?(t=0,i=-1):15===e&&(t=5,i=-1),[t,i]}const Y=[48,49,50,51,52,53,54,55,56,57,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,45,95],Z=[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,62,62,0,0,1,2,3,4,5,6,7,8,9,0,0,0,0,0,0,0,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,0,0,0,0,63,0,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,0,0,0,0,0];class ee{constructor(e,t,i){this.m=[],this.v=0;for(let n=t;n<i;n++){const t=Z[e.charCodeAt(n)];this.m.push(t>>5&1),this.m.push(t>>4&1),this.m.push(t>>3&1),this.m.push(t>>2&1),this.m.push(t>>1&1),this.m.push(1&t)}}read(e){let t=0;for(;e>0;)t<<=1,t+=this.m[this.v++],e--;return t}readLongTail(e,t){let i=e,n=t;for(;this.m[this.v++];)i+=1<<n,n++;for(;n>0;)n--,this.m[this.v++]&&(i+=1<<n);return i}readPartDuration(){return this.readLongTail(1,3)}readLegacyPartDuration(){return this.readLongTail(1,2)}readPinCount(){return this.readLongTail(1,0)}readPitchInterval(){return this.read(1)?-this.readLongTail(1,3):this.readLongTail(1,3)}}class te{constructor(){this.g=0,this.m=[]}clear(){this.g=0}write(e,t){for(e--;e>=0;)this.m[this.g++]=t>>>e&1,e--}writeLongTail(e,t,i){if(i<e)throw new Error("value out of bounds");i-=e;let n=t;for(;i>=1<<n;)this.m[this.g++]=1,i-=1<<n,n++;for(this.m[this.g++]=0;n>0;)n--,this.m[this.g++]=i>>>n&1}writePartDuration(e){this.writeLongTail(1,3,e)}writePinCount(e){this.writeLongTail(1,0,e)}writePitchInterval(e){e<0?(this.write(1,1),this.writeLongTail(1,3,-e)):(this.write(1,0),this.writeLongTail(1,3,e))}concat(e){for(let t=0;t<e.g;t++)this.m[this.g++]=e.m[t]}encodeBase64(e){for(let t=0;t<this.g;t+=6){const i=this.m[t]<<5|this.m[t+1]<<4|this.m[t+2]<<3|this.m[t+3]<<2|this.m[t+4]<<1|this.m[t+5];e.push(Y[i])}return e}lengthBase64(){return Math.ceil(this.g/6)}}function ie(e,t,i){return{interval:e,time:t,size:i}}class ne{constructor(e,t,i,n,s=!1){this.pitches=[e],this.pins=[ie(0,0,n),ie(0,i-t,s?0:n)],this.start=t,this.end=i,this.continuesLastPattern=!1}pickMainInterval(){let e=0,t=0;for(let i=1;i<this.pins.length;i++){const n=this.pins[i-1],s=this.pins[i];if(n.interval==s.interval){const i=s.time-n.time;e<i&&(e=i,t=n.interval)}}if(0==e){let e=0;for(let i=0;i<this.pins.length;i++){const n=this.pins[i];e<n.size&&(e=n.size,t=n.interval)}}return t}clone(){const e=new ne(-1,this.start,this.end,3);e.pitches=this.pitches.concat(),e.pins=[];for(const t of this.pins)e.pins.push(ie(t.interval,t.time,t.size));return e.continuesLastPattern=this.continuesLastPattern,e}getEndPinIndex(e){let t;for(t=1;t<this.pins.length-1&&!(this.pins[t].time+this.start>e);t++);return t}}class se{constructor(){this.notes=[],this.instruments=[0]}cloneNotes(){const e=[];for(const t of this.notes)e.push(t.clone());return e}reset(){this.notes.length=0,this.instruments[0]=0,this.instruments.length=1}toJsonObject(e,t,i){const n=[];for(const s of this.notes){let a=t.instruments[this.instruments[0]],r=Math.max(0,u.modCount-s.pitches[0]-1),o=e.getVolumeCapForSetting(i,a.modulators[r],a.modFilterTypes[r]);const l=[];for(const t of s.pins){let n=i?Math.round(t.size):Math.round(100*t.size/o);l.push({tick:(t.time+s.start)*u.rhythms[e.rhythm].stepsPerBeat/u.partsPerBeat,pitchBend:t.interval,volume:n,forMod:i})}const p={pitches:s.pitches,points:l};0==s.start&&(p.continuesLastPattern=s.continuesLastPattern),n.push(p)}const s={notes:n};return e.patternInstruments&&(s.instruments=this.instruments.map((e=>e+1))),s}fromJsonObject(e,t,i,n,s,a,r="auto"){const o=r.toLowerCase();if(t.patternInstruments)if(Array.isArray(e.instruments)){const n=e.instruments,s=$(u.instrumentCountMin,t.getMaxInstrumentsPerPatternForChannel(i)+1,n.length);for(let e=0;e<s;e++)this.instruments[e]=$(0,i.instruments.length,(0|n[e])-1);this.instruments.length=s}else this.instruments[0]=$(0,i.instruments.length,(0|e.instrument)-1),this.instruments.length=1;if(e.notes&&e.notes.length>0){const r=Math.min(t.beatsPerBar*u.partsPerBeat*(a?u.modCount:1),e.notes.length>>>0);for(let l=0;l<e.notes.length&&!(l>=r);l++){const r=e.notes[l];if(!(r&&r.pitches&&r.pitches.length>=1&&r.points&&r.points.length>=2))continue;const p=new ne(0,0,0,0);p.pitches=[],p.pins=[];for(let e=0;e<r.pitches.length;e++){const t=0|r.pitches[e];if(-1==p.pitches.indexOf(t)&&(p.pitches.push(t),p.pitches.length>=u.maxChordSize))break}if(p.pitches.length<1)continue;let c=0,h=i.instruments[this.instruments[0]],f=Math.max(0,u.modCount-p.pitches[0]-1);for(let e=0;e<r.points.length;e++){const i=r.points[e];if(null==i||null==i.tick)continue;const s=null==i.pitchBend?0:0|i.pitchBend,o=Math.round(+i.tick*u.partsPerBeat/n);let l,d=t.getVolumeCapForSetting(a,h.modulators[f],h.modFilterTypes[f]);l=null==i.volume?d:null==i.forMod?Math.max(0,Math.min(d,Math.round((0|i.volume)*d/100))):(0|i.forMod)>0?Math.round(0|i.volume):Math.max(0,Math.min(d,Math.round((0|i.volume)*d/100))),o>t.beatsPerBar*u.partsPerBeat||(0==p.pins.length&&(p.start=o,c=s),p.pins.push(ie(s-c,o-p.start,l)))}if(p.pins.length<2)continue;p.end=p.pins[p.pins.length-1].time+p.start;const d=s?u.drumCount-1:u.maxPitch;let m=d,y=0;for(let e=0;e<p.pitches.length;e++)p.pitches[e]+=c,(p.pitches[e]<0||p.pitches[e]>d)&&(p.pitches.splice(e,1),e--),p.pitches[e]<m&&(m=p.pitches[e]),p.pitches[e]>y&&(y=p.pitches[e]);if(!(p.pitches.length<1)){for(let e=0;e<p.pins.length;e++){const t=p.pins[e];t.interval+m<0&&(t.interval=-m),t.interval+y>d&&(t.interval=d-y),e>=2&&t.interval==p.pins[e-1].interval&&t.interval==p.pins[e-2].interval&&t.size==p.pins[e-1].size&&t.size==p.pins[e-2].size&&(p.pins.splice(e-1,1),e--)}if(0==p.start?p.continuesLastPattern=!0===r.continuesLastPattern:p.continuesLastPattern=!1,"ultrabox"!=o&&h.modulators[f]==u.modulators.dictionary.tempo.index)for(const e of p.pins){const t=30,i=1,n=e.size+t;e.size=n-i}this.notes.push(p)}}}}}class ae{constructor(e){this.frequency=4,this.amplitude=0,this.waveform=0,this.pulseWidth=.5,this.reset(e)}reset(e){this.frequency=4,this.amplitude=e<=1?u.operatorAmplitudeMax:0,this.waveform=0,this.pulseWidth=5}copy(e){this.frequency=e.frequency,this.amplitude=e.amplitude,this.waveform=e.waveform,this.pulseWidth=e.pulseWidth}}class re{constructor(){this.name="",this.carrierCount=0,this.modulatedBy=[[],[],[],[],[],[]],this.associatedCarrier=[],this.fromPreset(1)}set(e,t){this.reset(),this.carrierCount=e;for(let i=0;i<this.modulatedBy.length;i++){this.modulatedBy[i]=t[i],i<e&&(this.associatedCarrier[i]=i+1),this.name+=i+1;for(let n=0;n<t[i].length;n++)this.name+=t[i][n],t[i][n]>e-1&&(this.associatedCarrier[t[i][n]-1]=i+1),this.name+=",";this.name+=i<e?"|":"."}}reset(){this.name="",this.carrierCount=1,this.modulatedBy=[[2,3,4,5,6],[],[],[],[],[]],this.associatedCarrier=[1,1,1,1,1,1]}copy(e){this.name=e.name,this.carrierCount=e.carrierCount,this.modulatedBy=e.modulatedBy,this.associatedCarrier=e.associatedCarrier}fromPreset(e){this.reset();let t=u.algorithms6Op[e];this.name=t.name,this.carrierCount=t.carrierCount;for(var i=0;i<t.modulatedBy.length;i++)this.modulatedBy[i]=Array.from(t.modulatedBy[i]),this.associatedCarrier[i]=t.associatedCarrier[i]}}class oe{constructor(){this.name="",this.indices=[[],[],[],[],[],[]],this.fromPreset(1)}set(e){this.reset();for(let t=0;t<this.indices.length;t++){this.indices[t]=e[t];for(let i=0;i<e[t].length;i++)this.name+=e[t][i],this.name+=",";this.name+="."}}reset(){this.reset,this.name="",this.indices=[[1],[],[],[],[],[]]}copy(e){this.name=e.name,this.indices=e.indices}fromPreset(e){this.reset();let t=u.feedbacks6Op[e];for(var i=0;i<t.indices.length;i++){this.indices[i]=Array.from(t.indices[i]);for(let e=0;e<t.indices[i].length;e++)this.name+=t.indices[i][e],this.name+=",";this.name+="."}}}class le{constructor(e){this.spectrum=[],this.hash=-1,this.reset(e)}reset(e){for(let t=0;t<u.spectrumControlPoints;t++)if(e)this.spectrum[t]=Math.round(u.spectrumMax*(1/Math.sqrt(1+t/3)));else{const e=0==t||7==t||11==t||14==t||16==t||18==t||21==t||23==t||t>=25;this.spectrum[t]=e?Math.max(0,Math.round(u.spectrumMax*(1-t/30))):0}this.markCustomWaveDirty()}markCustomWaveDirty(){const e=qe.fittingPowerOfTwo(u.spectrumMax+2)-1;let t=0;for(const i of this.spectrum)t=t*e+i>>>0;this.hash=t}}class pe{constructor(){this.wave=null,this.S=-1}getCustomWave(e,t){if(this.S==e.hash)return this.wave;this.S=e.hash;const i=u.spectrumNoiseLength;null!=this.wave&&this.wave.length==i+1||(this.wave=new Float32Array(i+1));const n=this.wave;for(let e=0;e<i;e++)n[e]=0;const s=[0,1/7,Math.log2(5/4),3/7,Math.log2(1.5),5/7,6/7];function a(e){return t+Math.floor(e/u.spectrumControlPointsPerOctave)+s[(e+u.spectrumControlPointsPerOctave)%u.spectrumControlPointsPerOctave]}let r=1;for(let t=0;t<u.spectrumControlPoints+1;t++){const s=t<=0?0:e.spectrum[t-1],o=t>=u.spectrumControlPoints?e.spectrum[u.spectrumControlPoints-1]:e.spectrum[t],l=a(t-1);let p=a(t);t>=u.spectrumControlPoints&&(p=14+.25*(p-14)),0==s&&0==o||(r+=.02*y(n,i,l,p,s/u.spectrumMax,o/u.spectrumMax,-.5))}return e.spectrum[u.spectrumControlPoints-1]>0&&(r+=.02*y(n,i,14+.25*(a(u.spectrumControlPoints)-14),14,e.spectrum[u.spectrumControlPoints-1]/u.spectrumMax,0,-.5)),W(n,i),O(n,5/(Math.sqrt(i)*Math.pow(r,.75))),n[i]=n[0],n}}class ue{constructor(){this.harmonics=[],this.hash=-1,this.reset()}reset(){for(let e=0;e<u.harmonicsControlPoints;e++)this.harmonics[e]=0;this.harmonics[0]=u.harmonicsMax,this.harmonics[3]=u.harmonicsMax,this.harmonics[6]=u.harmonicsMax,this.markCustomWaveDirty()}markCustomWaveDirty(){const e=qe.fittingPowerOfTwo(u.harmonicsMax+2)-1;let t=0;for(const i of this.harmonics)t=t*e+i>>>0;this.hash=t}}class ce{constructor(){this.wave=null,this.S=-1}getCustomWave(e,t){if(this.S==e.hash&&this.k==t)return this.wave;this.S=e.hash,this.k=t;const i=8==t?u.harmonicsRenderedForPickedString:u.harmonicsRendered,n=u.harmonicsWavelength,s=m(0,null,null);null!=this.wave&&this.wave.length==n+1||(this.wave=new Float32Array(n+1));const a=this.wave;for(let e=0;e<n;e++)a[e]=0;let r=1;for(let t=0;t<i;t++){const o=t+1;let l=t<u.harmonicsControlPoints?e.harmonics[t]:e.harmonics[u.harmonicsControlPoints-1];t>=u.harmonicsControlPoints&&(l*=1-(t-u.harmonicsControlPoints)/(i-u.harmonicsControlPoints));const p=l/u.harmonicsMax;let c=Math.pow(2,l-u.harmonicsMax+1)*Math.sqrt(p);t<u.harmonicsControlPoints&&(r+=c),c*=Math.pow(o,-.25),c*=s[t+589],a[n-o]=c}W(a,n);const o=1/Math.pow(r,.7);for(let e=0;e<a.length;e++)a[e]*=o;return function(e){let t=0;for(let i=0;i<e.length;i++){const n=e[i];e[i]=t,t+=n}}(a),a[n]=a[0],a}}class he{constructor(){this.freq=0,this.gain=u.filterGainCenter,this.type=2}set(e,t){this.freq=e,this.gain=t}getHz(){return he.getHzFromSettingValue(this.freq)}static getHzFromSettingValue(e){return u.filterFreqReferenceHz*Math.pow(2,(e-u.filterFreqReferenceSetting)*u.filterFreqStep)}static getSettingValueFromHz(e){return Math.log2(e/u.filterFreqReferenceHz)/u.filterFreqStep+u.filterFreqReferenceSetting}static getRoundedSettingValueFromHz(e){return Math.max(0,Math.min(u.filterFreqRange-1,Math.round(he.getSettingValueFromHz(e))))}getLinearGain(e=1){const t=(this.gain-u.filterGainCenter)*u.filterGainStep,i=2==this.type?0:-.5,n=i+(t-i)*e;return Math.pow(2,n)}static getRoundedSettingValueFromLinearGain(e){return Math.max(0,Math.min(u.filterGainRange-1,Math.round(Math.log2(e)/u.filterGainStep+u.filterGainCenter)))}toCoefficients(e,t,i=1,n=1){const s=2*Math.PI*Math.max(u.filterFreqMinHz,Math.min(u.filterFreqMaxHz,i*this.getHz()))/t,a=this.getLinearGain(n);switch(this.type){case 0:e.lowPass2ndOrderButterworth(s,a);break;case 1:e.highPass2ndOrderButterworth(s,a);break;case 2:e.peak2ndOrder(s,a,1);break;default:throw new Error}}getVolumeCompensationMult(){const e=(this.freq-u.filterFreqReferenceSetting)*u.filterFreqStep,t=(this.gain-u.filterGainCenter)*u.filterGainStep;switch(this.type){case 0:const i=Math.pow(2,e)*u.filterFreqReferenceHz/8e3,n=(Math.sqrt(1+4*i)-1)/2,s=Math.log2(n);return Math.pow(.5,.2*Math.max(0,t+1)+Math.min(0,Math.max(-3,.595*s+.35*Math.min(0,t+1))));case 1:return Math.pow(.5,.125*Math.max(0,t+1)+Math.min(0,.3*(-e-Math.log2(u.filterFreqReferenceHz/125))+.2*Math.min(0,t+1)));case 2:const a=e+Math.log2(u.filterFreqReferenceHz/2e3),r=Math.pow(1/(1+Math.pow(a/3,2)),2);return Math.pow(.5,.125*Math.max(0,t)+.1*r*Math.min(0,t));default:throw new Error}}}class fe{constructor(){this.controlPoints=[],this.controlPointCount=0,this.reset()}reset(){this.controlPointCount=0}addPoint(e,t,i){let n;this.controlPoints.length<=this.controlPointCount?(n=new he,this.controlPoints[this.controlPointCount]=n):n=this.controlPoints[this.controlPointCount],this.controlPointCount++,n.type=e,n.set(t,i)}toJsonObject(){const e=[];for(let t=0;t<this.controlPointCount;t++){const i=this.controlPoints[t];e.push({type:u.filterTypeNames[i.type],cutoffHz:Math.round(100*i.getHz())/100,linearGain:Math.round(1e4*i.getLinearGain())/1e4})}return e}fromJsonObject(e){if(this.controlPoints.length=0,e)for(const t of e){const e=new he;e.type=u.filterTypeNames.indexOf(t.type),-1==e.type&&(e.type=2),null!=t.cutoffHz?e.freq=he.getRoundedSettingValueFromHz(t.cutoffHz):e.freq=0,null!=t.linearGain?e.gain=he.getRoundedSettingValueFromLinearGain(t.linearGain):e.gain=u.filterGainCenter,this.controlPoints.push(e)}this.controlPointCount=this.controlPoints.length}static filtersCanMorph(e,t){if(e.controlPointCount!=t.controlPointCount)return!1;for(let i=0;i<e.controlPointCount;i++)if(e.controlPoints[i].type!=t.controlPoints[i].type)return!1;return!0}static lerpFilters(e,t,i){let n=new fe;if(null==e)return e;if(null==t)return t;if(i=Math.max(0,Math.min(1,i)),this.filtersCanMorph(e,t)){for(let s=0;s<e.controlPointCount;s++)n.controlPoints[s]=new he,n.controlPoints[s].type=e.controlPoints[s].type,n.controlPoints[s].freq=e.controlPoints[s].freq+(t.controlPoints[s].freq-e.controlPoints[s].freq)*i,n.controlPoints[s].gain=e.controlPoints[s].gain+(t.controlPoints[s].gain-e.controlPoints[s].gain)*i;return n.controlPointCount=e.controlPointCount,n}return i>=1?t:e}convertLegacySettings(e,t,i){this.reset();const n=2*Math.asin(.475),s=t>1,a=0==t,r=10==e,o=3==i.type||4==i.type||8==i.type||0==i.type,l=48e3,p=8e3*Math.pow(2,.5*(e-10)),u=Math.min(n,2*Math.PI*p/l);if(1==i.type&&!s&&r);else if(a){const e=3.5,t=u*Math.pow(2,e),i=l*(t/(1+t/Math.PI))/(2*Math.PI),n=he.getRoundedSettingValueFromHz(i),s=he.getHzFromSettingValue(n),a=2*Math.PI*s/l,r=new L;r.lowPass1stOrderSimplified(u);const p=new R;p.analyze(r,a);const c=p.magnitude();let h=Math.log2(c);h=.82*(h+e)-e,o&&(h=Math.min(h,-1));const f=Math.pow(2,h),d=he.getRoundedSettingValueFromLinearGain(f);this.addPoint(0,n,d)}else{const e=.5/(1-.95*Math.sqrt(Math.max(0,t-1)/6)),i=.5/e,n=u+(u*(u/(2*Math.PI*8e3/l)*Math.pow(i,.9)+1)-u)*i;let a;a=o?l*Math.min(n,u*Math.pow(2,.25))/(2*Math.PI):l*n/(2*Math.PI);const r=he.getRoundedSettingValueFromHz(a);let p;if(o)p=e;else{const t=new L;t.lowPass2ndOrderSimplified(u,e);const i=new R;i.analyze(t,n),p=i.magnitude()}s||(p=Math.min(p,Math.sqrt(.5)));const c=he.getRoundedSettingValueFromLinearGain(p);this.addPoint(0,r,c)}this.controlPoints.length=this.controlPointCount}convertLegacySettingsForSynth(e,t,i=!1){this.reset();const n=2*Math.asin(.475),s=0==t&&i,a=48e3,r=8e3*Math.pow(2,.5*(e-10)),o=Math.min(n,2*Math.PI*r/a);if(s){const e=3.5,t=o*Math.pow(2,e),i=a*(t/(1+t/Math.PI))/(2*Math.PI),n=he.getRoundedSettingValueFromHz(i),s=he.getHzFromSettingValue(n),r=2*Math.PI*s/a,l=new L;l.lowPass1stOrderSimplified(o);const p=new R;p.analyze(l,r);const u=p.magnitude();let c=Math.log2(u);c=.82*(c+e)-e;const h=Math.pow(2,c),f=he.getRoundedSettingValueFromLinearGain(h);this.addPoint(0,n,f)}else{const e=.5/(1-.95*Math.sqrt(Math.max(0,t-1)/6)),i=.5/e,n=o+(o*(o/(2*Math.PI*8e3/a)*Math.pow(i,.9)+1)-o)*i;let s;s=a*n/(2*Math.PI);const r=he.getSettingValueFromHz(s);let l;const p=new L;p.lowPass2ndOrderSimplified(o,e);const u=new R;u.analyze(p,n),l=u.magnitude();const c=he.getRoundedSettingValueFromLinearGain(l);this.addPoint(0,r,c)}}}class de{constructor(){this.target=0,this.index=0,this.envelope=0,this.reset()}reset(){this.target=0,this.index=0,this.envelope=0}toJsonObject(){const e={target:u.instrumentAutomationTargets[this.target].name,envelope:u.envelopes[this.envelope].name};return u.instrumentAutomationTargets[this.target].maxCount>1&&(e.index=this.index),e}fromJsonObject(e){this.reset();let t=u.instrumentAutomationTargets.dictionary[e.target];null==t&&(t=u.instrumentAutomationTargets.dictionary.noteVolume),this.target=t.index;let i=u.envelopes.dictionary[e.envelope];null==i&&(i=u.envelopes.dictionary.none),this.envelope=i.index,null!=e.index?this.index=$(0,u.instrumentAutomationTargets[this.target].maxCount,0|e.index):this.index=0}}class me{constructor(e,t){if(this.type=0,this.preset=0,this.chipWave=2,this.isUsingAdvancedLoopControls=!1,this.chipWaveLoopStart=0,this.chipWaveLoopEnd=u.rawRawChipWaves[this.chipWave].samples.length-1,this.chipWaveLoopMode=0,this.chipWavePlayBackwards=!1,this.chipWaveStartOffset=0,this.chipNoise=1,this.eqFilter=new fe,this.eqFilterType=!1,this.eqFilterSimpleCut=u.filterSimpleCutRange-1,this.eqFilterSimplePeak=0,this.noteFilter=new fe,this.noteFilterType=!1,this.noteFilterSimpleCut=u.filterSimpleCutRange-1,this.noteFilterSimplePeak=0,this.eqSubFilters=[],this.noteSubFilters=[],this.envelopes=[],this.fadeIn=0,this.fadeOut=u.fadeOutNeutral,this.envelopeCount=0,this.transition=u.transitions.dictionary.normal.index,this.pitchShift=0,this.detune=0,this.vibrato=0,this.interval=0,this.vibratoDepth=0,this.vibratoSpeed=10,this.vibratoDelay=0,this.vibratoType=0,this.envelopeSpeed=12,this.discreteEnvelope=!1,this.unison=0,this.unisonVoices=1,this.unisonSpread=0,this.unisonOffset=0,this.unisonExpression=1.4,this.unisonSign=1,this.effects=0,this.chord=1,this.volume=0,this.pan=u.panCenter,this.panDelay=0,this.arpeggioSpeed=12,this.fastTwoNoteArp=!1,this.legacyTieOver=!1,this.clicklessTransition=!1,this.aliases=!1,this.pulseWidth=2*u.pulseWidthRange,this.decimalOffset=0,this.dutyCycleSequence=[0,1,6.25,12.5,18.75,25,31.25,37.5,43.75,50,56.25,62.5,68.75,75,81.25,87.5,93.75,99],this.dutyCycleSpeed=13,this.supersawDynamism=u.supersawDynamismMax,this.supersawSpread=Math.ceil(u.supersawSpreadMax/2),this.supersawShape=0,this.stringSustain=10,this.stringSustainType=1,this.distortion=0,this.bitcrusherFreq=0,this.bitcrusherQuantization=0,this.chorus=0,this.reverb=0,this.echoSustain=0,this.echoDelay=0,this.algorithm=0,this.feedbackType=0,this.algorithm6Op=1,this.feedbackType6Op=1,this.customAlgorithm=new re,this.customFeedbackType=new oe,this.feedbackAmplitude=0,this.customChipWave=new Float32Array(64),this.customChipWaveIntegral=new Float32Array(65),this.operators=[],this.harmonicsWave=new ue,this.drumsetEnvelopes=[],this.drumsetSpectrumWaves=[],this.modChannels=[],this.modInstruments=[],this.modulators=[],this.modFilterTypes=[],this.invalidModulators=[],t)for(let e=0;e<u.modCount;e++)this.modChannels.push(-2),this.modInstruments.push(0),this.modulators.push(u.modulators.dictionary.none.index);this.spectrumWave=new le(e);for(let e=0;e<u.operatorCount+2;e++)this.operators[e]=new ae(e);for(let e=0;e<u.drumCount;e++)this.drumsetEnvelopes[e]=u.envelopes.dictionary["twang 2"].index,this.drumsetSpectrumWaves[e]=new le(!0);for(let e=0;e<64;e++)this.customChipWave[e]=24-Math.floor(.75*e);let i=0;for(let e=0;e<this.customChipWave.length;e++)i+=this.customChipWave[e];const n=i/this.customChipWave.length;let s=0,a=0;for(let e=0;e<this.customChipWave.length;e++)s+=a,a=this.customChipWave[e]-n,this.customChipWaveIntegral[e]=s;this.customChipWaveIntegral[64]=0}setTypeAndReset(e,t,i){i&&(e=11),this.type=e,this.preset=e,this.volume=0,this.effects=4,this.chorus=u.chorusRange-1,this.reverb=0,this.echoSustain=Math.floor(.5*(u.echoSustainRange-1)),this.echoDelay=Math.floor(.5*(u.echoDelayRange-1)),this.eqFilter.reset(),this.eqFilterType=!1,this.eqFilterSimpleCut=u.filterSimpleCutRange-1,this.eqFilterSimplePeak=0;for(let e=0;e<u.filterMorphCount;e++)this.eqSubFilters[e]=null,this.noteSubFilters[e]=null;switch(this.noteFilter.reset(),this.noteFilterType=!1,this.noteFilterSimpleCut=u.filterSimpleCutRange-1,this.noteFilterSimplePeak=0,this.distortion=Math.floor(.75*(u.distortionRange-1)),this.bitcrusherFreq=Math.floor(.5*(u.bitcrusherFreqRange-1)),this.bitcrusherQuantization=Math.floor(.5*(u.bitcrusherQuantizationRange-1)),this.pan=u.panCenter,this.panDelay=0,this.pitchShift=u.pitchShiftCenter,this.detune=u.detuneCenter,this.vibrato=0,this.unison=0,this.stringSustain=10,this.stringSustainType=u.enableAcousticSustain?1:0,this.clicklessTransition=!1,this.arpeggioSpeed=12,this.envelopeSpeed=12,this.discreteEnvelope=!1,this.legacyTieOver=!1,this.aliases=!1,this.fadeIn=0,this.fadeOut=u.fadeOutNeutral,this.transition=u.transitions.dictionary.normal.index,this.envelopeCount=0,e){case 0:this.chipWave=2,this.chord=u.chords.dictionary.arpeggio.index,this.isUsingAdvancedLoopControls=!1,this.chipWaveLoopStart=0,this.chipWaveLoopEnd=u.rawRawChipWaves[this.chipWave].samples.length-1,this.chipWaveLoopMode=0,this.chipWavePlayBackwards=!1,this.chipWaveStartOffset=0;break;case 10:this.chipWave=2,this.chord=u.chords.dictionary.arpeggio.index;for(let e=0;e<64;e++)this.customChipWave[e]=24-Math.floor(.75*e);let i=0;for(let e=0;e<this.customChipWave.length;e++)i+=this.customChipWave[e];const n=i/this.customChipWave.length;let s=0,a=0;for(let e=0;e<this.customChipWave.length;e++)s+=a,a=this.customChipWave[e]-n,this.customChipWaveIntegral[e]=s;this.customChipWaveIntegral[64]=0;break;case 1:this.chord=u.chords.dictionary["custom interval"].index,this.algorithm=0,this.feedbackType=0,this.feedbackAmplitude=0;for(let e=0;e<this.operators.length;e++)this.operators[e].reset(e);break;case 12:this.transition=1,this.vibrato=0,this.effects=1,this.chord=3,this.algorithm=0,this.feedbackType=0,this.algorithm6Op=1,this.feedbackType6Op=1,this.customAlgorithm.fromPreset(1),this.feedbackAmplitude=0;for(let e=0;e<this.operators.length;e++)this.operators[e].reset(e);break;case 2:this.chipNoise=1,this.chord=u.chords.dictionary.arpeggio.index;break;case 3:this.chord=u.chords.dictionary.simultaneous.index,this.spectrumWave.reset(t);break;case 4:this.chord=u.chords.dictionary.simultaneous.index;for(let e=0;e<u.drumCount;e++)this.drumsetEnvelopes[e]=u.envelopes.dictionary["twang 2"].index,null==this.drumsetSpectrumWaves[e]&&(this.drumsetSpectrumWaves[e]=new le(!0)),this.drumsetSpectrumWaves[e].reset(t);break;case 5:this.chord=u.chords.dictionary.simultaneous.index,this.harmonicsWave.reset();break;case 6:case 7:this.chord=u.chords.dictionary.arpeggio.index,this.pulseWidth=u.pulseWidthRange,this.decimalOffset=0;break;case 8:this.chord=u.chords.dictionary.strum.index,this.harmonicsWave.reset();break;case 11:this.transition=0,this.vibrato=0,this.interval=0,this.effects=0,this.chord=0,this.modChannels=[],this.modInstruments=[],this.modulators=[];for(let e=0;e<u.modCount;e++)this.modChannels.push(-2),this.modInstruments.push(0),this.modulators.push(u.modulators.dictionary.none.index),this.invalidModulators[e]=!1,this.modFilterTypes[e]=0;break;case 9:this.chord=u.chords.dictionary.arpeggio.index,this.supersawDynamism=u.supersawDynamismMax,this.supersawSpread=Math.ceil(u.supersawSpreadMax/2),this.supersawShape=0,this.pulseWidth=u.pulseWidthRange-1,this.decimalOffset=0;break;default:throw new Error("Unrecognized instrument type: "+e)}this.chord!=u.chords.dictionary.simultaneous.index&&(this.effects=2048|this.effects)}convertLegacySettings(e,t){let i=e.filterCutoff,n=e.filterResonance,s=e.filterEnvelope,a=e.pulseEnvelope,r=e.operatorEnvelopes,o=e.feedbackEnvelope;null==i&&(i=0==this.type?6:10),null==n&&(n=0),null==s&&(s=u.envelopes.dictionary.none),null==a&&(a=u.envelopes.dictionary[6==this.type?"twang 2":"none"]),null==r&&(r=[u.envelopes.dictionary[1==this.type?"note size":"none"],u.envelopes.dictionary.none,u.envelopes.dictionary.none,u.envelopes.dictionary.none]),null==o&&(o=u.envelopes.dictionary.none);10==i&&2==s.type&&(s=u.envelopes.dictionary.none);const l=u.algorithms[this.algorithm].carrierCount;let p=!0,c=!0,h=0==s.type||0==a.type;if(1==this.type||12==this.type){h=h||0==o.type;for(let e=0;e<r.length;e++)e<l?0!=r[e].type?c=!1:p=!1:h=h||0==r[e].type}this.envelopeCount=0,1!=this.type&&12!=this.type||(c&&h?this.addEnvelope(u.instrumentAutomationTargets.dictionary.noteVolume.index,0,u.envelopes.dictionary["note size"].index):p&&!h&&this.addEnvelope(u.instrumentAutomationTargets.dictionary.none.index,0,u.envelopes.dictionary["note size"].index)),1==s.type?(this.noteFilter.reset(),this.noteFilterType=!1,this.eqFilter.convertLegacySettings(i,n,s),this.effects&=-33,(t||this.eqFilterType)&&(this.eqFilterType=!0,this.eqFilterSimpleCut=i,this.eqFilterSimplePeak=n)):(this.eqFilter.reset(),this.eqFilterType=!1,this.noteFilterType=!1,this.noteFilter.convertLegacySettings(i,n,s),this.effects|=32,this.addEnvelope(u.instrumentAutomationTargets.dictionary.noteFilterAllFreqs.index,0,s.index),(t||this.noteFilterType)&&(this.noteFilterType=!0,this.noteFilterSimpleCut=i,this.noteFilterSimplePeak=n)),1!=a.type&&this.addEnvelope(u.instrumentAutomationTargets.dictionary.pulseWidth.index,0,a.index);for(let e=0;e<r.length;e++)e<l&&c||1!=r[e].type&&this.addEnvelope(u.instrumentAutomationTargets.dictionary.operatorAmplitude.index,e,r[e].index);1!=o.type&&this.addEnvelope(u.instrumentAutomationTargets.dictionary.feedbackAmplitude.index,0,o.index)}toJsonObject(){const e={type:u.instrumentTypeNames[this.type],volume:this.volume,eqFilter:this.eqFilter.toJsonObject(),eqFilterType:this.eqFilterType,eqSimpleCut:this.eqFilterSimpleCut,eqSimplePeak:this.eqFilterSimplePeak,envelopeSpeed:this.envelopeSpeed,discreteEnvelope:this.discreteEnvelope};this.preset!=this.type&&(e.preset=this.preset);for(let t=0;t<u.filterMorphCount;t++)null!=this.eqSubFilters[t]&&(e["eqSubFilters"+t]=this.eqSubFilters[t].toJsonObject());const t=[];for(const e of u.effectOrder)this.effects&1<<e&&t.push(u.effectNames[e]);if(e.effects=t,w(this.effects)&&(e.transition=u.transitions[this.transition].name,e.clicklessTransition=this.clicklessTransition),k(this.effects)&&(e.chord=this.getChord().name,e.fastTwoNoteArp=this.fastTwoNoteArp,e.arpeggioSpeed=this.arpeggioSpeed),q(this.effects)&&(e.pitchShiftSemitones=this.pitchShift),F(this.effects)&&(e.detuneCents=qe.detuneToCents(this.detune)),T(this.effects)&&(-1==this.vibrato&&(this.vibrato=5),5!=this.vibrato?e.vibrato=u.vibratos[this.vibrato].name:e.vibrato="custom",e.vibratoDepth=this.vibratoDepth,e.vibratoDelay=this.vibratoDelay,e.vibratoSpeed=this.vibratoSpeed,e.vibratoType=this.vibratoType),M(this.effects)){e.noteFilterType=this.noteFilterType,e.noteSimpleCut=this.noteFilterSimpleCut,e.noteSimplePeak=this.noteFilterSimplePeak,e.noteFilter=this.noteFilter.toJsonObject();for(let t=0;t<u.filterMorphCount;t++)null!=this.noteSubFilters[t]&&(e["noteSubFilters"+t]=this.noteSubFilters[t].toJsonObject())}if(z(this.effects)&&(e.distortion=Math.round(100*this.distortion/(u.distortionRange-1)),e.aliases=this.aliases),P(this.effects)&&(e.bitcrusherOctave=(u.bitcrusherFreqRange-1-this.bitcrusherFreq)*u.bitcrusherOctaveStep,e.bitcrusherQuantization=Math.round(100*this.bitcrusherQuantization/(u.bitcrusherQuantizationRange-1))),x(this.effects)&&(e.pan=Math.round(100*(this.pan-u.panCenter)/u.panCenter),e.panDelay=this.panDelay),H(this.effects)&&(e.chorus=Math.round(100*this.chorus/(u.chorusRange-1))),G(this.effects)&&(e.echoSustain=Math.round(100*this.echoSustain/(u.echoSustainRange-1)),e.echoDelayBeats=Math.round(1e3*(this.echoDelay+1)*u.echoDelayStepTicks/(u.ticksPerPart*u.partsPerBeat))/1e3),I(this.effects)&&(e.reverb=Math.round(100*this.reverb/(u.reverbRange-1))),4!=this.type&&(e.fadeInSeconds=Math.round(1e4*qe.fadeInSettingToSeconds(this.fadeIn))/1e4,e.fadeOutTicks=qe.fadeOutSettingToTicks(this.fadeOut)),5==this.type||8==this.type){e.harmonics=[];for(let t=0;t<u.harmonicsControlPoints;t++)e.harmonics[t]=Math.round(100*this.harmonicsWave.harmonics[t]/u.harmonicsMax)}if(2==this.type)e.wave=u.chipNoises[this.chipNoise].name,e.unison=this.unison==u.unisons.length?"custom":u.unisons[this.unison].name,this.unison==u.unisons.length&&(e.unisonVoices=this.unisonVoices,e.unisonSpread=this.unisonSpread,e.unisonOffset=this.unisonOffset,e.unisonExpression=this.unisonExpression,e.unisonSign=this.unisonSign);else if(3==this.type){e.spectrum=[];for(let t=0;t<u.spectrumControlPoints;t++)e.spectrum[t]=Math.round(100*this.spectrumWave.spectrum[t]/u.spectrumMax);e.unison=this.unison==u.unisons.length?"custom":u.unisons[this.unison].name,this.unison==u.unisons.length&&(e.unisonVoices=this.unisonVoices,e.unisonSpread=this.unisonSpread,e.unisonOffset=this.unisonOffset,e.unisonExpression=this.unisonExpression,e.unisonSign=this.unisonSign)}else if(4==this.type){e.drums=[];for(let t=0;t<u.drumCount;t++){const i=[];for(let e=0;e<u.spectrumControlPoints;e++)i[e]=Math.round(100*this.drumsetSpectrumWaves[t].spectrum[e]/u.spectrumMax);e.drums[t]={filterEnvelope:this.getDrumsetEnvelope(t).name,spectrum:i}}}else if(0==this.type)e.wave=u.chipWaves[this.chipWave].name,e.unison=this.unison==u.unisons.length?"custom":u.unisons[this.unison].name,this.unison==u.unisons.length&&(e.unisonVoices=this.unisonVoices,e.unisonSpread=this.unisonSpread,e.unisonOffset=this.unisonOffset,e.unisonExpression=this.unisonExpression,e.unisonSign=this.unisonSign),e.isUsingAdvancedLoopControls=this.isUsingAdvancedLoopControls,e.chipWaveLoopStart=this.chipWaveLoopStart,e.chipWaveLoopEnd=this.chipWaveLoopEnd,e.chipWaveLoopMode=this.chipWaveLoopMode,e.chipWavePlayBackwards=this.chipWavePlayBackwards,e.chipWaveStartOffset=this.chipWaveStartOffset;else if(6==this.type)e.pulseWidth=this.pulseWidth,e.decimalOffset=this.decimalOffset,e.unison=this.unison==u.unisons.length?"custom":u.unisons[this.unison].name,this.unison==u.unisons.length&&(e.unisonVoices=this.unisonVoices,e.unisonSpread=this.unisonSpread,e.unisonOffset=this.unisonOffset,e.unisonExpression=this.unisonExpression,e.unisonSign=this.unisonSign);else if(7==this.type)e.pulseWidth=this.pulseWidth,e.decimalOffset=this.decimalOffset,e.unison=this.unison==u.unisons.length?"custom":u.unisons[this.unison].name,this.unison==u.unisons.length&&(e.unisonVoices=this.unisonVoices,e.unisonSpread=this.unisonSpread,e.unisonOffset=this.unisonOffset,e.unisonExpression=this.unisonExpression,e.unisonSign=this.unisonSign);else if(9==this.type)e.pulseWidth=this.pulseWidth,e.decimalOffset=this.decimalOffset,e.dynamism=Math.round(100*this.supersawDynamism/u.supersawDynamismMax),e.spread=Math.round(100*this.supersawSpread/u.supersawSpreadMax),e.shape=Math.round(100*this.supersawShape/u.supersawShapeMax);else if(8==this.type)e.unison=this.unison==u.unisons.length?"custom":u.unisons[this.unison].name,this.unison==u.unisons.length&&(e.unisonVoices=this.unisonVoices,e.unisonSpread=this.unisonSpread,e.unisonOffset=this.unisonOffset,e.unisonExpression=this.unisonExpression,e.unisonSign=this.unisonSign),e.stringSustain=Math.round(100*this.stringSustain/(u.stringSustainRange-1)),u.enableAcousticSustain&&(e.stringSustainType=u.sustainTypeNames[this.stringSustainType]);else if(5==this.type)e.unison=this.unison==u.unisons.length?"custom":u.unisons[this.unison].name,this.unison==u.unisons.length&&(e.unisonVoices=this.unisonVoices,e.unisonSpread=this.unisonSpread,e.unisonOffset=this.unisonOffset,e.unisonExpression=this.unisonExpression,e.unisonSign=this.unisonSign);else if(1==this.type||12==this.type){const t=[];for(const e of this.operators)t.push({frequency:u.operatorFrequencies[e.frequency].name,amplitude:e.amplitude,waveform:u.operatorWaves[e.waveform].name,pulseWidth:e.pulseWidth});if(1==this.type)e.algorithm=u.algorithms[this.algorithm].name,e.feedbackType=u.feedbacks[this.feedbackType].name,e.feedbackAmplitude=this.feedbackAmplitude,e.operators=t;else{if(e.algorithm=u.algorithms6Op[this.algorithm6Op].name,e.feedbackType=u.feedbacks6Op[this.feedbackType6Op].name,e.feedbackAmplitude=this.feedbackAmplitude,0==this.algorithm6Op){const t={};t.mods=this.customAlgorithm.modulatedBy,t.carrierCount=this.customAlgorithm.carrierCount,e.customAlgorithm=t}if(0==this.feedbackType6Op){const t={};t.mods=this.customFeedbackType.indices,e.customFeedback=t}e.operators=t}}else if(10==this.type){e.wave=u.chipWaves[this.chipWave].name,e.unison=this.unison==u.unisons.length?"custom":u.unisons[this.unison].name,this.unison==u.unisons.length&&(e.unisonVoices=this.unisonVoices,e.unisonSpread=this.unisonSpread,e.unisonOffset=this.unisonOffset,e.unisonExpression=this.unisonExpression,e.unisonSign=this.unisonSign),e.customChipWave=new Float64Array(64),e.customChipWaveIntegral=new Float64Array(65);for(let t=0;t<this.customChipWave.length;t++)e.customChipWave[t]=this.customChipWave[t]}else{if(11!=this.type)throw new Error("Unrecognized instrument type");e.modChannels=[],e.modInstruments=[],e.modSettings=[],e.modFilterTypes=[];for(let t=0;t<u.modCount;t++)e.modChannels[t]=this.modChannels[t],e.modInstruments[t]=this.modInstruments[t],e.modSettings[t]=this.modulators[t],e.modFilterTypes[t]=this.modFilterTypes[t]}const i=[];for(let e=0;e<this.envelopeCount;e++)i.push(this.envelopes[e].toJsonObject());return e.envelopes=i,e}fromJsonObject(e,t,i,n,s,a=0,r=u.jsonFormat){null==e&&(e={});const o=r.toLowerCase();let l=u.instrumentTypeNames.indexOf(e.type);if("synthbox"==o&&"FM"==e.type&&(l=u.instrumentTypeNames.indexOf("FM6op")),-1==l&&(l=i?11:t?2:0),this.setTypeAndReset(l,t,i),this.effects&=-5,null!=e.preset&&(this.preset=e.preset>>>0),null!=e.volume?this.volume="jummbox"==o||"midbox"==o||"synthbox"==o||"goldbox"==o||"paandorasbox"==o||"ultrabox"==o||"unbox"==o?$(-u.volumeRange/2,u.volumeRange/2+1,0|e.volume):Math.round(25*-$(0,8,Math.round(5-(0|e.volume)/20))/7):this.volume=0,null!=e.envelopeSpeed?this.envelopeSpeed=$(0,u.modulators.dictionary["envelope speed"].maxRawVol+1,0|e.envelopeSpeed):this.envelopeSpeed=12,null!=e.discreteEnvelope?this.discreteEnvelope=e.discreteEnvelope:this.discreteEnvelope=!1,Array.isArray(e.effects)){let t=0;for(let i=0;i<e.effects.length;i++)t|=1<<u.effectNames.indexOf(e.effects[i]);this.effects=4095&t}else{const t=["none","reverb","chorus","chorus & reverb"];this.effects=t.indexOf(e.effects),-1==this.effects&&(this.effects=2==this.type?0:1)}this.transition=u.transitions.dictionary.normal.index;const p=e.transition||e.envelope;if(null!=p){let t=u.transitions.dictionary[p];if(null==e.fadeInSeconds||null==e.fadeOutTicks){const e={binary:{transition:"interrupt",fadeInSeconds:0,fadeOutTicks:-1},seamless:{transition:"interrupt",fadeInSeconds:0,fadeOutTicks:-1},sudden:{transition:"normal",fadeInSeconds:0,fadeOutTicks:-3},hard:{transition:"normal",fadeInSeconds:0,fadeOutTicks:-3},smooth:{transition:"normal",fadeInSeconds:.025,fadeOutTicks:-3},soft:{transition:"normal",fadeInSeconds:.025,fadeOutTicks:-3},slide:{transition:"slide in pattern",fadeInSeconds:.025,fadeOutTicks:-3},"cross fade":{transition:"normal",fadeInSeconds:.04,fadeOutTicks:6},"hard fade":{transition:"normal",fadeInSeconds:0,fadeOutTicks:48},"medium fade":{transition:"normal",fadeInSeconds:.0125,fadeOutTicks:72},"soft fade":{transition:"normal",fadeInSeconds:.06,fadeOutTicks:96}}[p];null!=e&&(t=u.transitions.dictionary[e.transition],this.fadeIn=qe.secondsToFadeInSetting(e.fadeInSeconds),this.fadeOut=qe.ticksToFadeOutSetting(e.fadeOutTicks))}null!=t&&(this.transition=t.index),this.transition!=u.transitions.dictionary.normal.index&&(this.effects=1024|this.effects)}null!=e.fadeInSeconds&&(this.fadeIn=qe.secondsToFadeInSetting(+e.fadeInSeconds)),null!=e.fadeOutTicks&&(this.fadeOut=qe.ticksToFadeOutSetting(+e.fadeOutTicks));{const t=e.chord,i={harmony:"simultaneous"},n=u.chords.dictionary[i[t]]||u.chords.dictionary[t];null!=n?this.chord=n.index:2==this.type?this.chord=u.chords.dictionary.arpeggio.index:8==this.type?this.chord=u.chords.dictionary.strum.index:0==this.type?this.chord=u.chords.dictionary.arpeggio.index:1==this.type||12==this.type?this.chord=u.chords.dictionary["custom interval"].index:this.chord=u.chords.dictionary.simultaneous.index}this.unison=u.unisons.dictionary.none.index;const c=e.unison||e.interval||e.chorus;if(null!=c){const e={union:"none",fifths:"fifth",octaves:"octave",error:"voiced"},t=u.unisons.dictionary[e[c]]||u.unisons.dictionary[c];null!=t&&(this.unison=t.index),"custom"==c&&(this.unison=u.unisons.length)}if(this.unisonVoices=null==e.unisonVoices?u.unisons[this.unison].voices:e.unisonVoices,this.unisonSpread=null==e.unisonSpread?u.unisons[this.unison].spread:e.unisonSpread,this.unisonOffset=null==e.unisonOffset?u.unisons[this.unison].offset:e.unisonOffset,this.unisonExpression=null==e.unisonExpression?u.unisons[this.unison].expression:e.unisonExpression,this.unisonSign=null==e.unisonSign?u.unisons[this.unison].sign:e.unisonSign,"custom harmony"==e.chorus&&(this.unison=u.unisons.dictionary.hum.index,this.chord=u.chords.dictionary["custom interval"].index),this.chord==u.chords.dictionary.simultaneous.index||Array.isArray(e.effects)||(this.effects=2048|this.effects),null!=e.pitchShiftSemitones&&(this.pitchShift=$(0,u.pitchShiftRange,"unbox"==o?Math.round(+e.pitchShiftSemitones):Math.round(+e.pitchShiftSemitones+12))),null!=e.octoff){let t=e.octoff;this.effects=128|this.effects,this.pitchShift=$(0,u.pitchShiftRange,"+1 (octave)"==t?u.pitchShiftCenter+12:"+2 (2 octaves)"==t?u.pitchShiftCenter+24:"+1/2 (fifth)"==t?u.pitchShiftCenter+7:"+1 1/2 (octave and fifth)"==t?u.pitchShiftCenter+19:"-1 (octave)"==t?u.pitchShiftCenter-12:"-2 (2 octaves"==t||"-2 (2 octaves)"==t?u.pitchShiftCenter-24:"-1/2 (fifth)"==t?u.pitchShiftCenter-7:"-1 1/2 (octave and fifth)"==t?u.pitchShiftCenter-19:u.pitchShiftCenter)}null!=e.detuneCents&&(this.detune=$(u.detuneMin,u.detuneMax+1,Math.round(qe.centsToDetune(+e.detuneCents)))),this.vibrato=u.vibratos.dictionary.none.index;const h=e.vibrato||e.effect;if(null!=h){const t={"vibrato light":"light","vibrato delayed":"delayed","vibrato heavy":"heavy"},i=u.vibratos.dictionary[t[c]]||u.vibratos.dictionary[h];null!=i?this.vibrato=i.index:"custom"==h&&(this.vibrato=u.vibratos.length),this.vibrato==u.vibratos.length?(this.vibratoDepth=e.vibratoDepth,this.vibratoSpeed=e.vibratoSpeed,this.vibratoDelay=e.vibratoDelay,this.vibratoType=e.vibratoType):(this.vibratoDepth=u.vibratos[this.vibrato].amplitude,this.vibratoDelay=u.vibratos[this.vibrato].delayTicks/2,this.vibratoSpeed=10,this.vibratoType=u.vibratos[this.vibrato].type),i!=u.vibratos.dictionary.none&&(this.effects=512|this.effects)}if(null!=e.pan?this.pan=$(0,u.panMax+1,Math.round(u.panCenter+(0|e.pan)*u.panCenter/100)):null!=e.ipan?this.pan=$(0,u.panMax+1,u.panCenter+-50*e.ipan):this.pan=u.panCenter,this.pan!=u.panCenter&&(this.effects=4|this.effects),null!=e.panDelay?this.panDelay=0|e.panDelay:this.panDelay=0,null!=e.detune?this.detune=$(u.detuneMin,u.detuneMax+1,0|e.detune):null==e.detuneCents&&(this.detune=u.detuneCenter),null!=e.distortion&&(this.distortion=$(0,u.distortionRange,Math.round((u.distortionRange-1)*(0|e.distortion)/100))),null!=e.bitcrusherOctave&&(this.bitcrusherFreq=u.bitcrusherFreqRange-1-+e.bitcrusherOctave/u.bitcrusherOctaveStep),null!=e.bitcrusherQuantization&&(this.bitcrusherQuantization=$(0,u.bitcrusherQuantizationRange,Math.round((u.bitcrusherQuantizationRange-1)*(0|e.bitcrusherQuantization)/100))),null!=e.echoSustain&&(this.echoSustain=$(0,u.echoSustainRange,Math.round((u.echoSustainRange-1)*(0|e.echoSustain)/100))),null!=e.echoDelayBeats&&(this.echoDelay=$(0,u.echoDelayRange,Math.round(+e.echoDelayBeats*(u.ticksPerPart*u.partsPerBeat)/u.echoDelayStepTicks-1))),isNaN(e.chorus)||(this.chorus=$(0,u.chorusRange,Math.round((u.chorusRange-1)*(0|e.chorus)/100))),null!=e.reverb?this.reverb=$(0,u.reverbRange,Math.round((u.reverbRange-1)*(0|e.reverb)/100)):this.reverb=a,null!=e.pulseWidth?this.pulseWidth=$(1,2*u.pulseWidthRange+1,Math.round(e.pulseWidth)):this.pulseWidth=u.pulseWidthRange,null!=e.decimalOffset?this.decimalOffset=$(0,101,Math.round(e.decimalOffset)):this.decimalOffset=0,null!=e.dynamism?this.supersawDynamism=$(0,u.supersawDynamismMax+1,Math.round(u.supersawDynamismMax*(0|e.dynamism)/100)):this.supersawDynamism=u.supersawDynamismMax,null!=e.spread?this.supersawSpread=$(0,u.supersawSpreadMax+1,Math.round(u.supersawSpreadMax*(0|e.spread)/100)):this.supersawSpread=Math.ceil(u.supersawSpreadMax/2),null!=e.shape?this.supersawShape=$(0,u.supersawShapeMax+1,Math.round(u.supersawShapeMax*(0|e.shape)/100)):this.supersawShape=0,null!=e.harmonics){for(let t=0;t<u.harmonicsControlPoints;t++)this.harmonicsWave.harmonics[t]=Math.max(0,Math.min(u.harmonicsMax,Math.round(u.harmonicsMax*+e.harmonics[t]/100)));this.harmonicsWave.markCustomWaveDirty()}else this.harmonicsWave.reset();if(null!=e.spectrum)for(let t=0;t<u.spectrumControlPoints;t++)this.spectrumWave.spectrum[t]=Math.max(0,Math.min(u.spectrumMax,Math.round(u.spectrumMax*+e.spectrum[t]/100))),this.spectrumWave.markCustomWaveDirty();else this.spectrumWave.reset(t);null!=e.stringSustain?this.stringSustain=$(0,u.stringSustainRange,Math.round((u.stringSustainRange-1)*(0|e.stringSustain)/100)):this.stringSustain=10,this.stringSustainType=u.enableAcousticSustain?u.sustainTypeNames.indexOf(e.stringSustainType):0,-1==this.stringSustainType&&(this.stringSustainType=0),2==this.type&&(this.chipNoise=u.chipNoises.findIndex((t=>t.name==e.wave)),"pink noise"==e.wave&&(this.chipNoise=u.chipNoises.findIndex((e=>"pink"==e.name))),"brownian noise"==e.wave&&(this.chipNoise=u.chipNoises.findIndex((e=>"brownian"==e.name))),-1==this.chipNoise&&(this.chipNoise=1));const f={custom:"note size",steady:"none","pluck 1":"twang 1","pluck 2":"twang 2","pluck 3":"twang 3"},d=e=>null!=f[e]?u.envelopes.dictionary[f[e]]:u.envelopes.dictionary[e];if(4==this.type&&null!=e.drums)for(let t=0;t<u.drumCount;t++){const i=e.drums[t];if(null!=i){if(this.drumsetEnvelopes[t]=u.envelopes.dictionary["twang 2"].index,null!=i.filterEnvelope){const e=d(i.filterEnvelope);null!=e&&(this.drumsetEnvelopes[t]=e.index)}if(null!=i.spectrum)for(let e=0;e<u.spectrumControlPoints;e++)this.drumsetSpectrumWaves[t].spectrum[e]=Math.max(0,Math.min(u.spectrumMax,Math.round(u.spectrumMax*+i.spectrum[e]/100)));this.drumsetSpectrumWaves[t].markCustomWaveDirty()}}if(0==this.type){const t={triangle:1,square:2,"pulse wide":3,"pulse narrow":4,sawtooth:5,"double saw":6,"double pulse":7,spiky:8,plateau:0},i={"10% pulse":22,"sunsoft bass":23,"loud pulse":24,sax:25,guitar:26,"atari bass":28,"atari pulse":29,"1% pulse":30,"curved sawtooth":31,viola:32,brass:33,"acoustic bass":34,lyre:35,"ramp pulse":36,piccolo:37,squaretooth:38,flatline:39,"pnryshk a (u5)":40,"pnryshk b (riff)":41},n={"shrill lute":42,"shrill bass":44,"nes pulse":45,"saw bass":46,euphonium:47,"shrill pulse":48,"r-sawtooth":49,recorder:50,"narrow saw":51,"deep square":52,"ring pulse":53,"double sine":54,contrabass:55,"double bass":56},s={"semi-square":63,"deep square":64,squaretal:40,"saw wide":65,"saw narrow ":66,"deep sawtooth":67,sawtal:68,pulse:69,"triple pulse":70,"high pulse":71,"deep pulse":72},a={test1:56,"pokey 4bit lfsr":57,"pokey 5step bass":58,"isolated spiky":59,"unnamed 1":60,"unnamed 2":61,"guitar string":75,intense:76,"buzz wave":77,"pokey square":57,"pokey bass":58,"banana wave":83,"test 1":84,"test 2":84,"real snare":85,"earthbound o. guitar":86},r={kick:87,snare:88,piano1:89,WOW:90,overdrive:91,trumpet:92,saxophone:93,orchestrahit:94,"detached violin":95,synth:96,sonic3snare:97,"come on":98,choir:99,overdriveguitar:100,flute:101,"legato violin":102,"tremolo violin":103,"amen break":104,"pizzicato violin":105,"tim allen grunt":106,tuba:107,loopingcymbal:108,standardkick:109,standardsnare:110,closedhihat:111,foothihat:112,openhihat:113,crashcymbal:114,pianoC4:115,"liver pad":116,marimba:117,susdotwav:118,wackyboxtts:119};this.chipWave=-1;const o=e.wave;for(const e of[t,i,n,s,a,r])if(-1==this.chipWave&&null!=e[o]&&null!=u.chipWaves[e[o]]){this.chipWave=e[o];break}if(-1==this.chipWave){const e=u.chipWaves.findIndex((e=>e.name==o));-1!=e&&(this.chipWave=e)}-1==this.chipWave&&(this.chipWave=1)}if(1==this.type||12==this.type){if(1==this.type)this.algorithm=u.algorithms.findIndex((t=>t.name==e.algorithm)),-1==this.algorithm&&(this.algorithm=0),this.feedbackType=u.feedbacks.findIndex((t=>t.name==e.feedbackType)),-1==this.feedbackType&&(this.feedbackType=0);else{if(this.algorithm6Op=u.algorithms6Op.findIndex((t=>t.name==e.algorithm)),-1==this.algorithm6Op&&(this.algorithm6Op=1),0==this.algorithm6Op?this.customAlgorithm.set(e.customAlgorithm.carrierCount,e.customAlgorithm.mods):this.customAlgorithm.fromPreset(this.algorithm6Op),this.feedbackType6Op=u.feedbacks6Op.findIndex((t=>t.name==e.feedbackType)),-1==this.feedbackType6Op){let t=S([{name:"2⟲ 3⟲",indices:[[],[2],[3],[],[],[]]},{name:"3⟲ 4⟲",indices:[[],[],[3],[4],[],[]]},{name:"4⟲ 5⟲",indices:[[],[],[],[4],[5],[]]},{name:"5⟲ 6⟲",indices:[[],[],[],[],[5],[6]]},{name:"1⟲ 6⟲",indices:[[1],[],[],[],[],[6]]},{name:"1⟲ 3⟲",indices:[[1],[],[3],[],[],[]]},{name:"1⟲ 4⟲",indices:[[1],[],[],[4],[],[]]},{name:"1⟲ 5⟲",indices:[[1],[],[],[],[5],[]]},{name:"4⟲ 6⟲",indices:[[],[],[],[4],[],[6]]},{name:"2⟲ 6⟲",indices:[[],[2],[],[],[],[6]]},{name:"3⟲ 6⟲",indices:[[],[],[3],[],[],[6]]},{name:"4⟲ 5⟲ 6⟲",indices:[[],[],[],[4],[5],[6]]},{name:"1⟲ 3⟲ 6⟲",indices:[[1],[],[3],[],[],[6]]},{name:"2→5",indices:[[],[],[],[],[2],[]]},{name:"2→6",indices:[[],[],[],[],[],[2]]},{name:"3→5",indices:[[],[],[],[],[3],[]]},{name:"3→6",indices:[[],[],[],[],[],[3]]},{name:"4→6",indices:[[],[],[],[],[],[4]]},{name:"5→6",indices:[[],[],[],[],[],[5]]},{name:"1→3→4",indices:[[],[],[1],[],[3],[]]},{name:"2→5→6",indices:[[],[],[],[],[2],[5]]},{name:"2→4→6",indices:[[],[],[],[2],[],[4]]},{name:"4→5→6",indices:[[],[],[],[],[4],[5]]},{name:"3→4→5→6",indices:[[],[],[],[3],[4],[5]]},{name:"2→3→4→5→6",indices:[[],[1],[2],[3],[4],[5]]},{name:"1→2→3→4→5→6",indices:[[],[1],[2],[3],[4],[5]]}]),i=t[t.findIndex((t=>t.name==e.feedbackType))].indices;null!=i?(this.feedbackType6Op=0,this.customFeedbackType.set(i)):this.feedbackType6Op=1}0==this.feedbackType6Op&&null!=e.customFeedback?this.customFeedbackType.set(e.customFeedback.mods):this.customFeedbackType.fromPreset(this.feedbackType6Op)}null!=e.feedbackAmplitude?this.feedbackAmplitude=$(0,u.operatorAmplitudeMax+1,0|e.feedbackAmplitude):this.feedbackAmplitude=0;for(let t=0;t<u.operatorCount+(12==this.type?2:0);t++){const i=this.operators[t];let n;if(null!=e.operators&&(n=e.operators[t]),null==n&&(n={}),i.frequency=u.operatorFrequencies.findIndex((e=>e.name==n.frequency)),-1==i.frequency&&(i.frequency=0),null!=n.amplitude?i.amplitude=$(0,u.operatorAmplitudeMax+1,0|n.amplitude):i.amplitude=0,null!=n.waveform){if("goldbox"==o&&t>3){i.waveform=0;continue}i.waveform=u.operatorWaves.findIndex((e=>e.name==n.waveform)),-1==i.waveform&&("square"==n.waveform?(i.waveform=u.operatorWaves.dictionary["pulse width"].index,i.pulseWidth=5):"rounded"==n.waveform?i.waveform=u.operatorWaves.dictionary["quasi-sine"].index:i.waveform=0)}else i.waveform=0;null!=n.pulseWidth?i.pulseWidth=0|n.pulseWidth:i.pulseWidth=5}}else if(10==this.type){if(e.customChipWave){for(let t=0;t<64;t++)this.customChipWave[t]=e.customChipWave[t];let t=0;for(let e=0;e<this.customChipWave.length;e++)t+=this.customChipWave[e];const i=t/this.customChipWave.length;let n=0,s=0;for(let e=0;e<this.customChipWave.length;e++)n+=s,s=this.customChipWave[e]-i,this.customChipWaveIntegral[e]=n;this.customChipWaveIntegral[64]=0}}else if(11==this.type&&null!=e.modChannels)for(let t=0;t<u.modCount;t++)this.modChannels[t]=e.modChannels[t],this.modInstruments[t]=e.modInstruments[t],this.modulators[t]=e.modSettings[t],null!=e.modFilterTypes&&(this.modFilterTypes[t]=e.modFilterTypes[t]);if(11!=this.type){this.chord==u.chords.dictionary.arpeggio.index&&null!=e.arpeggioSpeed?this.arpeggioSpeed=e.arpeggioSpeed:this.arpeggioSpeed=n?9:12,null!=e.fastTwoNoteArp?this.fastTwoNoteArp=e.fastTwoNoteArp:this.fastTwoNoteArp=s,null!=e.clicklessTransition?this.clicklessTransition=e.clicklessTransition:this.clicklessTransition=!1,null!=e.aliases?this.aliases=e.aliases:"modbox"==o?(this.effects=8|this.effects,this.aliases=!0,this.distortion=0):this.aliases=!1,null!=e.noteFilterType&&(this.noteFilterType=e.noteFilterType),null!=e.noteSimpleCut&&(this.noteFilterSimpleCut=e.noteSimpleCut),null!=e.noteSimplePeak&&(this.noteFilterSimplePeak=e.noteSimplePeak),null!=e.noteFilter?this.noteFilter.fromJsonObject(e.noteFilter):this.noteFilter.reset();for(let t=0;t<u.filterMorphCount;t++)Array.isArray(e["noteSubFilters"+t])&&(this.noteSubFilters[t]=new fe,this.noteSubFilters[t].fromJsonObject(e["noteSubFilters"+t]));if(null!=e.eqFilterType&&(this.eqFilterType=e.eqFilterType),null!=e.eqSimpleCut&&(this.eqFilterSimpleCut=e.eqSimpleCut),null!=e.eqSimplePeak&&(this.eqFilterSimplePeak=e.eqSimplePeak),Array.isArray(e.eqFilter))this.eqFilter.fromJsonObject(e.eqFilter);else{this.eqFilter.reset();const t={},i=8e3,n=11,s=8;if(null!=e.filterCutoffHz?t.filterCutoff=$(0,n,Math.round(n-1+2*Math.log((0|e.filterCutoffHz)/i)/Math.LN2)):t.filterCutoff=0==this.type?6:10,null!=e.filterResonance?t.filterResonance=$(0,s,Math.round((s-1)*(0|e.filterResonance)/100)):t.filterResonance=0,t.filterEnvelope=d(e.filterEnvelope),t.pulseEnvelope=d(e.pulseEnvelope),t.feedbackEnvelope=d(e.feedbackEnvelope),Array.isArray(e.operators)){t.operatorEnvelopes=[];for(let i=0;i<u.operatorCount+(12==this.type?2:0);i++){let n;null!=e.operators[i]&&(n=d(e.operators[i].envelope)),t.operatorEnvelopes[i]=null!=n?n:u.envelopes.dictionary.none}}if(null!=e.filter){const i=[10,6,3,0,8,5,2],n=["none","none","none","none","decay 1","decay 2","decay 3"],s=["none","bright","medium","soft","decay bright","decay medium","decay soft"],a={"sustain sharp":1,"sustain medium":2,"sustain soft":3,"decay sharp":4};let r=null!=a[e.filter]?a[e.filter]:s.indexOf(e.filter);-1==r&&(r=0),t.filterCutoff=i[r],t.filterEnvelope=d(n[r]),t.filterResonance=0}this.convertLegacySettings(t,!0)}for(let t=0;t<u.filterMorphCount;t++)Array.isArray(e["eqSubFilters"+t])&&(this.eqSubFilters[t]=new fe,this.eqSubFilters[t].fromJsonObject(e["eqSubFilters"+t]));if(Array.isArray(e.envelopes)){const t=e.envelopes;for(let e=0;e<t.length&&!(this.envelopeCount>=u.maxEnvelopeCount);e++){const i=new de;i.fromJsonObject(t[e]),this.addEnvelope(i.target,i.index,i.envelope)}}}0===l&&(null!=e.isUsingAdvancedLoopControls?(this.isUsingAdvancedLoopControls=e.isUsingAdvancedLoopControls,this.chipWaveLoopStart=e.chipWaveLoopStart,this.chipWaveLoopEnd=e.chipWaveLoopEnd,this.chipWaveLoopMode=e.chipWaveLoopMode,this.chipWavePlayBackwards=e.chipWavePlayBackwards,this.chipWaveStartOffset=e.chipWaveStartOffset):(this.isUsingAdvancedLoopControls=!1,this.chipWaveLoopStart=0,this.chipWaveLoopEnd=u.rawRawChipWaves[this.chipWave].samples.length-1,this.chipWaveLoopMode=0,this.chipWavePlayBackwards=!1,this.chipWaveStartOffset=0))}getLargestControlPointCount(e){let t;if(e){t=this.noteFilter.controlPointCount;for(let e=0;e<u.filterMorphCount;e++)null!=this.noteSubFilters[e]&&this.noteSubFilters[e].controlPointCount>t&&(t=this.noteSubFilters[e].controlPointCount)}else{t=this.eqFilter.controlPointCount;for(let e=0;e<u.filterMorphCount;e++)null!=this.eqSubFilters[e]&&this.eqSubFilters[e].controlPointCount>t&&(t=this.eqSubFilters[e].controlPointCount)}return t}static frequencyFromPitch(e){return 440*Math.pow(2,(e-69)/12)}addEnvelope(e,t,i){let n=!1;if(this.supportsEnvelopeTarget(e,t)||(n=!0),this.envelopeCount>=u.maxEnvelopeCount)throw new Error;for(;this.envelopes.length<=this.envelopeCount;)this.envelopes[this.envelopes.length]=new de;const s=this.envelopes[this.envelopeCount];s.target=n?u.instrumentAutomationTargets.dictionary.none.index:e,s.index=n?0:t,s.envelope=i,this.envelopeCount++}supportsEnvelopeTarget(e,t){const i=u.instrumentAutomationTargets[e];if(null==i.computeIndex&&"none"!=i.name)return!1;if(t>=i.maxCount)return!1;if(null!=i.compatibleInstruments&&-1==i.compatibleInstruments.indexOf(this.type))return!1;if(null!=i.effect&&0==(this.effects&1<<i.effect))return!1;if(i.isFilter){let e=this.noteFilter.controlPointCount;if(this.noteFilterType&&(e=1),t>=e)return!1}return"operatorFrequency"!=i.name&&"operatorAmplitude"!=i.name||!(t>=4+(12==this.type?2:0))}clearInvalidEnvelopeTargets(){for(let e=0;e<this.envelopeCount;e++){const t=this.envelopes[e].target,i=this.envelopes[e].index;this.supportsEnvelopeTarget(t,i)||(this.envelopes[e].target=u.instrumentAutomationTargets.dictionary.none.index,this.envelopes[e].index=0)}}getTransition(){return w(this.effects)?u.transitions[this.transition]:11==this.type?u.transitions.dictionary.interrupt:u.transitions.dictionary.normal}getFadeInSeconds(){return 4==this.type?0:qe.fadeInSettingToSeconds(this.fadeIn)}getFadeOutTicks(){return 4==this.type?u.drumsetFadeOutTicks:qe.fadeOutSettingToTicks(this.fadeOut)}getChord(){return k(this.effects)?u.chords[this.chord]:u.chords.dictionary.simultaneous}getDrumsetEnvelope(e){if(4!=this.type)throw new Error("Can't getDrumsetEnvelope() for non-drumset.");return u.envelopes[this.drumsetEnvelopes[e]]}}class ye{constructor(){this.octave=0,this.instruments=[],this.patterns=[],this.bars=[],this.muted=!1,this.name=""}}class ve{constructor(e){this.scaleCustom=[],this.channels=[],this.limitDecay=4,this.limitRise=4e3,this.compressionThreshold=1,this.limitThreshold=1,this.compressionRatio=1,this.limitRatio=1,this.masterGain=1,this.inVolumeCap=0,this.outVolumeCap=0,this.getNewNoteVolume=(e,t,i,n)=>{if(e&&null!=t&&null!=i&&null!=n){n=u.modCount-n-1;let e=u.modulators[this.channels[t].instruments[i].modulators[n]].newNoteVol,s=u.modulators.dictionary.tempo.index;return this.channels[t].instruments[i].modulators[n]==s&&(e=this.tempo-u.modulators[s].convertRealFactor),null!=e?e:6}return 6},this.getVolumeCap=(e,t,i,n)=>{if(e&&null!=t&&null!=i&&null!=n){n=u.modCount-n-1;let e=this.channels[t].instruments[i],s=u.modulators[e.modulators[n]],a=s.maxRawVol;return null!=a?("eq filter"!=s.name&&"note filter"!=s.name||(a=u.filterMorphCount-1,e.modFilterTypes[n]>0&&e.modFilterTypes[n]%2?a=u.filterFreqRange:e.modFilterTypes[n]>0&&(a=u.filterGainRange)),a):6}return 6},this.getVolumeCapForSetting=(e,t,i)=>{if(e){let e=u.modulators[t].maxRawVol;return null!=e?(null==i||"eq filter"!=u.modulators[t].name&&"note filter"!=u.modulators[t].name||(e=u.filterMorphCount-1,i>0&&i%2?e=u.filterFreqRange:i>0&&(e=u.filterGainRange)),e):u.noteSizeMax}return u.noteSizeMax},null!=e?this.fromBase64String(e):this.initToDefault(!0)}getChannelCount(){return this.pitchChannelCount+this.noiseChannelCount+this.modChannelCount}getMaxInstrumentsPerChannel(){return Math.max(this.layeredInstruments?u.layeredInstrumentCountMax:u.instrumentCountMin,this.patternInstruments?u.patternInstrumentCountMax:u.instrumentCountMin)}getMaxInstrumentsPerPattern(e){return this.getMaxInstrumentsPerPatternForChannel(this.channels[e])}getMaxInstrumentsPerPatternForChannel(e){return this.layeredInstruments?Math.min(u.layeredInstrumentCountMax,e.instruments.length):1}getChannelIsNoise(e){return e>=this.pitchChannelCount&&e<this.pitchChannelCount+this.noiseChannelCount}getChannelIsMod(e){return e>=this.pitchChannelCount+this.noiseChannelCount}initToDefault(e=!0){if(this.scale=0,this.scaleCustom=[!0,!1,!0,!0,!1,!1,!1,!0,!0,!1,!0,!0],this.key=0,this.octave=0,this.loopStart=0,this.loopLength=4,this.tempo=120,this.reverb=0,this.beatsPerBar=8,this.barCount=16,this.patternsPerChannel=8,this.rhythm=1,this.layeredInstruments=!1,this.patternInstruments=!1,this.title="Unnamed Project",document.title=this.title+" - "+D.versionDisplayName,e){this.pitchChannelCount=3,this.noiseChannelCount=1,this.modChannelCount=0;for(let e=0;e<this.getChannelCount();e++){const t=e>=this.pitchChannelCount&&e<this.pitchChannelCount+this.noiseChannelCount,i=e>=this.pitchChannelCount+this.noiseChannelCount;this.channels.length<=e&&(this.channels[e]=new ye);const n=this.channels[e];n.octave=Math.max(3-e,0);for(let e=0;e<this.patternsPerChannel;e++)n.patterns.length<=e?n.patterns[e]=new se:n.patterns[e].reset();n.patterns.length=this.patternsPerChannel;for(let e=0;e<u.instrumentCountMin;e++)n.instruments.length<=e&&(n.instruments[e]=new me(t,i)),n.instruments[e].setTypeAndReset(i?11:t?2:0,t,i);n.instruments.length=u.instrumentCountMin;for(let e=0;e<this.barCount;e++)n.bars[e]=e<4?1:0;n.bars.length=this.barCount}this.channels.length=this.getChannelCount()}}toBase64String(){let e,t=[];t.push(ve.q),t.push(Y[ve.T]),t.push(78);var i=encodeURIComponent(this.title);t.push(Y[i.length>>6],Y[63&i.length]);for(let e=0;e<i.length;e++)t.push(i.charCodeAt(e));if(t.push(110,Y[this.pitchChannelCount],Y[this.noiseChannelCount],Y[this.modChannelCount]),t.push(115,Y[this.scale]),this.scale==u.scales.dictionary.Custom.index)for(var n=1;n<u.pitchesPerOctave;n++)t.push(Y[this.scaleCustom[n]?1:0]);t.push(107,Y[this.key],Y[this.octave-u.octaveMin]),t.push(108,Y[this.loopStart>>6],Y[63&this.loopStart]),t.push(101,Y[this.loopLength-1>>6],Y[this.loopLength-1&63]),t.push(116,Y[this.tempo>>6],Y[63&this.tempo]),t.push(97,Y[this.beatsPerBar-1]),t.push(103,Y[this.barCount-1>>6],Y[this.barCount-1&63]),t.push(106,Y[this.patternsPerChannel-1>>6],Y[this.patternsPerChannel-1&63]),t.push(114,Y[this.rhythm]),t.push(79),1!=this.compressionRatio||1!=this.limitRatio||4e3!=this.limitRise||4!=this.limitDecay||1!=this.limitThreshold||1!=this.compressionThreshold||1!=this.masterGain?(t.push(Y[Math.round(this.compressionRatio<1?10*this.compressionRatio:10+60*(this.compressionRatio-1))]),t.push(Y[Math.round(this.limitRatio<1?10*this.limitRatio:9+this.limitRatio)]),t.push(Y[this.limitDecay]),t.push(Y[Math.round((this.limitRise-2e3)/250)]),t.push(Y[Math.round(20*this.compressionThreshold)]),t.push(Y[Math.round(20*this.limitThreshold)]),t.push(Y[Math.round(50*this.masterGain)>>6],Y[63&Math.round(50*this.masterGain)])):t.push(Y[63]),t.push(85);for(let e=0;e<this.getChannelCount();e++){var s=encodeURIComponent(this.channels[e].name);t.push(Y[s.length>>6],Y[63&s.length]);for(let e=0;e<s.length;e++)t.push(s.charCodeAt(e))}if(t.push(105,Y[this.layeredInstruments<<1|this.patternInstruments]),this.layeredInstruments||this.patternInstruments)for(let e=0;e<this.getChannelCount();e++)t.push(Y[this.channels[e].instruments.length-u.instrumentCountMin]);t.push(111);for(let e=0;e<this.pitchChannelCount;e++)t.push(Y[this.channels[e].octave]);for(let e=0;e<this.getChannelCount();e++)for(let i=0;i<this.channels[e].instruments.length;i++){const n=this.channels[e].instruments[i];if(t.push(84,Y[n.type]),t.push(118,Y[n.volume+u.volumeRange/2>>6],Y[n.volume+u.volumeRange/2&63]),t.push(117,Y[n.preset>>6],Y[63&n.preset]),t.push(102),t.push(Y[+n.eqFilterType]),n.eqFilterType)t.push(Y[n.eqFilterSimpleCut]),t.push(Y[n.eqFilterSimplePeak]);else{if(null==n.eqFilter)t.push(Y[0]),console.log("Null EQ filter settings detected in toBase64String for channelIndex "+e+", instrumentIndex "+i);else{t.push(Y[n.eqFilter.controlPointCount]);for(let e=0;e<n.eqFilter.controlPointCount;e++){const i=n.eqFilter.controlPoints[e];t.push(Y[i.type],Y[Math.round(i.freq)],Y[Math.round(i.gain)])}}let s=0;for(let e=0;e<u.filterMorphCount-1;e++)s|=+(null!=n.eqSubFilters[e+1])<<e;t.push(Y[s>>6],Y[63&s]);for(let e=0;e<u.filterMorphCount-1;e++)if(s&1<<e){t.push(Y[n.eqSubFilters[e+1].controlPointCount]);for(let i=0;i<n.eqSubFilters[e+1].controlPointCount;i++){const s=n.eqSubFilters[e+1].controlPoints[i];t.push(Y[s.type],Y[Math.round(s.freq)],Y[Math.round(s.gain)])}}}if(t.push(113,Y[n.effects>>6],Y[63&n.effects]),M(n.effects))if(t.push(Y[+n.noteFilterType]),n.noteFilterType)t.push(Y[n.noteFilterSimpleCut]),t.push(Y[n.noteFilterSimplePeak]);else{if(null==n.noteFilter)t.push(Y[0]),console.log("Null note filter settings detected in toBase64String for channelIndex "+e+", instrumentIndex "+i);else{t.push(Y[n.noteFilter.controlPointCount]);for(let e=0;e<n.noteFilter.controlPointCount;e++){const i=n.noteFilter.controlPoints[e];t.push(Y[i.type],Y[Math.round(i.freq)],Y[Math.round(i.gain)])}}let s=0;for(let e=0;e<u.filterMorphCount-1;e++)s|=+(null!=n.noteSubFilters[e+1])<<e;t.push(Y[s>>6],Y[63&s]);for(let e=0;e<u.filterMorphCount-1;e++)if(s&1<<e){t.push(Y[n.noteSubFilters[e+1].controlPointCount]);for(let i=0;i<n.noteSubFilters[e+1].controlPointCount;i++){const s=n.noteSubFilters[e+1].controlPoints[i];t.push(Y[s.type],Y[Math.round(s.freq)],Y[Math.round(s.gain)])}}}if(w(n.effects)&&t.push(Y[n.transition]),k(n.effects)&&(t.push(Y[n.chord]),n.chord==u.chords.dictionary.arpeggio.index&&(t.push(Y[n.arpeggioSpeed]),t.push(Y[+n.fastTwoNoteArp]))),q(n.effects)&&t.push(Y[n.pitchShift]),F(n.effects)&&t.push(Y[n.detune-u.detuneMin>>6],Y[n.detune-u.detuneMin&63]),T(n.effects)&&(t.push(Y[n.vibrato]),n.vibrato==u.vibratos.length&&(t.push(Y[Math.round(25*n.vibratoDepth)]),t.push(Y[n.vibratoSpeed]),t.push(Y[Math.round(n.vibratoDelay)]),t.push(Y[n.vibratoType]))),z(n.effects)&&(t.push(Y[n.distortion]),t.push(Y[+n.aliases])),P(n.effects)&&t.push(Y[n.bitcrusherFreq],Y[n.bitcrusherQuantization]),x(n.effects)&&(t.push(Y[n.pan>>6],Y[63&n.pan]),t.push(Y[n.panDelay])),H(n.effects)&&t.push(Y[n.chorus]),G(n.effects)&&t.push(Y[n.echoSustain],Y[n.echoDelay]),I(n.effects)&&t.push(Y[n.reverb]),4!=n.type&&(t.push(100,Y[n.fadeIn],Y[n.fadeOut]),t.push(Y[+n.clicklessTransition])),5==n.type||8==n.type){t.push(72);const e=new te;for(let t=0;t<u.harmonicsControlPoints;t++)e.write(u.harmonicsControlPointBits,n.harmonicsWave.harmonics[t]);e.encodeBase64(t)}if(0==n.type){n.chipWave>186?(t.push(119,Y[n.chipWave-186]),t.push(Y[3])):n.chipWave>124?(t.push(119,Y[n.chipWave-124]),t.push(Y[2])):n.chipWave>62?(t.push(119,Y[n.chipWave-62]),t.push(Y[1])):(t.push(119,Y[n.chipWave]),t.push(Y[0])),t.push(104,Y[n.unison]),n.unison==u.unisons.length&&J(t,n.unisonVoices,n.unisonSpread,n.unisonOffset,n.unisonExpression,n.unisonSign),t.push(121);const e=$(0,32,n.chipWaveLoopMode)<<1|(n.isUsingAdvancedLoopControls?1:0);t.push(Y[e]);const i=$(0,32,0)<<1|(n.chipWavePlayBackwards?1:0);t.push(Y[i]),Q(t,n.chipWaveLoopStart),Q(t,n.chipWaveLoopEnd),Q(t,n.chipWaveStartOffset)}else if(1==n.type||12==n.type){if(1==n.type)t.push(65,Y[n.algorithm]),t.push(70,Y[n.feedbackType]);else{if(t.push(65,Y[n.algorithm6Op]),0==n.algorithm6Op){t.push(67,Y[n.customAlgorithm.carrierCount]),t.push(113);for(let e=0;e<n.customAlgorithm.modulatedBy.length;e++){for(let i=0;i<n.customAlgorithm.modulatedBy[e].length;i++)t.push(Y[n.customAlgorithm.modulatedBy[e][i]]);t.push(82)}t.push(113)}if(t.push(70,Y[n.feedbackType6Op]),0==n.feedbackType6Op){t.push(113);for(let e=0;e<n.customFeedbackType.indices.length;e++){for(let i=0;i<n.customFeedbackType.indices[e].length;i++)t.push(Y[n.customFeedbackType.indices[e][i]]);t.push(82)}t.push(113)}}t.push(66,Y[n.feedbackAmplitude]),t.push(81);for(let e=0;e<(12==n.type?6:u.operatorCount);e++)t.push(Y[n.operators[e].frequency]);t.push(80);for(let e=0;e<(12==n.type?6:u.operatorCount);e++)t.push(Y[n.operators[e].amplitude]);t.push(82);for(let e=0;e<(12==n.type?6:u.operatorCount);e++)t.push(Y[n.operators[e].waveform]),2==n.operators[e].waveform&&t.push(Y[n.operators[e].pulseWidth])}else if(10==n.type){n.chipWave>186?(t.push(119,Y[n.chipWave-186]),t.push(Y[3])):n.chipWave>124?(t.push(119,Y[n.chipWave-124]),t.push(Y[2])):n.chipWave>62?(t.push(119,Y[n.chipWave-62]),t.push(Y[1])):(t.push(119,Y[n.chipWave]),t.push(Y[0])),t.push(104,Y[n.unison]),n.unison==u.unisons.length&&J(t,n.unisonVoices,n.unisonSpread,n.unisonOffset,n.unisonExpression,n.unisonSign),t.push(77);for(let e=0;e<64;e++)t.push(Y[n.customChipWave[e]+24])}else if(2==n.type)t.push(119,Y[n.chipNoise]),t.push(104,Y[n.unison]),n.unison==u.unisons.length&&J(t,n.unisonVoices,n.unisonSpread,n.unisonOffset,n.unisonExpression,n.unisonSign);else if(3==n.type){t.push(83);const e=new te;for(let t=0;t<u.spectrumControlPoints;t++)e.write(u.spectrumControlPointBits,n.spectrumWave.spectrum[t]);e.encodeBase64(t),t.push(104,Y[n.unison]),n.unison==u.unisons.length&&J(t,n.unisonVoices,n.unisonSpread,n.unisonOffset,n.unisonExpression,n.unisonSign)}else if(4==n.type){t.push(122);for(let e=0;e<u.drumCount;e++)t.push(Y[n.drumsetEnvelopes[e]]);t.push(83);const e=new te;for(let t=0;t<u.drumCount;t++)for(let i=0;i<u.spectrumControlPoints;i++)e.write(u.spectrumControlPointBits,n.drumsetSpectrumWaves[t].spectrum[i]);e.encodeBase64(t)}else if(5==n.type)t.push(104,Y[n.unison]),n.unison==u.unisons.length&&J(t,n.unisonVoices,n.unisonSpread,n.unisonOffset,n.unisonExpression,n.unisonSign);else if(6==n.type)t.push(87,Y[n.pulseWidth>>6],Y[63&n.pulseWidth]),t.push(Y[n.decimalOffset>>6],Y[63&n.decimalOffset]),t.push(104,Y[n.unison]),n.unison==u.unisons.length&&J(t,n.unisonVoices,n.unisonSpread,n.unisonOffset,n.unisonExpression,n.unisonSign);else if(7==n.type)t.push(87,Y[n.pulseWidth>>6],Y[63&n.pulseWidth]),t.push(Y[n.decimalOffset>>6],Y[63&n.decimalOffset]),t.push(104,Y[n.unison]),n.unison==u.unisons.length&&J(t,n.unisonVoices,n.unisonSpread,n.unisonOffset,n.unisonExpression,n.unisonSign);else if(9==n.type)t.push(120,Y[n.supersawDynamism],Y[n.supersawSpread],Y[n.supersawShape]),t.push(87,Y[n.pulseWidth>>6],Y[63&n.pulseWidth]),t.push(Y[n.decimalOffset>>6],Y[63&n.decimalOffset]);else if(8==n.type){if(u.stringSustainRange>32)throw new Error("Not enough bits to represent sustain value and type in same base64 character.");t.push(104,Y[n.unison]),n.unison==u.unisons.length&&J(t,n.unisonVoices,n.unisonSpread,n.unisonOffset,n.unisonExpression,n.unisonSign),t.push(73,Y[n.stringSustain|n.stringSustainType<<5])}else if(11!=n.type)throw new Error("Unknown instrument type.");t.push(69,Y[n.envelopeCount]),t.push(Y[n.envelopeSpeed]),t.push(Y[+n.discreteEnvelope]);for(let e=0;e<n.envelopeCount;e++)t.push(Y[n.envelopes[e].target]),u.instrumentAutomationTargets[n.envelopes[e].target].maxCount>1&&t.push(Y[n.envelopes[e].index]),t.push(Y[n.envelopes[e].envelope])}t.push(98),e=new te;let a=0;for(;1<<a<this.patternsPerChannel+1;)a++;for(let t=0;t<this.getChannelCount();t++)for(let i=0;i<this.barCount;i++)e.write(a,this.channels[t].bars[i]);e.encodeBase64(t),t.push(112),e=new te;const r=new te,o=ve.getNeededBits(u.noteSizeMax);for(let t=0;t<this.getChannelCount();t++){const i=this.channels[t],n=this.getMaxInstrumentsPerPattern(t),s=this.getChannelIsNoise(t),a=this.getChannelIsMod(t),l=ve.getNeededBits(n-u.instrumentCountMin),p=ve.getNeededBits(i.instruments.length-1);if(a){const n=ve.getNeededBits(this.getMaxInstrumentsPerChannel()+2);for(let s=0;s<i.instruments.length;s++){let i=this.channels[t].instruments[s];for(let t=0;t<u.modCount;t++){const s=i.modChannels[t],a=i.modInstruments[t],r=i.modulators[t],o=i.modFilterTypes[t];let l=u.modulators[r].forSong?2:0;r==u.modulators.dictionary.none.index&&(l=3),e.write(2,l),0!=l&&1!=l||(e.write(8,s),e.write(n,a)),3!=l&&e.write(6,r),"eq filter"!=u.modulators[i.modulators[t]].name&&"note filter"!=u.modulators[i.modulators[t]].name||e.write(6,o)}}}const c=s||a?0:i.octave*u.pitchesPerOctave;let h=s?4:c;const f=a?[0,1,2,3,4,5]:s?[4,6,7,2,3,8,0,10]:[0,7,12,19,24,-5,-12],d=[];for(let e=0;e<f.length;e++)f[e]+=c;for(const t of i.patterns){if(this.patternInstruments){const i=_(u.instrumentCountMin,n,t.instruments.length);e.write(l,i-u.instrumentCountMin);for(let n=0;n<i;n++)e.write(p,t.instruments[n])}if(t.notes.length>0){e.write(1,1);let i=0;for(const n of t.notes){n.start<i&&a&&(e.write(2,0),e.write(1,1),e.writePartDuration(i-n.start)),n.start>i&&(e.write(2,0),a&&e.write(1,0),e.writePartDuration(n.start-i)),r.clear(),1==n.pitches.length?r.write(1,0):(r.write(1,1),r.write(3,n.pitches.length-2)),r.writePinCount(n.pins.length-1),a?r.write(10,n.pins[0].size):r.write(o,n.pins[0].size);let t=0,s=n.pitches[0],l=s;const p=[];for(let e=1;e<n.pins.length;e++){const i=n.pins[e],u=s+i.interval;l!=u?(r.write(1,1),p.push(u),l=u):r.write(1,0),r.writePartDuration(i.time-t),t=i.time,a?r.write(10,i.size):r.write(o,i.size)}const u=String.fromCharCode.apply(null,r.encodeBase64([])),c=d.indexOf(u);-1==c?(e.write(2,1),e.concat(r)):(e.write(1,1),e.writeLongTail(0,0,c),d.splice(c,1)),d.unshift(u),d.length>10&&d.pop();const m=n.pitches.concat(p);for(let t=0;t<m.length;t++){const i=m[t],s=f.indexOf(i);if(-1==s){let t=0,n=h;if(n<i)for(;n!=i;)n++,-1==f.indexOf(n)&&t++;else for(;n!=i;)n--,-1==f.indexOf(n)&&t--;e.write(1,0),e.writePitchInterval(t)}else e.write(1,1),e.write(4,s),f.splice(s,1);f.unshift(i),f.length>16&&f.pop(),h=t==n.pitches.length-1?n.pitches[0]:i}0==n.start&&e.write(1,n.continuesLastPattern?1:0),i=n.end}i<this.beatsPerBar*u.partsPerBeat+ +a&&(e.write(2,0),a&&e.write(1,0),e.writePartDuration(this.beatsPerBar*u.partsPerBeat+ +a-i))}else e.write(1,0)}}let l=e.lengthBase64(),p=[];for(;l>0;)p.unshift(Y[63&l]),l>>=6;t.push(Y[p.length]),Array.prototype.push.apply(t,p),e.encodeBase64(t);const c=64e3;let h="";if(null!=D.customSamples&&D.customSamples.length>0&&(h="|"+D.customSamples.join("|")),t.length<c)return String.fromCharCode.apply(null,t)+h;{let e="";for(let i=0;i<t.length;i+=c)e+=String.fromCharCode.apply(null,t.slice(i,i+c));return e+h}}static M(e){return 0==e?e=1:1==e&&(e=0),u.envelopes[$(0,u.envelopes.length,e)]}fromBase64String(e,t="auto"){if(null==e||""==e)return ve.P(),void this.initToDefault(!0);let i=0;for(;e.charCodeAt(i)<=32;)i++;if(35==e.charCodeAt(i)&&i++,123==e.charCodeAt(i))return void this.fromJsonObject(JSON.parse(0==i?e:e.substring(i)),t);const a=e.charCodeAt(i);let o,l,c,h,f;106==a?(o=!1,l=!0,c=!1,h=!1,f=!1,i++):103==a?(o=!1,l=!1,c=!0,h=!1,f=!1,i++):117==a?(o=!1,l=!1,c=!1,h=!0,f=!1,i++):85==a?(o=!1,l=!1,c=!1,h=!1,f=!0,i++):100==a?(o=!1,l=!0,c=!1,h=!1,f=!1,i++):(o=!0,l=!1,c=!1,h=!1,f=!1);const d=Z[e.charCodeAt(i++)];if(o&&(-1==d||d>ve.H||d<ve.I))return;if(l&&(-1==d||d>ve.O||d<ve.W))return;if(c&&(-1==d||d>ve.L||d<ve.R))return;if(h&&(-1==d||d>ve.N||d<ve.V))return;if(f&&(-1==d||d>ve.T||d<ve.$))return;const m=d<2,y=d<3,v=d<4,g=d<5,b=d<6,O=d<7,C=d<8,W=d<9;this.initToDefault(o&&W||l&&g||v&&c);const A=o&&W||l&&g;let E=!1;if(h||c||f){var L=(e=e.replaceAll("%7C","|")).split("|");if(e=L.shift(),null==D.customSamples||D.customSamples.join(", ")!=L.join(", ")){ve._();let e=!1,t=!1,i=!1;const a=[],o=[];n.statusTable={},n.urlTable={},n.totalSamples=0,n.samplesLoaded=0,r.dispatchEvent(new s(n.totalSamples,n.samplesLoaded));for(const s of L)if("legacysamples"===s.toLowerCase())e||(e=!0,a.push(s),p(0));else if("nintariboxsamples"===s.toLowerCase())t||(t=!0,a.push(s),p(1));else if("mariopaintboxsamples"===s.toLowerCase())i||(i=!0,a.push(s),p(2));else{const e=y;if(!ve.U(s,a,o,n,e))continue}if(a.length>0&&(D.customSamples=a),o.length>0){const e=S(o);D.presetCategories[D.presetCategories.length]={name:"Custom Sample Presets",presets:e,index:D.presetCategories.length}}}}if(y&&o){for(const e of this.channels)e.instruments[0].transition=u.transitions.dictionary.interrupt.index,e.instruments[0].effects|=1024;this.channels[3].instruments[0].chipNoise=0}let R=null;if(o&&W||l&&g||v&&c){R=[];for(let e=R.length;e<this.getChannelCount();e++){R[e]=[];for(let t=0;t<u.instrumentCountMin;t++)R[e][t]={}}}let N,B=0,V=0,U=-1,j=!1,Q=!1;for(;i<e.length;)switch(N=e.charCodeAt(i++)){case 78:var J=(Z[e.charCodeAt(i++)]<<6)+Z[e.charCodeAt(i++)];this.title=decodeURIComponent(e.substring(i,i+J)),document.title=this.title+" - "+D.versionDisplayName,i+=J;break;case 110:this.pitchChannelCount=Z[e.charCodeAt(i++)],this.noiseChannelCount=Z[e.charCodeAt(i++)],this.modChannelCount=o||l&&m?0:Z[e.charCodeAt(i++)],this.pitchChannelCount=_(u.pitchChannelCountMin,u.pitchChannelCountMax,this.pitchChannelCount),this.noiseChannelCount=_(u.noiseChannelCountMin,u.noiseChannelCountMax,this.noiseChannelCount),this.modChannelCount=_(u.modChannelCountMin,u.modChannelCountMax,this.modChannelCount);for(let e=this.channels.length;e<this.getChannelCount();e++)this.channels[e]=new ye;if(this.channels.length=this.getChannelCount(),o&&W||l&&g||v&&c)for(let e=R.length;e<this.getChannelCount();e++){R[e]=[];for(let t=0;t<u.instrumentCountMin;t++)R[e][t]={}}break;case 115:if(this.scale=$(0,u.scales.length,Z[e.charCodeAt(i++)]),this.scale==u.scales.dictionary.Custom.index)for(var Y=1;Y<u.pitchesPerOctave;Y++)this.scaleCustom[Y]=1==Z[e.charCodeAt(i++)];o&&(this.scale=0);break;case 107:if(O&&o)this.key=$(0,u.keys.length,11-Z[e.charCodeAt(i++)]),this.octave=0;else if(o||l)this.key=$(0,u.keys.length,Z[e.charCodeAt(i++)]),this.octave=0;else if(c||y&&h){const t=Z[e.charCodeAt(i++)],[n,s]=X(t);this.key=n,this.octave=s}else this.key=$(0,u.keys.length,Z[e.charCodeAt(i++)]),this.octave=$(u.octaveMin,u.octaveMax+1,Z[e.charCodeAt(i++)]+u.octaveMin);break;case 108:this.loopStart=g&&o?Z[e.charCodeAt(i++)]:(Z[e.charCodeAt(i++)]<<6)+Z[e.charCodeAt(i++)];break;case 101:this.loopLength=g&&o?Z[e.charCodeAt(i++)]:(Z[e.charCodeAt(i++)]<<6)+Z[e.charCodeAt(i++)]+1;break;case 116:this.tempo=v&&o?[95,120,151,190][Z[e.charCodeAt(i++)]]:O&&o?[88,95,103,111,120,130,140,151,163,176,190,206,222,240,259][Z[e.charCodeAt(i++)]]:Z[e.charCodeAt(i++)]<<6|Z[e.charCodeAt(i++)],this.tempo=$(u.tempoMin,u.tempoMax+1,this.tempo);break;case 109:W&&o?(B=12*Z[e.charCodeAt(i++)],B=$(0,u.reverbRange,B)):(l&&g||v&&c)&&(B=Z[e.charCodeAt(i++)],B=$(0,u.reverbRange,B));break;case 97:this.beatsPerBar=y&&o?[6,7,8,9,10][Z[e.charCodeAt(i++)]]:Z[e.charCodeAt(i++)]+1,this.beatsPerBar=Math.max(u.beatsPerBarMin,Math.min(u.beatsPerBarMax,this.beatsPerBar));break;case 103:{const t=(Z[e.charCodeAt(i++)]<<6)+Z[e.charCodeAt(i++)]+1;this.barCount=_(u.barCountMin,u.barCountMax,t);for(let e=0;e<this.getChannelCount();e++){for(let t=this.channels[e].bars.length;t<this.barCount;t++)this.channels[e].bars[t]=t<4?1:0;this.channels[e].bars.length=this.barCount}}break;case 106:{let t;t=C&&o?Z[e.charCodeAt(i++)]+1:(Z[e.charCodeAt(i++)]<<6)+Z[e.charCodeAt(i++)]+1,this.patternsPerChannel=_(1,u.barCountMax,t);const n=this.getChannelCount();for(let e=0;e<n;e++){const t=this.channels[e].patterns;for(let e=t.length;e<this.patternsPerChannel;e++)t[e]=new se;t.length=this.patternsPerChannel}}break;case 105:if(W&&o||l&&g||v&&c){const t=_(u.instrumentCountMin,u.patternInstrumentCountMax,Z[e.charCodeAt(i++)]+u.instrumentCountMin);this.layeredInstruments=!1,this.patternInstruments=t>1;for(let e=0;e<this.getChannelCount();e++){const i=e>=this.pitchChannelCount&&e<this.pitchChannelCount+this.noiseChannelCount,n=e>=this.pitchChannelCount+this.noiseChannelCount;for(let s=this.channels[e].instruments.length;s<t;s++)this.channels[e].instruments[s]=new me(i,n);if(this.channels[e].instruments.length=t,b&&o)for(let s=0;s<t;s++)this.channels[e].instruments[s].setTypeAndReset(i?2:0,i,n);for(let i=R[e].length;i<t;i++)R[e][i]={}}}else{const t=Z[e.charCodeAt(i++)];this.layeredInstruments=0!=(2&t),this.patternInstruments=0!=(1&t);for(let t=0;t<this.getChannelCount();t++){let n=1;(this.layeredInstruments||this.patternInstruments)&&(n=_(u.instrumentCountMin,this.getMaxInstrumentsPerChannel(),Z[e.charCodeAt(i++)]+u.instrumentCountMin));const s=this.channels[t],a=this.getChannelIsNoise(t),r=this.getChannelIsMod(t);for(let e=s.instruments.length;e<n;e++)s.instruments[e]=new me(a,r);s.instruments.length=n}}break;case 114:if(h||f)this.rhythm=$(0,u.rhythms.length,Z[e.charCodeAt(i++)]);else{let t=Z[e.charCodeAt(i++)];this.rhythm=$(0,u.rhythms.length,t+2),(l&&y||o)&&(this.rhythm!=u.rhythms.dictionary["÷3 (triplets)"].index&&this.rhythm!=u.rhythms.dictionary["÷6 (sextuplets)"].index||(j=!0),this.rhythm>=u.rhythms.dictionary["÷6 (sextuplets)"].index&&(Q=!0))}break;case 111:if(y&&o){const t=Z[e.charCodeAt(i++)];this.channels[t].octave=$(0,u.pitchOctaves,Z[e.charCodeAt(i++)]+1),t>=this.pitchChannelCount&&(this.channels[t].octave=0)}else if(W&&o||l&&g||v&&c)for(let t=0;t<this.getChannelCount();t++)this.channels[t].octave=$(0,u.pitchOctaves,Z[e.charCodeAt(i++)]+1),t>=this.pitchChannelCount&&(this.channels[t].octave=0);else{for(let t=0;t<this.pitchChannelCount;t++)this.channels[t].octave=$(0,u.pitchOctaves,Z[e.charCodeAt(i++)]);for(let e=this.pitchChannelCount;e<this.getChannelCount();e++)this.channels[e].octave=0}break;case 84:{U++,U>=this.channels[V].instruments.length&&(V++,U=0),_(0,this.channels.length-1,V);const t=this.channels[V].instruments[U];let n=_(0,12,Z[e.charCodeAt(i++)]);if(l&&g||v&&c)switch(n){case 7:n=10;break;case 8:n=11;break;case 9:n=12}else if(l&&b||c&&!v||h&&g)switch(n){case 7:n=8;break;case 8:n=10;break;case 9:n=11;break;case 10:n=12}else if(l&&!b||h&&!g)switch(n){case 7:n=8;break;case 8:n=9;break;case 9:n=10;break;case 10:n=11;break;case 11:n=12}t.setTypeAndReset(n,V>=this.pitchChannelCount&&V<this.pitchChannelCount+this.noiseChannelCount,V>=this.pitchChannelCount+this.noiseChannelCount),!(O&&o||m&&l)||0!=n&&10!=n&&6!=n||(t.aliases=!0,t.distortion=0,t.effects|=8),j&&(t.arpeggioSpeed=9),Q&&(t.fastTwoNoteArp=!0),O&&o&&t.chord!=u.chords.dictionary.simultaneous.index&&(t.effects|=2048)}break;case 117:{const t=Z[e.charCodeAt(i++)]<<6|Z[e.charCodeAt(i++)];if(this.channels[V].instruments[U].preset=t,l&&g||v&&c)switch(this.channels[V].instruments[U].preset){case 7:this.channels[V].instruments[U].preset=10,this.channels[V].instruments[U].type=10;break;case 9:this.channels[V].instruments[U].preset=12,this.channels[V].instruments[U].type=12}else if(l&&b||c&&!v||h&&g)switch(this.channels[V].instruments[U].preset){case 7:this.channels[V].instruments[U].preset=8,this.channels[V].instruments[U].type=8;break;case 8:this.channels[V].instruments[U].preset=10,this.channels[V].instruments[U].type=10;break;case 10:this.channels[V].instruments[U].preset=12,this.channels[V].instruments[U].type=12}else if(l&&!b||h&&!g){switch(this.channels[V].instruments[U].preset){case 7:this.channels[V].instruments[U].preset=8,this.channels[V].instruments[U].type=8;break;case 8:this.channels[V].instruments[U].preset=9,this.channels[V].instruments[U].type=9;break;case 9:this.channels[V].instruments[U].preset=10,this.channels[V].instruments[U].type=10;break;case 11:this.channels[V].instruments[U].preset=12,this.channels[V].instruments[U].type=12}11==this.channels[V].instruments[U].preset&&(this.channels[V].instruments[U].preset=12,this.channels[V].instruments[U].type=12)}o&&t==D.nameToPresetValue("grand piano 1")&&(this.channels[V].instruments[U].preset=D.nameToPresetValue("grand piano 3"))}break;case 119:if(y&&o){const t=[1,2,3,4,5,6,7,8,0],n=Z[e.charCodeAt(i++)],s=this.channels[n].instruments[0];s.chipWave=$(0,u.chipWaves.length,0|t[Z[e.charCodeAt(i++)]]),s.convertLegacySettings(R[n][0],A)}else if(b&&o){const t=[1,2,3,4,5,6,7,8,0];for(let n=0;n<this.getChannelCount();n++)for(const s of this.channels[n].instruments)n>=this.pitchChannelCount?s.chipNoise=$(0,u.chipNoises.length,Z[e.charCodeAt(i++)]):s.chipWave=$(0,u.chipWaves.length,0|t[Z[e.charCodeAt(i++)]])}else if(O&&o){const t=[1,2,3,4,5,6,7,8,0];V>=this.pitchChannelCount?this.channels[V].instruments[U].chipNoise=$(0,u.chipNoises.length,Z[e.charCodeAt(i++)]):this.channels[V].instruments[U].chipWave=$(0,u.chipWaves.length,0|t[Z[e.charCodeAt(i++)]])}else if(2==this.channels[V].instruments[U].type)this.channels[V].instruments[U].chipNoise=$(0,u.chipNoises.length,Z[e.charCodeAt(i++)]);else if(h||f){const t=Z[e.charCodeAt(i++)],n=Z[e.charCodeAt(i++)];this.channels[V].instruments[U].chipWave=$(0,u.chipWaves.length,3==n?t+186:2==n?t+124:1==n?t+62:t)}else this.channels[V].instruments[U].chipWave=$(0,u.chipWaves.length,Z[e.charCodeAt(i++)]);break;case 102:if(W&&o||g&&l||v&&c)if(O&&o){const t=[10,6,3,0,8,5,2],n=["none","none","none","none","decay 1","decay 2","decay 3"];if(y&&o){const s=Z[e.charCodeAt(i++)],a=this.channels[s].instruments[0],r=R[s][0],o=[1,3,4,5][$(0,t.length,Z[e.charCodeAt(i++)])];r.filterCutoff=t[o],r.filterResonance=0,r.filterEnvelope=u.envelopes.dictionary[n[o]],a.convertLegacySettings(r,A)}else if(b&&o)for(let s=0;s<this.getChannelCount();s++)for(let a=0;a<this.channels[s].instruments.length;a++){const r=this.channels[s].instruments[a],o=R[s][a],l=$(0,t.length,Z[e.charCodeAt(i++)]+1);s<this.pitchChannelCount?(o.filterCutoff=t[l],o.filterResonance=0,o.filterEnvelope=u.envelopes.dictionary[n[l]]):(o.filterCutoff=10,o.filterResonance=0,o.filterEnvelope=u.envelopes.dictionary.none),r.convertLegacySettings(o,A)}else{const s=$(0,t.length,Z[e.charCodeAt(i++)]),a=this.channels[V].instruments[U],r=R[V][U];r.filterCutoff=t[s],r.filterResonance=0,r.filterEnvelope=u.envelopes.dictionary[n[s]],a.convertLegacySettings(r,A)}}else{const t=11,n=this.channels[V].instruments[U],s=R[V][U];s.filterCutoff=$(0,t,Z[e.charCodeAt(i++)]),n.convertLegacySettings(s,A)}else{const t=this.channels[V].instruments[U];let n=Z[e.charCodeAt(i++)];if(o||0==n){t.eqFilterType=!1,(l||c||h||f)&&(n=Z[e.charCodeAt(i++)]);const s=n;t.eqFilter.controlPointCount=$(0,u.filterMaxPoints+1,s);for(let e=t.eqFilter.controlPoints.length;e<t.eqFilter.controlPointCount;e++)t.eqFilter.controlPoints[e]=new he;for(let n=0;n<t.eqFilter.controlPointCount;n++){const s=t.eqFilter.controlPoints[n];s.type=$(0,3,Z[e.charCodeAt(i++)]),s.freq=$(0,u.filterFreqRange,Z[e.charCodeAt(i++)]),s.gain=$(0,u.filterGainRange,Z[e.charCodeAt(i++)])}for(let e=t.eqFilter.controlPointCount;e<s;e++)i+=3;if(t.eqSubFilters[0]=t.eqFilter,l&&!g||c&&!v||h||f){let n=Z[e.charCodeAt(i++)]<<6|Z[e.charCodeAt(i++)];for(let s=0;s<u.filterMorphCount-1;s++)if(n&1<<s){const n=Z[e.charCodeAt(i++)];null==t.eqSubFilters[s+1]&&(t.eqSubFilters[s+1]=new fe),t.eqSubFilters[s+1].controlPointCount=$(0,u.filterMaxPoints+1,n);for(let e=t.eqSubFilters[s+1].controlPoints.length;e<t.eqSubFilters[s+1].controlPointCount;e++)t.eqSubFilters[s+1].controlPoints[e]=new he;for(let n=0;n<t.eqSubFilters[s+1].controlPointCount;n++){const a=t.eqSubFilters[s+1].controlPoints[n];a.type=$(0,3,Z[e.charCodeAt(i++)]),a.freq=$(0,u.filterFreqRange,Z[e.charCodeAt(i++)]),a.gain=$(0,u.filterGainRange,Z[e.charCodeAt(i++)])}for(let e=t.eqSubFilters[s+1].controlPointCount;e<n;e++)i+=3}}}else t.eqFilterType=!0,t.eqFilterSimpleCut=$(0,u.filterSimpleCutRange,Z[e.charCodeAt(i++)]),t.eqFilterSimplePeak=$(0,u.filterSimplePeakRange,Z[e.charCodeAt(i++)])}break;case 121:if(h||f)if(h&&y){const t=K(e,i);i+=6;const n=e.slice(i,i+t);i+=t;const s=JSON.parse(atob(n));for(const e of s){const t=e.channel,i=e.instrument,n=e.info,s=this.channels[t].instruments[i];s.isUsingAdvancedLoopControls=n.isUsingAdvancedLoopControls,s.chipWaveLoopStart=n.chipWaveLoopStart,s.chipWaveLoopEnd=n.chipWaveLoopEnd,s.chipWaveLoopMode=n.chipWaveLoopMode,s.chipWavePlayBackwards=n.chipWavePlayBackwards,s.chipWaveStartOffset=n.chipWaveStartOffset}}else{const t=Z[e.charCodeAt(i++)],n=Boolean(1&t),s=t>>1,a=Z[e.charCodeAt(i++)],r=Boolean(1&a),o=K(e,i);i+=6;const l=K(e,i);i+=6;const p=K(e,i);i+=6;const u=this.channels[V].instruments[U];u.isUsingAdvancedLoopControls=n,u.chipWaveLoopStart=o,u.chipWaveLoopEnd=l,u.chipWaveLoopMode=s,u.chipWavePlayBackwards=r,u.chipWaveStartOffset=p}else if(c&&!v&&b)"legacysamples"!=document.URL.substring(document.URL.length-13).toLowerCase()&&(E||(E=!0,u.willReloadForCustomSamples=!0,D.customSamples=["legacySamples"],p(0))),this.channels[V].instruments[U].chipWave=$(0,u.chipWaves.length,Z[e.charCodeAt(i++)]+125);else if(W&&o||l&&g||v&&c){const t=8,n=this.channels[V].instruments[U],s=R[V][U];s.filterResonance=$(0,t,Z[e.charCodeAt(i++)]),n.convertLegacySettings(s,A)}break;case 122:{const t=this.channels[V].instruments[U],n=[0,1,2,4,5,6,8,9,10,12,13,14,16,17,18,19,20,21,23,24,25,27,28,29,32,33,34,31,11];if(W&&o||g&&l||v&&c)if(4==t.type)for(let s=0;s<u.drumCount;s++){let a=Z[e.charCodeAt(i++)];(m&&c||!c&&!h&&!f)&&(a=n[a]),t.drumsetEnvelopes[s]=ve.M(a).index}else{const s=R[V][U];let a=Z[e.charCodeAt(i++)];(m&&c||!c&&!h&&!f)&&(a=n[a]),s.filterEnvelope=ve.M(a),t.convertLegacySettings(s,A)}else for(let s=0;s<u.drumCount;s++){let a=Z[e.charCodeAt(i++)];(m&&c||!c&&!h&&!f)&&(a=n[a]),t.drumsetEnvelopes[s]=$(0,u.envelopes.length,a)}}break;case 87:{const t=this.channels[V].instruments[U];if(t.pulseWidth=$(0,2*u.pulseWidthRange+1,(Z[e.charCodeAt(i++)]<<6)+Z[e.charCodeAt(i++)]),o&&(t.pulseWidth=Math.round(Math.pow(.5,(7-t.pulseWidth)*u.pulseWidthStepPower)*u.pulseWidthRange)),W&&o||g&&l||v&&c){const n=[0,1,2,4,5,6,8,9,10,12,13,14,16,17,18,19,20,21,23,24,25,27,28,29,32,33,34,31,11],s=R[V][U];let a=Z[e.charCodeAt(i++)];(m&&c||!c&&!h)&&(a=n[a]),s.pulseEnvelope=ve.M(a),t.convertLegacySettings(s,A)}(h&&!v||f)&&(t.decimalOffset=$(0,101,(Z[e.charCodeAt(i++)]<<6)+Z[e.charCodeAt(i++)]))}break;case 73:{const t=this.channels[V].instruments[U],n=Z[e.charCodeAt(i++)];t.stringSustain=$(0,u.stringSustainRange,31&n),t.stringSustainType=u.enableAcousticSustain?$(0,2,n>>5):0}break;case 100:if(W&&o||l&&g||v&&c){const t=[{transition:"interrupt",fadeInSeconds:0,fadeOutTicks:-1},{transition:"normal",fadeInSeconds:0,fadeOutTicks:-3},{transition:"normal",fadeInSeconds:.025,fadeOutTicks:-3},{transition:"slide in pattern",fadeInSeconds:.025,fadeOutTicks:-3},{transition:"normal",fadeInSeconds:.04,fadeOutTicks:6},{transition:"normal",fadeInSeconds:0,fadeOutTicks:48},{transition:"normal",fadeInSeconds:.0125,fadeOutTicks:72},{transition:"normal",fadeInSeconds:.06,fadeOutTicks:96},{transition:"slide in pattern",fadeInSeconds:.025,fadeOutTicks:-3}];if(y&&o){const n=Z[e.charCodeAt(i++)],s=t[$(0,t.length,Z[e.charCodeAt(i++)])],a=this.channels[n].instruments[0];a.fadeIn=qe.secondsToFadeInSetting(s.fadeInSeconds),a.fadeOut=qe.ticksToFadeOutSetting(s.fadeOutTicks),a.transition=u.transitions.dictionary[s.transition].index,a.transition!=u.transitions.dictionary.normal.index&&(a.effects|=1024)}else if(b&&o)for(let n=0;n<this.getChannelCount();n++)for(const s of this.channels[n].instruments){const n=t[$(0,t.length,Z[e.charCodeAt(i++)])];s.fadeIn=qe.secondsToFadeInSetting(n.fadeInSeconds),s.fadeOut=qe.ticksToFadeOutSetting(n.fadeOutTicks),s.transition=u.transitions.dictionary[n.transition].index,s.transition!=u.transitions.dictionary.normal.index&&(s.effects|=1024)}else if(v&&!c&&!h&&!f||o){const n=t[$(0,t.length,Z[e.charCodeAt(i++)])],s=this.channels[V].instruments[U];s.fadeIn=qe.secondsToFadeInSetting(n.fadeInSeconds),s.fadeOut=qe.ticksToFadeOutSetting(n.fadeOutTicks),s.transition=u.transitions.dictionary[n.transition].index,s.transition!=u.transitions.dictionary.normal.index&&(s.effects|=1024)}else{const n=t[$(0,t.length,Z[e.charCodeAt(i++)])],s=this.channels[V].instruments[U];s.fadeIn=qe.secondsToFadeInSetting(n.fadeInSeconds),s.fadeOut=qe.ticksToFadeOutSetting(n.fadeOutTicks),s.transition=u.transitions.dictionary[n.transition].index,Z[e.charCodeAt(i++)]>0&&(s.legacyTieOver=!0),s.clicklessTransition=!!Z[e.charCodeAt(i++)],(s.transition!=u.transitions.dictionary.normal.index||s.clicklessTransition)&&(s.effects|=1024)}}else{const t=this.channels[V].instruments[U];t.fadeIn=$(0,u.fadeInRange,Z[e.charCodeAt(i++)]),t.fadeOut=$(0,u.fadeOutTicks.length,Z[e.charCodeAt(i++)]),(l||c||h||f)&&(t.clicklessTransition=!!Z[e.charCodeAt(i++)])}break;case 99:if(W&&o||l&&g||v&&c)if(O&&o)if(y&&o){const t=[0,3,2,0],n=["none","none","none","tremolo2"],s=Z[e.charCodeAt(i++)],a=$(0,t.length,Z[e.charCodeAt(i++)]),r=this.channels[s].instruments[0],o=R[s][0];r.vibrato=t[a],null!=o.filterEnvelope&&1!=o.filterEnvelope.type||(o.filterEnvelope=u.envelopes.dictionary[n[a]],r.convertLegacySettings(o,A)),r.vibrato!=u.vibratos.dictionary.none.index&&(r.effects|=512)}else if(b&&o){const t=[0,1,2,3,0,0],n=["none","none","none","none","tremolo5","tremolo2"];for(let s=0;s<this.getChannelCount();s++)for(let a=0;a<this.channels[s].instruments.length;a++){const r=$(0,t.length,Z[e.charCodeAt(i++)]),o=this.channels[s].instruments[a],p=R[s][a];o.vibrato=t[r],null!=p.filterEnvelope&&1!=p.filterEnvelope.type||(p.filterEnvelope=u.envelopes.dictionary[n[r]],o.convertLegacySettings(p,A)),o.vibrato!=u.vibratos.dictionary.none.index&&(o.effects|=512),(0!=B||l&&g||v&&c)&&!this.getChannelIsNoise(s)&&(o.effects|=1,o.reverb=B)}}else{const t=[0,1,2,3,0,0],n=["none","none","none","none","tremolo5","tremolo2"],s=$(0,t.length,Z[e.charCodeAt(i++)]),a=this.channels[V].instruments[U],r=R[V][U];a.vibrato=t[s],null!=r.filterEnvelope&&1!=r.filterEnvelope.type||(r.filterEnvelope=u.envelopes.dictionary[n[s]],a.convertLegacySettings(r,A)),a.vibrato!=u.vibratos.dictionary.none.index&&(a.effects|=512),(0!=B||l&&g||v&&c)&&(a.effects|=1,a.reverb=B)}else{const t=this.channels[V].instruments[U],n=$(0,u.vibratos.length+1,Z[e.charCodeAt(i++)]);t.vibrato=n,t.vibrato!=u.vibratos.dictionary.none.index&&(t.effects|=512),n==u.vibratos.length?(t.vibratoDepth=$(0,u.modulators.dictionary["vibrato depth"].maxRawVol+1,Z[e.charCodeAt(i++)])/50,t.vibratoSpeed=$(0,u.modulators.dictionary["vibrato speed"].maxRawVol+1,Z[e.charCodeAt(i++)]),t.vibratoDelay=$(0,u.modulators.dictionary["vibrato delay"].maxRawVol+1,Z[e.charCodeAt(i++)])/2,t.vibratoType=$(0,u.vibratoTypes.length,Z[e.charCodeAt(i++)]),t.effects|=512):(t.vibratoDepth=u.vibratos[t.vibrato].amplitude,t.vibratoSpeed=10,t.vibratoDelay=u.vibratos[t.vibrato].delayTicks/2,t.vibratoType=u.vibratos[t.vibrato].type)}break;case 71:if(l&&g||v&&c){const t=this.channels[V].instruments[U];t.arpeggioSpeed=$(0,u.modulators.dictionary["arp speed"].maxRawVol+1,Z[e.charCodeAt(i++)]),t.fastTwoNoteArp=!!Z[e.charCodeAt(i++)]}break;case 104:if(y&&o){const t=Z[e.charCodeAt(i++)];this.channels[t].instruments[0].unison=$(0,u.unisons.length,Z[e.charCodeAt(i++)]);const n=this.channels[t].instruments[0];n.unisonVoices=u.unisons[n.unison].voices,n.unisonSpread=u.unisons[n.unison].spread,n.unisonOffset=u.unisons[n.unison].offset,n.unisonExpression=u.unisons[n.unison].expression,n.unisonSign=u.unisons[n.unison].sign}else if(b&&o)for(let t=0;t<this.getChannelCount();t++)for(const n of this.channels[t].instruments){const t=Z[e.charCodeAt(i++)];let s=$(0,u.unisons.length,t);8==t&&(s=2,n.chord=3),n.unison=s,n.unisonVoices=u.unisons[n.unison].voices,n.unisonSpread=u.unisons[n.unison].spread,n.unisonOffset=u.unisons[n.unison].offset,n.unisonExpression=u.unisons[n.unison].expression,n.unisonSign=u.unisons[n.unison].sign}else if(O&&o){const t=Z[e.charCodeAt(i++)];let n=$(0,u.unisons.length,t);8==t&&(n=2,this.channels[V].instruments[U].chord=3),this.channels[V].instruments[U].unison=n;const s=this.channels[V].instruments[U];s.unisonVoices=u.unisons[s.unison].voices,s.unisonSpread=u.unisons[s.unison].spread,s.unisonOffset=u.unisons[s.unison].offset,s.unisonExpression=u.unisons[s.unison].expression,s.unisonSign=u.unisons[s.unison].sign}else{this.channels[V].instruments[U].unison=$(0,u.unisons.length+1,Z[e.charCodeAt(i++)]);const t=this.channels[V].instruments[U];if((h&&!g||f)&&t.unison==u.unisons.length){t.unisonVoices=Z[e.charCodeAt(i++)];const n=Z[e.charCodeAt(i++)],s=Z[e.charCodeAt(i++)]+63*(Z[e.charCodeAt(i++)]+63*Z[e.charCodeAt(i++)]),a=Z[e.charCodeAt(i++)],r=Z[e.charCodeAt(i++)]+63*(Z[e.charCodeAt(i++)]+63*Z[e.charCodeAt(i++)]),o=Z[e.charCodeAt(i++)],l=Z[e.charCodeAt(i++)]+63*Z[e.charCodeAt(i++)],p=Z[e.charCodeAt(i++)],u=Z[e.charCodeAt(i++)]+63*Z[e.charCodeAt(i++)];t.unisonSpread=s/1e3,0==n&&(t.unisonSpread*=-1),t.unisonOffset=r/1e3,0==a&&(t.unisonOffset*=-1),t.unisonExpression=l/1e3,0==o&&(t.unisonExpression*=-1),t.unisonSign=u/1e3,0==p&&(t.unisonSign*=-1)}else t.unisonVoices=u.unisons[t.unison].voices,t.unisonSpread=u.unisons[t.unison].spread,t.unisonOffset=u.unisons[t.unison].offset,t.unisonExpression=u.unisons[t.unison].expression,t.unisonSign=u.unisons[t.unison].sign}break;case 67:if(W&&o||l&&g||v&&c){const t=this.channels[V].instruments[U];t.chord=$(0,u.chords.length,Z[e.charCodeAt(i++)]),t.chord!=u.chords.dictionary.simultaneous.index&&(t.effects|=2048)}break;case 113:{const t=this.channels[V].instruments[U];if(W&&o||l&&g||v&&c){t.effects=4095&Z[e.charCodeAt(i++)],0!=B||l&&g||v&&c?I(t.effects)&&(t.reverb=B):t.effects&=-2,t.effects|=4,t.vibrato!=u.vibratos.dictionary.none.index&&(t.effects|=512),t.detune!=u.detuneCenter&&(t.effects|=256),t.aliases?t.effects|=8:t.effects&=-9;const n=R[V][U];t.convertLegacySettings(n,A)}else{if(t.effects=Z[e.charCodeAt(i++)]<<6|Z[e.charCodeAt(i++)],M(t.effects)){let n=Z[e.charCodeAt(i++)];if(o||0==n){t.noteFilterType=!1,(l||c||h||f)&&(n=Z[e.charCodeAt(i++)]),t.noteFilter.controlPointCount=$(0,u.filterMaxPoints+1,n);for(let e=t.noteFilter.controlPoints.length;e<t.noteFilter.controlPointCount;e++)t.noteFilter.controlPoints[e]=new he;for(let n=0;n<t.noteFilter.controlPointCount;n++){const s=t.noteFilter.controlPoints[n];s.type=$(0,3,Z[e.charCodeAt(i++)]),s.freq=$(0,u.filterFreqRange,Z[e.charCodeAt(i++)]),s.gain=$(0,u.filterGainRange,Z[e.charCodeAt(i++)])}for(let e=t.noteFilter.controlPointCount;e<n;e++)i+=3;if(t.noteSubFilters[0]=t.noteFilter,l&&!g||c||h||f){let n=Z[e.charCodeAt(i++)]<<6|Z[e.charCodeAt(i++)];for(let s=0;s<u.filterMorphCount-1;s++)if(n&1<<s){const n=Z[e.charCodeAt(i++)];null==t.noteSubFilters[s+1]&&(t.noteSubFilters[s+1]=new fe),t.noteSubFilters[s+1].controlPointCount=$(0,u.filterMaxPoints+1,n);for(let e=t.noteSubFilters[s+1].controlPoints.length;e<t.noteSubFilters[s+1].controlPointCount;e++)t.noteSubFilters[s+1].controlPoints[e]=new he;for(let n=0;n<t.noteSubFilters[s+1].controlPointCount;n++){const a=t.noteSubFilters[s+1].controlPoints[n];a.type=$(0,3,Z[e.charCodeAt(i++)]),a.freq=$(0,u.filterFreqRange,Z[e.charCodeAt(i++)]),a.gain=$(0,u.filterGainRange,Z[e.charCodeAt(i++)])}for(let e=t.noteSubFilters[s+1].controlPointCount;e<n;e++)i+=3}}}else t.noteFilterType=!0,t.noteFilter.reset(),t.noteFilterSimpleCut=$(0,u.filterSimpleCutRange,Z[e.charCodeAt(i++)]),t.noteFilterSimplePeak=$(0,u.filterSimplePeakRange,Z[e.charCodeAt(i++)])}w(t.effects)&&(t.transition=$(0,u.transitions.length,Z[e.charCodeAt(i++)])),k(t.effects)&&(t.chord=$(0,u.chords.length,Z[e.charCodeAt(i++)]),t.chord==u.chords.dictionary.arpeggio.index&&(l||c||h||f)&&(t.arpeggioSpeed=Z[e.charCodeAt(i++)],t.fastTwoNoteArp=!!Z[e.charCodeAt(i++)])),q(t.effects)&&(t.pitchShift=$(0,u.pitchShiftRange,f?Z[e.charCodeAt(i++)]:Z[e.charCodeAt(i++)]+12)),F(t.effects)&&(o?(t.detune=$(u.detuneMin,u.detuneMax+1,Z[e.charCodeAt(i++)]),t.detune=Math.round((t.detune-9)*(Math.abs(t.detune-9)+1)/2+u.detuneCenter)):t.detune=$(u.detuneMin,u.detuneMax+1,(Z[e.charCodeAt(i++)]<<6)+Z[e.charCodeAt(i++)])),T(t.effects)&&(t.vibrato=$(0,u.vibratos.length+1,Z[e.charCodeAt(i++)]),t.vibrato==u.vibratos.length&&(l||c||h||f)?(t.vibratoDepth=$(0,u.modulators.dictionary["vibrato depth"].maxRawVol+1,Z[e.charCodeAt(i++)])/25,t.vibratoSpeed=$(0,u.modulators.dictionary["vibrato speed"].maxRawVol+1,Z[e.charCodeAt(i++)]),t.vibratoDelay=$(0,u.modulators.dictionary["vibrato delay"].maxRawVol+1,Z[e.charCodeAt(i++)]),t.vibratoType=$(0,u.vibratoTypes.length,Z[e.charCodeAt(i++)])):(t.vibratoDepth=u.vibratos[t.vibrato].amplitude,t.vibratoSpeed=10,t.vibratoDelay=u.vibratos[t.vibrato].delayTicks/2,t.vibratoType=u.vibratos[t.vibrato].type)),z(t.effects)&&(t.distortion=$(0,u.distortionRange,Z[e.charCodeAt(i++)]),(l&&!g||c||h||f)&&(t.aliases=!!Z[e.charCodeAt(i++)])),P(t.effects)&&(t.bitcrusherFreq=$(0,u.bitcrusherFreqRange,Z[e.charCodeAt(i++)]),t.bitcrusherQuantization=$(0,u.bitcrusherQuantizationRange,Z[e.charCodeAt(i++)])),x(t.effects)&&(t.pan=$(0,u.panMax+1,o?Math.round(Z[e.charCodeAt(i++)]*(u.panMax/8)):(Z[e.charCodeAt(i++)]<<6)+Z[e.charCodeAt(i++)]),(l&&!m||c||h||f)&&(t.panDelay=Z[e.charCodeAt(i++)])),H(t.effects)&&(t.chorus=o?2*$(0,u.chorusRange/2+1,Z[e.charCodeAt(i++)]):$(0,u.chorusRange,Z[e.charCodeAt(i++)])),G(t.effects)&&(t.echoSustain=$(0,u.echoSustainRange,Z[e.charCodeAt(i++)]),t.echoDelay=$(0,u.echoDelayRange,Z[e.charCodeAt(i++)])),I(t.effects)&&(t.reverb=$(0,u.reverbRange,o?Math.round(Z[e.charCodeAt(i++)]*u.reverbRange/3):Z[e.charCodeAt(i++)]))}t.effects&=4095}break;case 118:if(y&&o){const t=Z[e.charCodeAt(i++)];this.channels[t].instruments[0].volume=Math.round($(-u.volumeRange/2,1,5*-Z[e.charCodeAt(i++)]))}else if(b&&o)for(let t=0;t<this.getChannelCount();t++)for(const n of this.channels[t].instruments)n.volume=Math.round($(-u.volumeRange/2,1,5*-Z[e.charCodeAt(i++)]));else if(O&&o){this.channels[V].instruments[U].volume=Math.round($(-u.volumeRange/2,1,5*-Z[e.charCodeAt(i++)]))}else if(o){this.channels[V].instruments[U].volume=Math.round($(-u.volumeRange/2,1,25*-Z[e.charCodeAt(i++)]/7))}else{this.channels[V].instruments[U].volume=Math.round($(-u.volumeRange/2,u.volumeRange/2+1,(Z[e.charCodeAt(i++)]<<6|Z[e.charCodeAt(i++)])-u.volumeRange/2))}break;case 76:if(W&&o){this.channels[V].instruments[U].pan=$(0,u.panMax+1,Z[e.charCodeAt(i++)]*(u.panMax/8))}else if(l&&g||v&&c){const t=this.channels[V].instruments[U];t.pan=$(0,u.panMax+1,(Z[e.charCodeAt(i++)]<<6)+Z[e.charCodeAt(i++)]),(l&&!y||c||h||f)&&(t.panDelay=Z[e.charCodeAt(i++)])}break;case 68:{const t=this.channels[V].instruments[U];(l&&g||v&&c)&&(t.detune=$(u.detuneMin,u.detuneMax+1,4*((Z[e.charCodeAt(i++)]<<6)+Z[e.charCodeAt(i++)])),t.effects|=256)}break;case 77:{let t=this.channels[V].instruments[U];for(let n=0;n<64;n++)t.customChipWave[n]=$(-24,25,Z[e.charCodeAt(i++)]-24);let n=0;for(let e=0;e<t.customChipWave.length;e++)n+=t.customChipWave[e];const s=n/t.customChipWave.length;let a=0,r=0;for(let e=0;e<t.customChipWave.length;e++)a+=r,r=t.customChipWave[e]-s,t.customChipWaveIntegral[e]=a;t.customChipWaveIntegral[64]=0}break;case 79:{let t=Z[e.charCodeAt(i++)];63==t?this.restoreLimiterDefaults():(this.compressionRatio=t<10?t/10:1+(t-10)/60,t=Z[e.charCodeAt(i++)],this.limitRatio=t<10?t/10:t-9,this.limitDecay=Z[e.charCodeAt(i++)],this.limitRise=250*Z[e.charCodeAt(i++)]+2e3,this.compressionThreshold=Z[e.charCodeAt(i++)]/20,this.limitThreshold=Z[e.charCodeAt(i++)]/20,this.masterGain=((Z[e.charCodeAt(i++)]<<6)+Z[e.charCodeAt(i++)])/50)}break;case 85:for(let t=0;t<this.getChannelCount();t++){var te;te=!v||c||h||f?(Z[e.charCodeAt(i++)]<<6)+Z[e.charCodeAt(i++)]:Z[e.charCodeAt(i++)],this.channels[t].name=decodeURIComponent(e.substring(i,i+te)),i+=te}break;case 65:{const t=this.channels[V].instruments[U];if(1==t.type)t.algorithm=$(0,u.algorithms.length,Z[e.charCodeAt(i++)]);else if(t.algorithm6Op=$(0,u.algorithms6Op.length,Z[e.charCodeAt(i++)]),t.customAlgorithm.fromPreset(t.algorithm6Op),67==e.charCodeAt(i)){let n=$(1,u.operatorCount+2+1,Z[e.charCodeAt(i+1)]);i++;let s=[];if(113==e.charCodeAt(i+1)){i++;let a=0;for(i++;113!=e.charCodeAt(i);){s[a]=[];let t=0;for(;82!=e.charCodeAt(i);)s[a][t]=$(1,u.operatorCount+3,Z[e.charCodeAt(i)]),t++,i++;a++,i++}t.customAlgorithm.set(n,s),i++}}if(W&&o||g&&l||v&&c){const e=R[V][U];t.convertLegacySettings(e,A)}}break;case 120:if(c&&!v&&b){const t=Z[e.charCodeAt(i++)];t+62>85&&"legacysamples"!=document.URL.substring(document.URL.length-13).toLowerCase()&&(E||(E=!0,u.willReloadForCustomSamples=!0,D.customSamples=["legacySamples"],p(0))),this.channels[V].instruments[U].chipWave=t+62>78?$(0,u.chipWaves.length,t+63):t+62>67?$(0,u.chipWaves.length,t+61):t+62==67?40:$(0,u.chipWaves.length,t+62)}else{const t=this.channels[V].instruments[U];t.supersawDynamism=$(0,u.supersawDynamismMax+1,Z[e.charCodeAt(i++)]),t.supersawSpread=$(0,u.supersawSpreadMax+1,Z[e.charCodeAt(i++)]),t.supersawShape=$(0,u.supersawShapeMax+1,Z[e.charCodeAt(i++)])}break;case 70:{const t=this.channels[V].instruments[U];if(1==t.type)t.feedbackType=$(0,u.feedbacks.length,Z[e.charCodeAt(i++)]);else{t.feedbackType6Op=$(0,u.feedbacks6Op.length,Z[e.charCodeAt(i++)]),t.customFeedbackType.fromPreset(t.feedbackType6Op);let n=[];if(113==e.charCodeAt(i)){let s=0;for(i++;113!=e.charCodeAt(i);){n[s]=[];let t=0;for(;82!=e.charCodeAt(i);)n[s][t]=$(1,u.operatorCount+2,Z[e.charCodeAt(i)]),t++,i++;s++,i++}t.customFeedbackType.set(n),i++}}}break;case 66:this.channels[V].instruments[U].feedbackAmplitude=$(0,u.operatorAmplitudeMax+1,Z[e.charCodeAt(i++)]);break;case 86:if(W&&o||g&&l||v&&c){const t=[0,1,2,4,5,6,8,9,10,12,13,14,16,17,18,19,20,21,23,24,25,27,28,29,32,33,34,31,11],n=this.channels[V].instruments[U],s=R[V][U];let a=Z[e.charCodeAt(i++)];(m&&c||!c&&!h&&!f)&&(a=t[a]),s.feedbackEnvelope=ve.M(Z[a]),n.convertLegacySettings(s,A)}break;case 81:{const t=this.channels[V].instruments[U];if(y&&c){const n=[4,5,6,7,8,10,12,13,14,15,16,18,20,22,24,2,1,9,17,19,21,23,0,3];for(let s=0;s<(12==t.type?6:u.operatorCount);s++)t.operators[s].frequency=n[$(0,n.length,Z[e.charCodeAt(i++)])]}else if(c||h||f)for(let n=0;n<(12==t.type?6:u.operatorCount);n++)t.operators[n].frequency=$(0,u.operatorFrequencies.length,Z[e.charCodeAt(i++)]);else{const n=[4,5,6,7,8,10,12,13,14,15,16,18,20,23,27,2,1,9,17,19,21,23,0,3];for(let s=0;s<(12==t.type?6:u.operatorCount);s++)t.operators[s].frequency=n[$(0,n.length,Z[e.charCodeAt(i++)])]}}break;case 80:{const t=this.channels[V].instruments[U];for(let n=0;n<(12==t.type?6:u.operatorCount);n++)t.operators[n].amplitude=$(0,u.operatorAmplitudeMax+1,Z[e.charCodeAt(i++)])}break;case 69:{const t=[0,1,2,4,5,6,8,9,10,12,13,14,16,17,18,19,20,21,23,24,25,27,28,29,32,33,34,31,11],n=[0,1,2,4,5,6,8,9,10,12,13,14,16,17,18,19,20,21,23,24,25,58,59,60],s=this.channels[V].instruments[U];if(W&&o||g&&l||v&&c){const a=R[V][U];a.operatorEnvelopes=[];for(let r=0;r<(12==s.type?6:u.operatorCount);r++){let s=Z[e.charCodeAt(i++)];(m&&c||o)&&(s=t[s]),l&&(s=n[s]),a.operatorEnvelopes[r]=ve.M(s)}s.convertLegacySettings(a,A)}else{const a=$(0,u.maxEnvelopeCount+1,Z[e.charCodeAt(i++)]);(l&&!b||h&&!g||f)&&(s.envelopeSpeed=$(0,u.modulators.dictionary["envelope speed"].maxRawVol+1,Z[e.charCodeAt(i++)]),s.discreteEnvelope=!!Z[e.charCodeAt(i++)]);for(let r=0;r<a;r++){const a=$(0,u.instrumentAutomationTargets.length,Z[e.charCodeAt(i++)]);let r=0;const p=u.instrumentAutomationTargets[a].maxCount;p>1&&(r=$(0,p,Z[e.charCodeAt(i++)]));let h=Z[e.charCodeAt(i++)];(m&&c||o)&&(h=t[h]),l&&(h=n[h]);const f=$(0,u.envelopes.length,h);s.addEnvelope(a,r,f)}}}break;case 82:{const t=this.channels[V].instruments[U];if(y&&c)for(let n=0;n<u.operatorCount;n++){const s=[0,1,3,2,2,2,4,5],a=$(0,s.length,Z[e.charCodeAt(i++)]);3==a?t.operators[n].pulseWidth=5:4==a?t.operators[n].pulseWidth=4:5==a&&(t.operators[n].pulseWidth=6),t.operators[n].waveform=s[a]}else for(let n=0;n<(12==t.type?6:u.operatorCount);n++){if(l){const s=[0,1,3,2,4,5];t.operators[n].waveform=s[$(0,u.operatorWaves.length,Z[e.charCodeAt(i++)])]}else t.operators[n].waveform=$(0,u.operatorWaves.length,Z[e.charCodeAt(i++)]);2==t.operators[n].waveform&&(t.operators[n].pulseWidth=$(0,u.pwmOperatorWaves.length,Z[e.charCodeAt(i++)]))}}break;case 83:{const t=this.channels[V].instruments[U];if(3==t.type){const n=Math.ceil(u.spectrumControlPoints*u.spectrumControlPointBits/6),s=new ee(e,i,i+n);for(let e=0;e<u.spectrumControlPoints;e++)t.spectrumWave.spectrum[e]=s.read(u.spectrumControlPointBits);t.spectrumWave.markCustomWaveDirty(),i+=n}else{if(4!=t.type)throw new Error("Unhandled instrument type for spectrum song tag code.");{const n=Math.ceil(u.drumCount*u.spectrumControlPoints*u.spectrumControlPointBits/6),s=new ee(e,i,i+n);for(let e=0;e<u.drumCount;e++){for(let i=0;i<u.spectrumControlPoints;i++)t.drumsetSpectrumWaves[e].spectrum[i]=s.read(u.spectrumControlPointBits);t.drumsetSpectrumWaves[e].markCustomWaveDirty()}i+=n}}}break;case 72:{const t=this.channels[V].instruments[U],n=Math.ceil(u.harmonicsControlPoints*u.harmonicsControlPointBits/6),s=new ee(e,i,i+n);for(let e=0;e<u.harmonicsControlPoints;e++)t.harmonicsWave.harmonics[e]=s.read(u.harmonicsControlPointBits);t.harmonicsWave.markCustomWaveDirty(),i+=n}break;case 88:if(l&&g||c&&v){const t=this.channels[V].instruments[U];t.aliases=!!Z[e.charCodeAt(i++)],t.aliases&&(t.distortion=0,t.effects|=8)}else if(h||f){this.channels[V].instruments[U].decimalOffset=$(0,51,Z[e.charCodeAt(i++)])}break;case 98:{let t;if(y&&o){const n=Z[e.charCodeAt(i++)],s=Z[e.charCodeAt(i++)];t=Math.ceil(.5*s);const a=new ee(e,i,i+t);for(let e=0;e<s;e++)this.channels[n].bars[e]=a.read(3)+1}else if(g&&o){let n=0;for(;1<<n<this.patternsPerChannel;)n++;t=Math.ceil(this.getChannelCount()*this.barCount*n/6);const s=new ee(e,i,i+t);for(let e=0;e<this.getChannelCount();e++)for(let t=0;t<this.barCount;t++)this.channels[e].bars[t]=s.read(n)+1}else{let n=0;for(;1<<n<this.patternsPerChannel+1;)n++;t=Math.ceil(this.getChannelCount()*this.barCount*n/6);const s=new ee(e,i,i+t);for(let e=0;e<this.getChannelCount();e++)for(let t=0;t<this.barCount;t++)this.channels[e].bars[t]=s.read(n)}i+=t}break;case 112:{let t,n=0,s=!(v&&l||o),a=s?4:3,r=s?16:8;if(y&&o)t=Z[e.charCodeAt(i++)],i++,n=Z[e.charCodeAt(i++)],n<<=6,n+=Z[e.charCodeAt(i++)];else{t=0;let s=_(1,4,Z[e.charCodeAt(i++)]);for(;s>0;)n<<=6,n+=Z[e.charCodeAt(i++)],s--}const p=new ee(e,i,i+n);i+=n;const d=ve.getNeededBits(u.noteSizeMax),m=f?10:9;let b=-1,S=-1,w=-1;const k=l,q=30;for(;;){const e=this.channels[t],i=this.getChannelIsNoise(t),n=this.getChannelIsMod(t),F=this.getMaxInstrumentsPerPattern(t),T=ve.getNeededBits(F-u.instrumentCountMin),z=ve.getNeededBits(e.instruments.length-1);if(n){let i=g&&l||v&&c;const n=Math.max(this.layeredInstruments?4:1,this.patternInstruments?10:1),s=Math.max(this.layeredInstruments?4:1,this.patternInstruments?10:1),a=Math.max(this.layeredInstruments?10:1,this.patternInstruments?10:1),r=this.getMaxInstrumentsPerChannel(),o=!1,f=l&&!g?n:!c||v||o?h||c&&o?a:r:s,d=i?z:ve.getNeededBits(f+2);for(let n=0;n<e.instruments.length;n++){let s=e.instruments[n];for(let e=0;e<u.modCount;e++){let a=p.read(2);switch(a){case 0:s.modChannels[e]=$(0,this.pitchChannelCount+this.noiseChannelCount+1,p.read(8)),s.modInstruments[e]=$(0,this.channels[s.modChannels[e]].instruments.length+2,p.read(d));break;case 1:s.modChannels[e]=this.pitchChannelCount+$(0,this.noiseChannelCount+1,p.read(8)),s.modInstruments[e]=$(0,this.channels[s.modChannels[e]].instruments.length+2,p.read(z));break;case 2:s.modChannels[e]=-1;break;case 3:s.modChannels[e]=-2}if(3!=a&&(s.modulators[e]=p.read(6)),i||"eq filter"!=u.modulators[s.modulators[e]].name&&"note filter"!=u.modulators[s.modulators[e]].name||(s.modFilterTypes[e]=p.read(6)),i&&s.modChannels[e]>=0){let t=M(this.channels[s.modChannels[e]].instruments[s.modInstruments[e]].effects);7==s.modulators[e]?(s.modulators[e]=t?u.modulators.dictionary["note filt cut"].index:u.modulators.dictionary["eq filt cut"].index,s.modFilterTypes[e]=1):8==s.modulators[e]&&(s.modulators[e]=t?u.modulators.dictionary["note filt peak"].index:u.modulators.dictionary["eq filt peak"].index,s.modFilterTypes[e]=2)}else i&&s.modulators[e]==u.modulators.dictionary["song reverb"].index&&(b=t,S=n,w=e);i&&12!=u.modulators[s.modulators[e]].associatedEffect&&(this.channels[s.modChannels[e]].instruments[s.modInstruments[e]].effects|=1<<u.modulators[s.modulators[e]].associatedEffect)}}}const P=[];for(let t=0;t<e.instruments.length;t++){P[t]=[];for(let i=0;i<u.modCount;i++)P[t][u.modCount-1-i]=1+3*+((g&&l||v&&c)&&n&&e.instruments[t].modulators[i]==u.modulators.dictionary.detune.index)}const x=i||n?0:12*e.octave;let H=i||n?4:x;const G=n?[0,1,2,3,4,5]:i?[4,6,7,2,3,8,0,10]:[0,7,12,19,24,-5,-12],I=[];for(let e=0;e<G.length;e++)G[e]+=x;for(let t=0;t<this.patternsPerChannel;t++){const i=e.patterns[t];if(W&&o||g&&l||v&&c)i.instruments[0]=_(0,e.instruments.length-1,p.read(z)),i.instruments.length=1;else if(this.patternInstruments){const t=_(u.instrumentCountMin,F,p.read(T)+u.instrumentCountMin);for(let s=0;s<t;s++)i.instruments[s]=_(0,e.instruments.length-1+2*+n,p.read(z));i.instruments.length=t}else i.instruments[0]=0,i.instruments.length=u.instrumentCountMin;if(!(o&&y||0!=p.read(1))){i.notes.length=0;continue}let b=0;const S=i.notes;let w=0;for(;b<this.beatsPerBar*u.partsPerBeat+ +n;){const t=1==p.read(1);let y=!1,F=0;if(t?F=_(0,I.length-1,p.readLongTail(0,0)):y=1==p.read(1),t||y){let y,T,M;if(t)y=I[F],I.splice(F,1);else{if(y={},s)1==p.read(1)?y.pitchCount=p.read(3)+2:y.pitchCount=1;else for(y.pitchCount=1;y.pitchCount<4&&1==p.read(1);)y.pitchCount++;y.pinCount=p.readPinCount(),y.initialSize=o?2*p.read(2):n?p.read(m):p.read(d),y.pins=[],y.length=0,y.bendCount=0;for(let e=0;e<y.pinCount;e++){let e={};e.pitchBend=1==p.read(1),e.pitchBend&&y.bendCount++,y.length+=O&&o?p.readLegacyPartDuration()*u.partsPerBeat/u.rhythms[this.rhythm].stepsPerBeat:p.readPartDuration(),e.time=y.length,e.size=o?2*p.read(2):n?p.read(m):p.read(d),y.pins.push(e)}}I.unshift(y),I.length>10&&I.pop(),S.length<=w?(T=new ne(0,b,b+y.length,y.initialSize),S[w++]=T):(T=S[w++],T.start=b,T.end=b+y.length,T.pins[0].size=y.initialSize);let z=0;const x=[];for(let e=0;e<y.pitchCount+y.bendCount;e++){if(1==p.read(1)){const e=_(0,G.length-1,p.read(a));M=G[e],G.splice(e,1)}else{M=H;let e=p.readPitchInterval();for(;e>0;){for(M++;-1!=G.indexOf(M);)M++;e--}for(;e<0;){for(M--;-1!=G.indexOf(M);)M--;e++}}G.unshift(M),G.length>r&&G.pop(),e<y.pitchCount?T.pitches[z++]=M:x.push(M),H=e==y.pitchCount-1?T.pitches[0]:M}T.pitches.length=z,x.unshift(T.pitches[0]);const D=n&&e.instruments[i.instruments[0]].modulators[u.modCount-1-T.pitches[0]]===u.modulators.dictionary.tempo.index;let C=0;k&&D&&(C=q-u.tempoMin),n&&(T.pins[0].size+=C,T.pins[0].size*=P[i.instruments[0]][T.pitches[0]]);let A=1;for(const e of y.pins){e.pitchBend&&x.shift();const t=x[0]-T.pitches[0];if(T.pins.length<=A)T.pins[A++]=ie(t,e.time,n?e.size*P[i.instruments[0]][T.pitches[0]]+C:e.size);else{const s=T.pins[A++];s.interval=t,s.time=e.time,s.size=n?e.size*P[i.instruments[0]][T.pitches[0]]+C:e.size}}T.pins.length=A,0==T.start&&(T.continuesLastPattern=W&&o||g&&l||v&&c?!(v&&!h&&!f||o)&&e.instruments[i.instruments[0]].legacyTieOver:1==p.read(1)),b=_(0,this.beatsPerBar*u.partsPerBeat,T.end)}else if(n){const e=1==p.read(1),t=p.readPartDuration();e?b-=t:b+=t}else{b+=O&&o?p.readLegacyPartDuration()*u.partsPerBeat/u.rhythms[this.rhythm].stepsPerBeat:p.readPartDuration()}}S.length=w}if(y&&o)break;if(t++,t>=this.getChannelCount())break}if((l&&g||v&&c)&&w>=0)for(let e=0;e<this.channels.length;e++)for(let t=0;t<this.channels[e].instruments.length;t++){const i=this.channels[e].instruments[t];if(I(i.effects)&&(i.reverb=u.reverbRange-1),b==e&&S==t){const t=this.channels[e].bars[0];if(t>0){const i=this.channels[e].patterns[t-1];let n=6;for(const e of i.notes)e.pitches[0]==u.modCount-1-w&&(n=Math.min(n,e.start));n>0&&i.notes.push(new ne(u.modCount-1-w,0,n,B))}else if(this.channels[e].patterns.length<u.barCountMax){const t=new se;if(this.channels[e].patterns.push(t),this.channels[e].bars[0]=this.channels[e].patterns.length,this.channels[e].patterns.length>this.patternsPerChannel){for(let e=0;e<this.channels.length;e++)this.channels[e].patterns.length<=this.patternsPerChannel&&this.channels[e].patterns.push(new se);this.patternsPerChannel++}t.instruments.length=1,t.instruments[0]=S,t.notes.length=0,t.notes.push(new ne(u.modCount-1-w,0,6,B))}}}}break;default:throw new Error("Unrecognized song tag code "+String.fromCharCode(N)+" at index "+(i-1)+" "+e.substring(0,i))}u.willReloadForCustomSamples&&(window.location.hash=this.toBase64String(),setTimeout((()=>{location.reload()}),50))}static j(e){try{return Boolean(new URL(e))}catch(e){return!1}}static U(e,t,i,n,s){const a=u.chipWaves[0].samples,r=u.rawRawChipWaves[0].samples,l=t.length;t.push(e);const p=u.chipWaves.length;let c=e,h=44100,f=!1,d=60,m=!1,y=null,v=null,g=null,b=null,S=!1,w=!1,k=e.indexOf("!"),q=-1;if(0===k&&(q=e.indexOf("!",k+1),-1!==q)){const T=e.slice(k+1,q).split(",");for(const M of T){const z=M.charAt(0),P=M.slice(1,M.length);"s"===z?h=$(8e3,96001,U(P,44100)):"r"===z?d=U(P,60):"p"===z?f=!0:"a"===z?(y=j(P,null),null!=y&&(m=!0)):"b"===z?(v=j(P,null),null!=v&&(m=!0)):"c"===z?(g=j(P,null),null!=g&&(m=!0)):"d"===z?(b=j(P,null),null!=b&&(b=$(0,4,b),m=!0)):"e"===z&&(S=!0,m=!0)}c=e.slice(q+1,e.length),w=!0}let F=null;if(!ve.j(c))return alert(e+" is not a valid url"),!1;if(F=new URL(c),s&&!w&&null!=F){function x(){c=e.slice(0,e.indexOf(",")),F=new URL(c),h=$(8e3,96001,U(e.slice(e.indexOf(",")+1),44100))}function H(){c=e.slice(0,e.indexOf("!")),F=new URL(c),d=U(e.slice(e.indexOf("!")+1),60)}-1!=e.indexOf("@")&&(c=e.replaceAll("@",""),F=new URL(c),f=!0),-1!=e.indexOf(",")&&-1!=e.indexOf("!")?e.indexOf(",")<e.indexOf("!")?(H(),x()):(x(),H()):(-1!=e.indexOf(",")&&x(),-1!=e.indexOf("!")&&H())}if(null!=F){let G=c;const I=[];let D;44100!==h&&I.push("s"+h),60!==d&&I.push("r"+d),f&&I.push("p"),m&&(null!=y&&I.push("a"+y),null!=v&&I.push("b"+v),null!=g&&I.push("c"+g),null!=b&&I.push("d"+b),S&&I.push("e")),I.length>0&&(G="!"+I.join(",")+"!"+c),t[l]=G,D=decodeURIComponent(F.pathname.replace(/^([^\/]*\/)+/,""));const O=1;u.chipWaves[p]={name:D,expression:O,isCustomSampled:!0,isPercussion:f,rootKey:d,sampleRate:h,samples:a,index:p},u.rawChipWaves[p]={name:D,expression:O,isCustomSampled:!0,isPercussion:f,rootKey:d,sampleRate:h,samples:r,index:p},u.rawRawChipWaves[p]={name:D,expression:O,isCustomSampled:!0,isPercussion:f,rootKey:d,sampleRate:h,samples:r,index:p};const C={type:"chip",eqFilter:[],effects:[],transition:"normal",fadeInSeconds:0,fadeOutTicks:-3,chord:"harmony",wave:D,unison:"none",envelopes:[]};m&&(C.isUsingAdvancedLoopControls=!0,C.chipWaveLoopStart=null!=y?y:0,C.chipWaveLoopEnd=null!=v?v:2,C.chipWaveLoopMode=null!=b?b:0,C.chipWavePlayBackwards=S,C.chipWaveStartOffset=null!=g?g:0);const W={index:0,name:D,midiProgram:80,settings:C};if(i.push(W),!u.willReloadForCustomSamples){o(c,p,C,{isUsingAdvancedLoopControls:m,chipWaveLoopStart:y,chipWaveLoopEnd:v,chipWaveLoopMode:b,chipWavePlayBackwards:S,chipWaveStartOffset:g},h)}n.statusTable[p]=0,n.urlTable[p]=c,n.totalSamples++}return!0}static _(){u.chipWaves=S(u.chipWaves.slice(0,u.firstIndexForSamplesInChipWaveList)),u.rawChipWaves=S(u.rawChipWaves.slice(0,u.firstIndexForSamplesInChipWaveList)),u.rawRawChipWaves=S(u.rawRawChipWaves.slice(0,u.firstIndexForSamplesInChipWaveList))}static P(){D.customSamples=null,ve._(),n.statusTable={},n.urlTable={},n.totalSamples=0,n.samplesLoaded=0,r.dispatchEvent(new s(n.totalSamples,n.samplesLoaded))}toJsonObject(e=!0,t=1,i=!0){const n=[];for(let s=0;s<this.getChannelCount();s++){const a=this.channels[s],r=[],o=this.getChannelIsNoise(s),l=this.getChannelIsMod(s);for(const e of a.instruments)r.push(e.toJsonObject());const p=[];for(const e of a.patterns)p.push(e.toJsonObject(this,a,l));const u=[];if(e)for(let e=0;e<this.loopStart;e++)u.push(a.bars[e]);for(let e=0;e<t;e++)for(let e=this.loopStart;e<this.loopStart+this.loopLength;e++)u.push(a.bars[e]);if(i)for(let e=this.loopStart+this.loopLength;e<this.barCount;e++)u.push(a.bars[e]);const c={type:l?"mod":o?"drum":"pitch",name:a.name,instruments:r,patterns:p,sequence:u};o||(c.octaveScrollBar=a.octave-1),n.push(c)}const s={name:this.title,format:ve.K,version:ve.T,scale:u.scales[this.scale].name,customScale:this.scaleCustom,key:u.keys[this.key].name,keyOctave:this.octave,introBars:this.loopStart,loopBars:this.loopLength,beatsPerBar:this.beatsPerBar,ticksPerBeat:u.rhythms[this.rhythm].stepsPerBeat,beatsPerMinute:this.tempo,reverb:this.reverb,masterGain:this.masterGain,compressionThreshold:this.compressionThreshold,limitThreshold:this.limitThreshold,limitDecay:this.limitDecay,limitRise:this.limitRise,limitRatio:this.limitRatio,compressionRatio:this.compressionRatio,layeredInstruments:this.layeredInstruments,patternInstruments:this.patternInstruments,channels:n};return null!=D.customSamples&&D.customSamples.length>0&&(s.customSamples=D.customSamples),s}fromJsonObject(e,t="auto"){if(this.initToDefault(!0),!e)return;"auto"==t&&"BeepBox"==e.format&&(null!=e.riff&&(t="modbox"),null!=e.masterGain&&(t="jummbox"));const i=("auto"==t?e.format:t).toLowerCase();if(null!=e.name&&(this.title=e.name),null!=e.customSamples){const t=e.customSamples;if(null==D.customSamples||D.customSamples.join(", ")!=t.join(", ")){u.willReloadForCustomSamples=!0,ve._();let e=!1,i=!1,s=!1;const a=[],r=[];for(const o of t)if("legacysamples"===o.toLowerCase())e||(e=!0,a.push(o),p(0));else if("nintariboxsamples"===o.toLowerCase())i||(i=!0,a.push(o),p(1));else if("mariopaintboxsamples"===o.toLowerCase())s||(s=!0,a.push(o),p(2));else{const e=!1;ve.U(o,a,r,n,e)}if(a.length>0&&(D.customSamples=a),r.length>0){const e=S(r);D.presetCategories[D.presetCategories.length]={name:"Custom Sample Presets",presets:e,index:D.presetCategories.length}}}}else{let t=!1;if(null!=e.channels)for(let n=0;n<e.channels.length;n++){const s=e.channels[n];if("pitch"===s.type&&Array.isArray(s.instruments)){const e=s.instruments;for(let n=0;n<e.length;n++){const s=e[n];if("chip"!==s.type)continue;if(null==s.wave)continue;const a=s.wave,r=["paandorasbox kick","paandorasbox snare","paandorasbox piano1","paandorasbox WOW","paandorasbox overdrive","paandorasbox trumpet","paandorasbox saxophone","paandorasbox orchestrahit","paandorasbox detatched violin","paandorasbox synth","paandorasbox sonic3snare","paandorasbox come on","paandorasbox choir","paandorasbox overdriveguitar","paandorasbox flute","paandorasbox legato violin","paandorasbox tremolo violin","paandorasbox amen break","paandorasbox pizzicato violin","paandorasbox tim allen grunt","paandorasbox tuba","paandorasbox loopingcymbal","paandorasbox standardkick","paandorasbox standardsnare","paandorasbox closedhihat","paandorasbox foothihat","paandorasbox openhihat","paandorasbox crashcymbal","paandorasbox pianoC4","paandorasbox liver pad","paandorasbox marimba","paandorasbox susdotwav","paandorasbox wackyboxtts","paandorasbox peppersteak_1","paandorasbox peppersteak_2","paandorasbox vinyl_noise","paandorasbeta slap bass","paandorasbeta HD EB overdrive guitar","paandorasbeta sunsoft bass","paandorasbeta masculine choir","paandorasbeta feminine choir","paandorasbeta tololoche","paandorasbeta harp","paandorasbeta pan flute","paandorasbeta krumhorn","paandorasbeta timpani","paandorasbeta crowd hey","paandorasbeta wario land 4 brass","paandorasbeta wario land 4 rock organ","paandorasbeta wario land 4 DAOW","paandorasbeta wario land 4 hour chime","paandorasbeta wario land 4 tick","paandorasbeta kirby kick","paandorasbeta kirby snare","paandorasbeta kirby bongo","paandorasbeta kirby click","paandorasbeta sonor kick","paandorasbeta sonor snare","paandorasbeta sonor snare (left hand)","paandorasbeta sonor snare (right hand)","paandorasbeta sonor high tom","paandorasbeta sonor low tom","paandorasbeta sonor hihat (closed)","paandorasbeta sonor hihat (half opened)","paandorasbeta sonor hihat (open)","paandorasbeta sonor hihat (open tip)","paandorasbeta sonor hihat (pedal)","paandorasbeta sonor crash","paandorasbeta sonor crash (tip)","paandorasbeta sonor ride"],o=["pandoraasbox kick","pandoraasbox snare","pandoraasbox piano1","pandoraasbox WOW","pandoraasbox overdrive","pandoraasbox trumpet","pandoraasbox saxophone","pandoraasbox orchestrahit","pandoraasbox detatched violin","pandoraasbox synth","pandoraasbox sonic3snare","pandoraasbox come on","pandoraasbox choir","pandoraasbox overdriveguitar","pandoraasbox flute","pandoraasbox legato violin","pandoraasbox tremolo violin","pandoraasbox amen break","pandoraasbox pizzicato violin","pandoraasbox tim allen grunt","pandoraasbox tuba","pandoraasbox loopingcymbal","pandoraasbox standardkick","pandoraasbox standardsnare","pandoraasbox closedhihat","pandoraasbox foothihat","pandoraasbox openhihat","pandoraasbox crashcymbal","pandoraasbox pianoC4","pandoraasbox liver pad","pandoraasbox marimba","pandoraasbox susdotwav","pandoraasbox wackyboxtts","pandoraasbox peppersteak_1","pandoraasbox peppersteak_2","pandoraasbox vinyl_noise","pandoraasbeta slap bass","pandoraasbeta HD EB overdrive guitar","pandoraasbeta sunsoft bass","pandoraasbeta masculine choir","pandoraasbeta feminine choir","pandoraasbeta tololoche","pandoraasbeta harp","pandoraasbeta pan flute","pandoraasbeta krumhorn","pandoraasbeta timpani","pandoraasbeta crowd hey","pandoraasbeta wario land 4 brass","pandoraasbeta wario land 4 rock organ","pandoraasbeta wario land 4 DAOW","pandoraasbeta wario land 4 hour chime","pandoraasbeta wario land 4 tick","pandoraasbeta kirby kick","pandoraasbeta kirby snare","pandoraasbeta kirby bongo","pandoraasbeta kirby click","pandoraasbeta sonor kick","pandoraasbeta sonor snare","pandoraasbeta sonor snare (left hand)","pandoraasbeta sonor snare (right hand)","pandoraasbeta sonor high tom","pandoraasbeta sonor low tom","pandoraasbeta sonor hihat (closed)","pandoraasbeta sonor hihat (half opened)","pandoraasbeta sonor hihat (open)","pandoraasbeta sonor hihat (open tip)","pandoraasbeta sonor hihat (pedal)","pandoraasbeta sonor crash","pandoraasbeta sonor crash (tip)","pandoraasbeta sonor ride"],l=["kick","snare","piano1","WOW","overdrive","trumpet","saxophone","orchestrahit","detatched violin","synth","sonic3snare","come on","choir","overdriveguitar","flute","legato violin","tremolo violin","amen break","pizzicato violin","tim allen grunt","tuba","loopingcymbal","standardkick","standardsnare","closedhihat","foothihat","openhihat","crashcymbal","pianoC4","liver pad","marimba","susdotwav","wackyboxtts"];r.includes(a)?t=!0:o.includes(a)?(t=!0,s.wave=r[o.findIndex((e=>e===a))]):l.includes(a)&&("trumpet"!==a&&"flute"!==a||"paandorasbox"==i)&&(t=!0,s.wave=r[l.findIndex((e=>e===a))])}}}t?(u.willReloadForCustomSamples=!0,ve._(),p(0),D.customSamples=["legacySamples"]):null!=D.customSamples&&D.customSamples.length>0&&(u.willReloadForCustomSamples=!0,ve.P())}if(this.scale=0,null!=e.scale){const t={"romani :)":"double harmonic :)","romani :(":"double harmonic :(","dbl harmonic :)":"double harmonic :)","dbl harmonic :(":"double harmonic :(",enigma:"strange"},i=null!=t[e.scale]?t[e.scale]:e.scale,n=u.scales.findIndex((e=>e.name==i));if(-1!=n&&(this.scale=n),this.scale==u.scales.dictionary.Custom.index&&null!=e.customScale)for(var s of e.customScale.keys())this.scaleCustom[s]=e.customScale[s]}if(null!=e.key)if("number"==typeof e.key)this.key=(e.key+1200>>>0)%u.keys.length;else if("string"==typeof e.key){const t=e.key;if("C+"===t)this.key=0,this.octave=1;else if("G- (actually F#-)"===t)this.key=6,this.octave=-1;else if("C-"===t)this.key=0,this.octave=-1;else if("oh no (F-)"===t)this.key=5,this.octave=-1;else{const e=t.charAt(0).toUpperCase(),i=t.charAt(1).toLowerCase();let n={C:0,D:2,E:4,F:5,G:7,A:9,B:11}[e];const s={"#":1,"♯":1,b:-1,"♭":-1}[i];null!=n&&(null!=s&&(n+=s),n<0&&(n+=12),n%=12,this.key=n)}}null!=e.beatsPerMinute&&(this.tempo=$(u.tempoMin,u.tempoMax+1,0|e.beatsPerMinute)),null!=e.keyOctave&&(this.octave=$(u.octaveMin,u.octaveMax+1,0|e.keyOctave));let a=0;null!=e.reverb&&(a=$(0,32,0|e.reverb)),null!=e.beatsPerBar&&(this.beatsPerBar=Math.max(u.beatsPerBarMin,Math.min(u.beatsPerBarMax,0|e.beatsPerBar)));let r=4;null!=e.ticksPerBeat&&(r=0|e.ticksPerBeat||4,this.rhythm=u.rhythms.findIndex((e=>e.stepsPerBeat==r)),-1==this.rhythm&&(this.rhythm=1)),null!=e.masterGain?this.masterGain=Math.max(0,Math.min(5,e.masterGain||0)):this.masterGain=1,null!=e.limitThreshold?this.limitThreshold=Math.max(0,Math.min(2,e.limitThreshold||0)):this.limitThreshold=1,null!=e.compressionThreshold?this.compressionThreshold=Math.max(0,Math.min(1.1,e.compressionThreshold||0)):this.compressionThreshold=1,null!=e.limitRise?this.limitRise=Math.max(2e3,Math.min(1e4,e.limitRise||0)):this.limitRise=4e3,null!=e.limitDecay?this.limitDecay=Math.max(1,Math.min(30,e.limitDecay||0)):this.limitDecay=4,null!=e.limitRatio?this.limitRatio=Math.max(0,Math.min(11,e.limitRatio||0)):this.limitRatio=1,null!=e.compressionRatio?this.compressionRatio=Math.max(0,Math.min(1.168,e.compressionRatio||0)):this.compressionRatio=1;let o=1,l=1,c=1;if(null!=e.channels)for(const t of e.channels)t.instruments&&(o=Math.max(o,0|t.instruments.length)),t.patterns&&(l=Math.max(l,0|t.patterns.length)),t.sequence&&(c=Math.max(c,0|t.sequence.length));null!=e.layeredInstruments?this.layeredInstruments=!!e.layeredInstruments:this.layeredInstruments=!1,null!=e.patternInstruments?this.patternInstruments=!!e.patternInstruments:this.patternInstruments=o>1,this.patternsPerChannel=Math.min(l,u.barCountMax),this.barCount=Math.min(c,u.barCountMax),null!=e.introBars&&(this.loopStart=$(0,this.barCount,0|e.introBars)),null!=e.loopBars&&(this.loopLength=$(1,this.barCount-this.loopStart+1,0|e.loopBars));const h=[],f=[],d=[];if(null!=e.channels)for(let t=0;t<e.channels.length;t++){let n=e.channels[t];const s=new ye;let o=!1,l=!1;if(null!=n.type?(o="drum"==n.type,l="mod"==n.type):o=t>=3,o?f.push(s):l?d.push(s):h.push(s),null!=n.octaveScrollBar&&(s.octave=$(0,u.pitchOctaves,1+(0|n.octaveScrollBar)),o&&(s.octave=0)),null!=n.name?s.name=n.name:s.name="",Array.isArray(n.instruments)){const e=n.instruments;for(let t=0;t<e.length&&!(t>=this.getMaxInstrumentsPerChannel());t++){const n=new me(o,l);s.instruments[t]=n,n.fromJsonObject(e[t],o,l,!1,!1,a,i)}}for(let e=0;e<this.patternsPerChannel;e++){const t=new se;let a;s.patterns[e]=t,n.patterns&&(a=n.patterns[e]),null!=a&&t.fromJsonObject(a,this,s,r,o,l,i)}s.patterns.length=this.patternsPerChannel;for(let e=0;e<this.barCount;e++)s.bars[e]=null!=n.sequence?Math.min(this.patternsPerChannel,n.sequence[e]>>>0):0;s.bars.length=this.barCount}h.length>u.pitchChannelCountMax&&(h.length=u.pitchChannelCountMax),f.length>u.noiseChannelCountMax&&(f.length=u.noiseChannelCountMax),d.length>u.modChannelCountMax&&(d.length=u.modChannelCountMax),this.pitchChannelCount=h.length,this.noiseChannelCount=f.length,this.modChannelCount=d.length,this.channels.length=0,Array.prototype.push.apply(this.channels,h),Array.prototype.push.apply(this.channels,f),Array.prototype.push.apply(this.channels,d),u.willReloadForCustomSamples&&(window.location.hash=this.toBase64String(),setTimeout((()=>{location.reload()}),50))}getPattern(e,t){if(t<0||t>=this.barCount)return null;const i=this.channels[e].bars[t];return 0==i?null:this.channels[e].patterns[i-1]}getBeatsPerMinute(){return this.tempo}static getNeededBits(e){return 32-Math.clz32(Math.ceil(e+1)-1)}restoreLimiterDefaults(){this.compressionRatio=1,this.limitRatio=1,this.limitRise=4e3,this.limitDecay=4,this.limitThreshold=1,this.compressionThreshold=1,this.masterGain=1}}ve.K=u.jsonFormat,ve.I=2,ve.H=9,ve.W=1,ve.O=6,ve.R=1,ve.L=4,ve.V=1,ve.N=5,ve.$=0,ve.T=1,ve.q=85;class ge{constructor(){this.delayLine=null,this.allPassG=0,this.allPassGDelta=0,this.sustainFilterA1=0,this.sustainFilterA1Delta=0,this.sustainFilterA2=0,this.sustainFilterA2Delta=0,this.sustainFilterB0=0,this.sustainFilterB0Delta=0,this.sustainFilterB1=0,this.sustainFilterB1Delta=0,this.sustainFilterB2=0,this.sustainFilterB2Delta=0,this.reset()}reset(){this.delayIndex=-1,this.allPassSample=0,this.allPassPrevInput=0,this.sustainFilterSample=0,this.sustainFilterPrevOutput2=0,this.sustainFilterPrevInput1=0,this.sustainFilterPrevInput2=0,this.fractionalDelaySample=0,this.prevDelayLength=-1,this.delayResetOffset=0}update(e,t,i,n,s,a,r,o){const l=2*Math.PI*u.pickedStringDispersionCenterFreq/e.samplesPerSecond,p=this.prevDelayLength,c=i.phaseDeltas[n],h=i.phaseDeltaScales[n],f=c*Math.pow(h,s),d=2*Math.PI*c,m=2*Math.PI*f,y=2*d,v=2*m,g=Math.min(Math.PI,d*u.pickedStringDispersionFreqMult*Math.pow(l/d,u.pickedStringDispersionFreqScale)),b=Math.min(Math.PI,m*u.pickedStringDispersionFreqMult*Math.pow(l/m,u.pickedStringDispersionFreqScale)),S=2*Math.PI*u.pickedStringShelfHz/e.samplesPerSecond,w=(Math.pow(100,a)-1)/99,k=(Math.pow(100,r)-1)/99,q=1==o?.25:0,F=15.6,T=3*e.samplesPerSecond/48e3,M=Math.pow(.5,w*Math.pow(S/(d*F),1+2*q)*F),z=Math.pow(.5,k*Math.pow(S/(m*F),1+2*q)*F),P=Math.pow(M,.002),x=Math.pow(z,.002);qe.tempFilterStartCoefficients.allPass1stOrderInvertPhaseAbove(g),e.tempFrequencyResponse.analyze(qe.tempFilterStartCoefficients,y);const H=qe.tempFilterStartCoefficients.b[0],G=-e.tempFrequencyResponse.angle()/y;qe.tempFilterEndCoefficients.allPass1stOrderInvertPhaseAbove(b),e.tempFrequencyResponse.analyze(qe.tempFilterEndCoefficients,v);const I=qe.tempFilterEndCoefficients.b[0],D=-e.tempFrequencyResponse.angle()/v,O=0==o?0:1;if(0==O){const e=Math.pow(M,u.stringDecayRate),t=Math.pow(z,u.stringDecayRate);qe.tempFilterStartCoefficients.highShelf2ndOrder(S,e,.5),qe.tempFilterEndCoefficients.highShelf2ndOrder(S,t,.5)}else{const t=Math.pow(1==O?0:1,.25),i=Math.pow(T*T*d*3.3*48e3/e.samplesPerSecond,.5+q)/T/Math.pow(w,.5),n=Math.pow(T*T*m*3.3*48e3/e.samplesPerSecond,.5+q)/T/Math.pow(k,.5),s=i*Math.pow(2,.5-1.75*(1-Math.pow(1-t,.85))),a=n*Math.pow(2,.5-1.75*(1-Math.pow(1-t,.85))),r=Math.pow(2,-Math.pow(2,-Math.pow(t,.9))),o=Math.pow(2,-Math.pow(2,-Math.pow(t,.9)));qe.tempFilterStartCoefficients.lowPass2ndOrderButterworth(B(s),r),qe.tempFilterEndCoefficients.lowPass2ndOrderButterworth(B(a),o)}e.tempFrequencyResponse.analyze(qe.tempFilterStartCoefficients,y);const C=qe.tempFilterStartCoefficients.a[1],W=qe.tempFilterStartCoefficients.a[2],A=qe.tempFilterStartCoefficients.b[0]*P,E=qe.tempFilterStartCoefficients.b[1]*P,L=qe.tempFilterStartCoefficients.b[2]*P,R=-e.tempFrequencyResponse.angle()/y;e.tempFrequencyResponse.analyze(qe.tempFilterEndCoefficients,v);const N=qe.tempFilterEndCoefficients.a[1],V=qe.tempFilterEndCoefficients.a[2],$=qe.tempFilterEndCoefficients.b[0]*x,_=qe.tempFilterEndCoefficients.b[1]*x,U=qe.tempFilterEndCoefficients.b[2]*x,j=-e.tempFrequencyResponse.angle()/v,Q=1/c,K=1/f,J=Math.ceil(2*Math.max(Q,K)),X=Q-G-R,Y=K-D-j;this.prevDelayLength=X,this.delayLengthDelta=(Y-X)/s,this.allPassG=H,this.sustainFilterA1=C,this.sustainFilterA2=W,this.sustainFilterB0=A,this.sustainFilterB1=E,this.sustainFilterB2=L,this.allPassGDelta=(I-H)/s,this.sustainFilterA1Delta=(N-C)/s,this.sustainFilterA2Delta=(V-W)/s,this.sustainFilterB0Delta=($-A)/s,this.sustainFilterB1Delta=(_-E)/s,this.sustainFilterB2Delta=(U-L)/s;const Z=Math.abs(Math.log2(X/p))>.01,ee=-1==this.delayIndex||Z;if(null==this.delayLine||this.delayLine.length<=J){const t=Math.ceil(2*e.samplesPerSecond/me.frequencyFromPitch(12)),i=new Float32Array(qe.fittingPowerOfTwo(Math.max(t,J)));if(!ee&&null!=this.delayLine){const e=this.delayLine.length-1>>0,t=this.delayIndex+this.delayResetOffset;this.delayIndex=this.delayLine.length-this.delayResetOffset;for(let n=0;n<this.delayLine.length;n++)i[n]=this.delayLine[t+n&e]}this.delayLine=i}const te=this.delayLine,ie=te.length-1>>0;if(ee){this.delayIndex=0,this.allPassSample=0,this.allPassPrevInput=0,this.sustainFilterSample=0,this.sustainFilterPrevOutput2=0,this.sustainFilterPrevInput1=0,this.sustainFilterPrevInput2=0,this.fractionalDelaySample=0;const i=-X,n=Math.floor(i-Q/2),s=Math.ceil(n+2*Q);this.delayResetOffset=s;for(let e=n;e<=s;e++)te[e&ie]=0;const a=t.wave,r=a.length-1,o=r/Q,l=Math.min(.2*Q,.003*e.samplesPerSecond),p=Math.ceil(i),u=i+Q+l,c=u;let h=(p-i)*o,f=0;for(let e=p;e<=c;e++){const t=0|h,n=t%r;let s=a[n];const p=h-t;s+=(a[n+1]-s)*p;const c=(s-f)/o,d=Math.min(1,(e-i)/l)*Math.min(1,(u-e)/l),m=d*d*(3-2*d);te[e&ie]+=c*m,f=s,h+=o}}}}class be{constructor(){this.noteSecondsStart=0,this.noteSecondsStartUnscaled=0,this.noteSecondsEnd=0,this.noteSecondsEndUnscaled=0,this.noteTicksStart=0,this.noteTicksEnd=0,this.noteSizeStart=u.noteSizeMax,this.noteSizeEnd=u.noteSizeMax,this.prevNoteSize=u.noteSizeMax,this.nextNoteSize=u.noteSizeMax,this.J=u.noteSizeMax,this.prevNoteSecondsStart=0,this.prevNoteSecondsStartUnscaled=0,this.prevNoteSecondsEnd=0,this.prevNoteSecondsEndUnscaled=0,this.prevNoteTicksStart=0,this.prevNoteTicksEnd=0,this.X=u.noteSizeMax,this.prevSlideStart=!1,this.prevSlideEnd=!1,this.nextSlideStart=!1,this.nextSlideEnd=!1,this.prevSlideRatioStart=0,this.prevSlideRatioEnd=0,this.nextSlideRatioStart=0,this.nextSlideRatioEnd=0,this.envelopeStarts=[],this.envelopeEnds=[],this.Y=[],this.Z=0,this.lowpassCutoffDecayVolumeCompensation=1;for(let e=0;e<41;e++)this.envelopeStarts[e]=1,this.envelopeEnds[e]=1;this.reset()}reset(){this.noteSecondsEnd=0,this.noteSecondsEndUnscaled=0,this.noteTicksEnd=0,this.J=u.noteSizeMax,this.prevNoteSecondsEnd=0,this.prevNoteSecondsEndUnscaled=0,this.prevNoteTicksEnd=0,this.X=u.noteSizeMax,this.Z=0}computeEnvelopes(e,t,i,n,s,a,r){const o=s;s*=r;const l=e.getTransition();null==a||!a.atNoteStart||l.continues||a.forceContinueAtStart||(this.prevNoteSecondsEnd=this.noteSecondsEnd,this.prevNoteSecondsEndUnscaled=this.noteSecondsEndUnscaled,this.prevNoteTicksEnd=this.noteTicksEnd,this.X=this.J,this.noteSecondsEnd=0,this.noteSecondsEndUnscaled=0,this.noteTicksEnd=0),null!=a&&(null!=a.note?this.J=a.note.pins[a.note.pins.length-1].size:this.J=u.noteSizeMax);const p=i+r,c=n+1,h=this.noteSecondsEnd,f=this.noteSecondsEndUnscaled,d=h+s,m=f+o,y=this.noteTicksEnd,v=y+1,g=this.prevNoteSecondsEnd,b=this.prevNoteSecondsEndUnscaled,S=g+s,w=b+o,k=this.prevNoteTicksEnd,q=k+1,F=1/(u.ticksPerPart*u.partsPerBeat),T=F*i,M=F*p;let z=this.J,P=this.J,x=this.X,H=0,G=!1,I=!1,D=!1,O=!1,C=0,W=0,A=0,E=0;if(null!=a&&null!=a.note&&!a.passedEndOfNote){const e=a.note.getEndPinIndex(t),i=a.note.pins[e-1],s=a.note.pins[e],r=(a.note.start+i.time)*u.ticksPerPart,o=(a.note.start+s.time)*u.ticksPerPart,p=(n-r)/(o-r),h=(c-r)/(o-r);if(z=i.size+(s.size-i.size)*p,P=i.size+(s.size-i.size)*h,l.slides){const e=a.noteStartPart*u.ticksPerPart,t=a.noteEndPart*u.ticksPerPart,i=.5*(t-e),s=Math.min(i,l.slideTicks);null==a.prevNote||a.forceContinueAtStart||(n-e<s&&(G=!0,C=.5*(1-(n-e)/s)),c-e<s&&(I=!0,W=.5*(1-(c-e)/s))),null==a.nextNote||a.forceContinueAtEnd||(H=a.nextNote.pins[0].size,t-n<s&&(D=!0,A=.5*(1-(t-n)/s)),t-c<s&&(O=!0,E=.5*(1-(t-c)/s)))}}let L=1,R=!1;for(let t=0;t<=e.envelopeCount;t++){let i,n,s;if(t==e.envelopeCount){if(R)break;i=u.instrumentAutomationTargets.dictionary.noteVolume,n=0,s=u.envelopes.dictionary["note size"]}else{let a=e.envelopes[t];i=u.instrumentAutomationTargets[a.target],n=a.index,s=u.envelopes[a.envelope],0==s.type&&(R=!0)}if(null!=i.computeIndex){const t=i.computeIndex+n;let a=be.computeEnvelope(s,h,T,z);if(G){a+=(be.computeEnvelope(s,g,T,x)-a)*C}if(D){a+=(be.computeEnvelope(s,0,T,H)-a)*A}let r=a;if(0==e.discreteEnvelope){if(r=be.computeEnvelope(s,d,M,P),I){r+=(be.computeEnvelope(s,S,M,x)-r)*W}if(O){r+=(be.computeEnvelope(s,0,M,H)-r)*E}}if(this.envelopeStarts[t]*=a,this.envelopeEnds[t]*=r,this.Y[this.Z++]=t,i.isFilter){const t=null!=e.tmpNoteFilterStart?e.tmpNoteFilterStart:e.noteFilter;t.controlPointCount>n&&0==t.controlPoints[n].type&&(L=Math.max(L,be.getLowpassCutoffDecayVolumeCompensation(s)))}}}this.noteSecondsStart=h,this.noteSecondsStartUnscaled=f,this.noteSecondsEnd=d,this.noteSecondsEndUnscaled=m,this.noteTicksStart=y,this.noteTicksEnd=v,this.prevNoteSecondsStart=g,this.prevNoteSecondsStartUnscaled=b,this.prevNoteSecondsEnd=S,this.prevNoteSecondsEndUnscaled=w,this.prevNoteTicksStart=k,this.prevNoteTicksEnd=q,this.prevNoteSize=x,this.nextNoteSize=H,this.noteSizeStart=z,this.noteSizeEnd=P,this.prevSlideStart=G,this.prevSlideEnd=I,this.nextSlideStart=D,this.nextSlideEnd=O,this.prevSlideRatioStart=C,this.prevSlideRatioEnd=W,this.nextSlideRatioStart=A,this.nextSlideRatioEnd=E,this.lowpassCutoffDecayVolumeCompensation=L}clearEnvelopes(){for(let e=0;e<this.Z;e++){const t=this.Y[e];this.envelopeStarts[t]=1,this.envelopeEnds[t]=1}this.Z=0}static computeEnvelope(e,t,i,n){switch(e.type){case 0:return qe.noteSizeToVolumeMult(n);case 1:return 1;case 4:return 1/(1+t*e.speed);case 5:return 1-1/(1+t*e.speed);case 6:return.5-.5*Math.cos(2*i*Math.PI*e.speed);case 7:return.75-.25*Math.cos(2*i*Math.PI*e.speed);case 2:return Math.max(1,2-10*t);case 3:const s=.25/Math.sqrt(e.speed);return t<s?t/s:1/(1+(t-s)*e.speed);case 8:return Math.pow(2,-e.speed*t);case 13:return 1*+(t<.25/Math.sqrt(e.speed));case 9:let a=.5-.5*Math.cos(i*e.speed);return a=1/(1+t*(e.speed-a/(1.5/e.speed))),a=a>0?a:0,a;case 11:{let i=1-t/(16/e.speed);return i=i>0?i:0,i}case 12:{let i=t/(16/e.speed);return i=i<1?i:1,i}default:throw new Error("Unrecognized operator envelope type.")}}static getLowpassCutoffDecayVolumeCompensation(e){return 8==e.type?1.25+.025*e.speed:4==e.type?1+.02*e.speed:1}}class Se{constructor(){this.pitches=Array(u.maxChordSize+2).fill(0),this.pitchCount=0,this.chordSize=0,this.drumsetPitch=null,this.note=null,this.prevNote=null,this.nextNote=null,this.prevNotePitchIndex=0,this.nextNotePitchIndex=0,this.freshlyAllocated=!0,this.atNoteStart=!1,this.isOnLastTick=!1,this.passedEndOfNote=!1,this.forceContinueAtStart=!1,this.forceContinueAtEnd=!1,this.noteStartPart=0,this.noteEndPart=0,this.ticksSinceReleased=0,this.liveInputSamplesHeld=0,this.lastInterval=0,this.noiseSample=0,this.noiseSampleA=0,this.noiseSampleB=0,this.stringSustainStart=0,this.stringSustainEnd=0,this.phases=[],this.operatorWaves=[],this.phaseDeltas=[],this.directions=[],this.chipWaveCompletions=[],this.chipWavePrevWaves=[],this.chipWaveCompletionsLastWave=[],this.phaseDeltaScales=[],this.expression=0,this.expressionDelta=0,this.operatorExpressions=[],this.operatorExpressionDeltas=[],this.prevPitchExpressions=Array(u.maxPitchOrOperatorCount).fill(null),this.prevVibrato=null,this.prevStringDecay=null,this.pulseWidth=0,this.pulseWidthDelta=0,this.decimalOffset=0,this.supersawDynamism=0,this.supersawDynamismDelta=0,this.supersawUnisonDetunes=[],this.supersawShape=0,this.supersawShapeDelta=0,this.supersawDelayLength=0,this.supersawDelayLengthDelta=0,this.supersawDelayLine=null,this.supersawDelayIndex=-1,this.supersawPrevPhaseDelta=null,this.pickedStrings=[],this.noteFilters=[],this.noteFilterCount=0,this.initialNoteFilterInput1=0,this.initialNoteFilterInput2=0,this.specialIntervalExpressionMult=1,this.feedbackOutputs=[],this.feedbackMult=0,this.feedbackDelta=0,this.stereoVolumeLStart=0,this.stereoVolumeRStart=0,this.stereoVolumeLDelta=0,this.stereoVolumeRDelta=0,this.stereoDelayStart=0,this.stereoDelayEnd=0,this.stereoDelayDelta=0,this.customVolumeStart=0,this.customVolumeEnd=0,this.filterResonanceStart=0,this.filterResonanceDelta=0,this.isFirstOrder=!1,this.envelopeComputer=new be,this.reset()}reset(){this.noiseSample=0,this.noiseSampleA=0,this.noiseSampleB=0;for(let e=0;e<u.maxPitchOrOperatorCount;e++)this.phases[e]=0,this.directions[e]=1,this.chipWaveCompletions[e]=0,this.chipWavePrevWaves[e]=0,this.chipWaveCompletionsLastWave[e]=0,this.operatorWaves[e]=u.operatorWaves[0],this.feedbackOutputs[e]=0,this.prevPitchExpressions[e]=null;for(let e=0;e<this.noteFilterCount;e++)this.noteFilters[e].resetOutput();this.noteFilterCount=0,this.initialNoteFilterInput1=0,this.initialNoteFilterInput2=0,this.liveInputSamplesHeld=0,this.supersawDelayIndex=-1;for(const e of this.pickedStrings)e.reset();this.envelopeComputer.reset(),this.prevVibrato=null,this.prevStringDecay=null,this.supersawPrevPhaseDelta=null,this.drumsetPitch=null}}class we{constructor(){this.awake=!1,this.computed=!1,this.tonesAddedInThisTick=!1,this.flushingDelayLines=!1,this.deactivateAfterThisTick=!1,this.attentuationProgress=0,this.flushedSamples=0,this.activeTones=new A,this.activeModTones=new A,this.releasedTones=new A,this.liveInputTones=new A,this.type=0,this.synthesizer=null,this.wave=null,this.isUsingAdvancedLoopControls=!1,this.chipWaveLoopStart=0,this.chipWaveLoopEnd=0,this.chipWaveLoopMode=0,this.chipWavePlayBackwards=!1,this.chipWaveStartOffset=0,this.noisePitchFilterMult=1,this.unison=null,this.unisonVoices=1,this.unisonSpread=0,this.unisonOffset=0,this.unisonExpression=1.4,this.unisonSign=1,this.chord=null,this.effects=0,this.volumeScale=0,this.aliases=!1,this.arpTime=0,this.vibratoTime=0,this.nextVibratoTime=0,this.envelopeTime=0,this.dutyCycleTime=0,this.eqFilterVolume=1,this.eqFilterVolumeDelta=0,this.mixVolume=1,this.mixVolumeDelta=0,this.delayInputMult=0,this.delayInputMultDelta=0,this.distortion=0,this.distortionDelta=0,this.distortionDrive=0,this.distortionDriveDelta=0,this.distortionFractionalInput1=0,this.distortionFractionalInput2=0,this.distortionFractionalInput3=0,this.distortionPrevInput=0,this.distortionNextOutput=0,this.bitcrusherPrevInput=0,this.bitcrusherCurrentOutput=0,this.bitcrusherPhase=1,this.bitcrusherPhaseDelta=0,this.bitcrusherPhaseDeltaScale=1,this.bitcrusherScale=1,this.bitcrusherScaleScale=1,this.bitcrusherFoldLevel=1,this.bitcrusherFoldLevelScale=1,this.eqFilters=[],this.eqFilterCount=0,this.initialEqFilterInput1=0,this.initialEqFilterInput2=0,this.panningDelayLine=null,this.panningDelayPos=0,this.panningVolumeL=0,this.panningVolumeR=0,this.panningVolumeDeltaL=0,this.panningVolumeDeltaR=0,this.panningOffsetL=0,this.panningOffsetR=0,this.panningOffsetDeltaL=0,this.panningOffsetDeltaR=0,this.chorusDelayLineL=null,this.chorusDelayLineR=null,this.chorusDelayLineDirty=!1,this.chorusDelayPos=0,this.chorusPhase=0,this.chorusVoiceMult=0,this.chorusVoiceMultDelta=0,this.chorusCombinedMult=0,this.chorusCombinedMultDelta=0,this.echoDelayLineL=null,this.echoDelayLineR=null,this.echoDelayLineDirty=!1,this.echoDelayPos=0,this.echoDelayOffsetStart=0,this.echoDelayOffsetEnd=null,this.echoDelayOffsetRatio=0,this.echoDelayOffsetRatioDelta=0,this.echoMult=0,this.echoMultDelta=0,this.echoShelfA1=0,this.echoShelfB0=0,this.echoShelfB1=0,this.echoShelfSampleL=0,this.echoShelfSampleR=0,this.echoShelfPrevInputL=0,this.echoShelfPrevInputR=0,this.reverbDelayLine=null,this.reverbDelayLineDirty=!1,this.reverbDelayPos=0,this.reverbMult=0,this.reverbMultDelta=0,this.reverbShelfA1=0,this.reverbShelfB0=0,this.reverbShelfB1=0,this.reverbShelfSample0=0,this.reverbShelfSample1=0,this.reverbShelfSample2=0,this.reverbShelfSample3=0,this.reverbShelfPrevInput0=0,this.reverbShelfPrevInput1=0,this.reverbShelfPrevInput2=0,this.reverbShelfPrevInput3=0,this.spectrumWave=new pe,this.harmonicsWave=new ce,this.drumsetSpectrumWaves=[];for(let e=0;e<u.drumCount;e++)this.drumsetSpectrumWaves[e]=new pe}allocateNecessaryBuffers(e,t,i){if(x(t.effects)&&(null==this.panningDelayLine||this.panningDelayLine.length<e.panningDelayBufferSize)&&(this.panningDelayLine=new Float32Array(e.panningDelayBufferSize)),H(t.effects)&&((null==this.chorusDelayLineL||this.chorusDelayLineL.length<e.chorusDelayBufferSize)&&(this.chorusDelayLineL=new Float32Array(e.chorusDelayBufferSize)),(null==this.chorusDelayLineR||this.chorusDelayLineR.length<e.chorusDelayBufferSize)&&(this.chorusDelayLineR=new Float32Array(e.chorusDelayBufferSize))),G(t.effects)){const e=Math.max(u.echoDelayRange>>1,t.echoDelay+1),n=2*qe.fittingPowerOfTwo(e*u.echoDelayStepTicks*i);if(null==this.echoDelayLineL||null==this.echoDelayLineR)this.echoDelayLineL=new Float32Array(n),this.echoDelayLineR=new Float32Array(n);else if(this.echoDelayLineL.length<n||this.echoDelayLineR.length<n){const e=new Float32Array(n),t=new Float32Array(n),i=this.echoDelayLineL.length-1;for(let n=0;n<this.echoDelayLineL.length;n++)e[n]=this.echoDelayLineL[this.echoDelayPos+n&i],t[n]=this.echoDelayLineL[this.echoDelayPos+n&i];this.echoDelayPos=this.echoDelayLineL.length,this.echoDelayLineL=e,this.echoDelayLineR=t}}I(t.effects)&&null==this.reverbDelayLine&&(this.reverbDelayLine=new Float32Array(u.reverbDelayBufferSize))}deactivate(){this.bitcrusherPrevInput=0,this.bitcrusherCurrentOutput=0,this.bitcrusherPhase=1;for(let e=0;e<this.eqFilterCount;e++)this.eqFilters[e].resetOutput();if(this.eqFilterCount=0,this.initialEqFilterInput1=0,this.initialEqFilterInput2=0,this.distortionFractionalInput1=0,this.distortionFractionalInput2=0,this.distortionFractionalInput3=0,this.distortionPrevInput=0,this.distortionNextOutput=0,this.panningDelayPos=0,null!=this.panningDelayLine)for(let e=0;e<this.panningDelayLine.length;e++)this.panningDelayLine[e]=0;this.echoDelayOffsetEnd=null,this.echoShelfSampleL=0,this.echoShelfSampleR=0,this.echoShelfPrevInputL=0,this.echoShelfPrevInputR=0,this.reverbShelfSample0=0,this.reverbShelfSample1=0,this.reverbShelfSample2=0,this.reverbShelfSample3=0,this.reverbShelfPrevInput0=0,this.reverbShelfPrevInput1=0,this.reverbShelfPrevInput2=0,this.reverbShelfPrevInput3=0,this.volumeScale=1,this.aliases=!1,this.awake=!1,this.flushingDelayLines=!1,this.deactivateAfterThisTick=!1,this.attentuationProgress=0,this.flushedSamples=0}resetAllEffects(){if(this.deactivate(),this.vibratoTime=0,this.nextVibratoTime=0,this.arpTime=0,this.envelopeTime=0,this.chorusDelayLineDirty){for(let e=0;e<this.chorusDelayLineL.length;e++)this.chorusDelayLineL[e]=0;for(let e=0;e<this.chorusDelayLineR.length;e++)this.chorusDelayLineR[e]=0}if(this.echoDelayLineDirty){for(let e=0;e<this.echoDelayLineL.length;e++)this.echoDelayLineL[e]=0;for(let e=0;e<this.echoDelayLineR.length;e++)this.echoDelayLineR[e]=0}if(this.reverbDelayLineDirty)for(let e=0;e<this.reverbDelayLine.length;e++)this.reverbDelayLine[e]=0;this.chorusPhase=0}compute(e,t,i,n,s,a,r){this.computed=!0,this.type=t.type,this.synthesizer=qe.getInstrumentSynthFunction(t),this.unison=u.unisons[t.unison],this.chord=t.getChord(),this.noisePitchFilterMult=u.chipNoises[t.chipNoise].pitchFilterMult,this.effects=t.effects,this.aliases=t.aliases,this.volumeScale=1,this.allocateNecessaryBuffers(e,t,i);const o=e.samplesPerSecond;this.updateWaves(t,o);const l=z(this.effects),p=P(this.effects),c=x(this.effects),h=H(this.effects),f=G(this.effects),d=I(this.effects);if(l){let i=t.distortion,s=t.distortion;e.isModActive(u.modulators.dictionary.distortion.index,a,r)&&(i=e.getModValue(u.modulators.dictionary.distortion.index,a,r,!1),s=e.getModValue(u.modulators.dictionary.distortion.index,a,r,!0));const o=Math.min(1,i/(u.distortionRange-1)),l=Math.min(1,s/(u.distortionRange-1)),p=Math.pow(1-.895*(Math.pow(20,o)-1)/19,2),c=Math.pow(1-.895*(Math.pow(20,l)-1)/19,2),h=(1+2*o)/u.distortionBaseVolume,f=(1+2*l)/u.distortionBaseVolume;this.distortion=p,this.distortionDelta=(c-p)/n,this.distortionDrive=h,this.distortionDriveDelta=(f-h)/n}if(p){let i=t.bitcrusherFreq,s=t.bitcrusherFreq;e.isModActive(u.modulators.dictionary["freq crush"].index,a,r)&&(i=e.getModValue(u.modulators.dictionary["freq crush"].index,a,r,!1),s=e.getModValue(u.modulators.dictionary["freq crush"].index,a,r,!0));let l=t.bitcrusherQuantization,p=t.bitcrusherQuantization;e.isModActive(u.modulators.dictionary["bit crush"].index,a,r)&&(l=e.getModValue(u.modulators.dictionary["bit crush"].index,a,r,!1),p=e.getModValue(u.modulators.dictionary["bit crush"].index,a,r,!0));const c=u.keys[e.song.key].basePitch+u.pitchesPerOctave*e.song.octave,h=me.frequencyFromPitch(c+60)*Math.pow(2,(u.bitcrusherFreqRange-1-i)*u.bitcrusherOctaveStep),f=me.frequencyFromPitch(c+60)*Math.pow(2,(u.bitcrusherFreqRange-1-s)*u.bitcrusherOctaveStep),d=Math.min(1,h/o),m=Math.min(1,f/o);this.bitcrusherPhaseDelta=d,this.bitcrusherPhaseDeltaScale=Math.pow(m/d,1/n);const y=2*u.bitcrusherBaseVolume*Math.pow(2,1-Math.pow(2,.5*(u.bitcrusherQuantizationRange-1-l))),v=2*u.bitcrusherBaseVolume*Math.pow(2,1-Math.pow(2,.5*(u.bitcrusherQuantizationRange-1-p)));this.bitcrusherScale=y,this.bitcrusherScaleScale=Math.pow(v/y,1/n);const g=2*u.bitcrusherBaseVolume*Math.pow(1.5,u.bitcrusherQuantizationRange-1-l),b=2*u.bitcrusherBaseVolume*Math.pow(1.5,u.bitcrusherQuantizationRange-1-p);this.bitcrusherFoldLevel=g,this.bitcrusherFoldLevelScale=Math.pow(b/g,1/n)}let m=1;if(t.eqFilterType){const i=t.eqFilter;null==t.eqSubFilters[1]&&(t.eqSubFilters[1]=new fe);const s=t.eqSubFilters[1];let l,p=t.eqFilterSimpleCut,c=t.eqFilterSimplePeak,h=t.eqFilterSimpleCut,f=t.eqFilterSimplePeak,d=!1;if(e.isModActive(u.modulators.dictionary["eq filt cut"].index,a,r)&&(p=e.getModValue(u.modulators.dictionary["eq filt cut"].index,a,r,!1),h=e.getModValue(u.modulators.dictionary["eq filt cut"].index,a,r,!0),d=!0),e.isModActive(u.modulators.dictionary["eq filt peak"].index,a,r)&&(c=e.getModValue(u.modulators.dictionary["eq filt peak"].index,a,r,!1),f=e.getModValue(u.modulators.dictionary["eq filt peak"].index,a,r,!0),d=!0),d){i.convertLegacySettingsForSynth(p,c),s.convertLegacySettingsForSynth(h,f),l=i.controlPoints[0];let e=s.controlPoints[0];l.toCoefficients(qe.tempFilterStartCoefficients,o,1,1),e.toCoefficients(qe.tempFilterEndCoefficients,o,1,1),this.eqFilters.length<1&&(this.eqFilters[0]=new N),this.eqFilters[0].loadCoefficientsWithGradient(qe.tempFilterStartCoefficients,qe.tempFilterEndCoefficients,1/n,0==l.type)}else i.convertLegacySettingsForSynth(p,c,!0),l=i.controlPoints[0],l.toCoefficients(qe.tempFilterStartCoefficients,o,1,1),this.eqFilters.length<1&&(this.eqFilters[0]=new N),this.eqFilters[0].loadCoefficientsWithGradient(qe.tempFilterStartCoefficients,qe.tempFilterStartCoefficients,1/n,0==l.type);m*=l.getVolumeCompensationMult(),this.eqFilterCount=1,m=Math.min(3,m)}else{const e=null!=t.tmpEqFilterStart?t.tmpEqFilterStart:t.eqFilter;for(let i=0;i<e.controlPointCount;i++){let s=e.controlPoints[i],a=null!=t.tmpEqFilterEnd&&null!=t.tmpEqFilterEnd.controlPoints[i]?t.tmpEqFilterEnd.controlPoints[i]:e.controlPoints[i];s.type!=a.type&&(s=a),s.toCoefficients(qe.tempFilterStartCoefficients,o,1,1),a.toCoefficients(qe.tempFilterEndCoefficients,o,1,1),this.eqFilters.length<=i&&(this.eqFilters[i]=new N),this.eqFilters[i].loadCoefficientsWithGradient(qe.tempFilterStartCoefficients,qe.tempFilterEndCoefficients,1/n,0==s.type),m*=s.getVolumeCompensationMult()}this.eqFilterCount=e.controlPointCount,m=Math.min(3,m)}const y=qe.instrumentVolumeToVolumeMult(t.volume);this.mixVolume=y;let v=y;if(e.isModActive(u.modulators.dictionary["mix volume"].index,a,r)){const t=e.getModValue(u.modulators.dictionary["mix volume"].index,a,r,!1),i=e.getModValue(u.modulators.dictionary["mix volume"].index,a,r,!0);this.mixVolume*=t<=0?(t+u.volumeRange/2)/(u.volumeRange/2):qe.instrumentVolumeToVolumeMult(t),v*=i<=0?(i+u.volumeRange/2)/(u.volumeRange/2):qe.instrumentVolumeToVolumeMult(i)}e.isModActive(u.modulators.dictionary["song volume"].index)&&(this.mixVolume*=e.getModValue(u.modulators.dictionary["song volume"].index,void 0,void 0,!1)/100,v*=e.getModValue(u.modulators.dictionary["song volume"].index,void 0,void 0,!0)/100),this.mixVolumeDelta=(v-this.mixVolume)/n;let g=m,b=m,S=1,w=1;if(c){let i=t.pan,s=t.pan;e.isModActive(u.modulators.dictionary.pan.index,a,r)&&(i=e.getModValue(u.modulators.dictionary.pan.index,a,r,!1),s=e.getModValue(u.modulators.dictionary.pan.index,a,r,!0));let l=Math.max(-1,Math.min(1,(i-u.panCenter)/u.panCenter)),p=Math.max(-1,Math.min(1,(s-u.panCenter)/u.panCenter));const c=1.414*Math.cos((1+l)*Math.PI*.25),h=1.414*Math.cos((1-l)*Math.PI*.25),f=1.414*Math.cos((1+p)*Math.PI*.25),d=1.414*Math.cos((1-p)*Math.PI*.25),m=o*u.panDelaySecondsMax;let y=t.panDelay,v=t.panDelay;e.isModActive(u.modulators.dictionary["pan delay"].index,a,r)&&(y=e.getModValue(u.modulators.dictionary["pan delay"].index,a,r,!1),v=e.getModValue(u.modulators.dictionary["pan delay"].index,a,r,!0));const g=l*y*m/10,b=p*v*m/10,S=Math.max(0,g),w=Math.max(0,-g),k=Math.max(0,b),q=Math.max(0,-b);this.panningVolumeL=c,this.panningVolumeR=h,this.panningVolumeDeltaL=(f-c)/n,this.panningVolumeDeltaR=(d-h)/n,this.panningOffsetL=this.panningDelayPos-S+e.panningDelayBufferSize,this.panningOffsetR=this.panningDelayPos-w+e.panningDelayBufferSize,this.panningOffsetDeltaL=(k-S)/n,this.panningOffsetDeltaR=(q-w)/n}if(h){let i=t.chorus,s=t.chorus;e.isModActive(u.modulators.dictionary.chorus.index,a,r)&&(i=e.getModValue(u.modulators.dictionary.chorus.index,a,r,!1),s=e.getModValue(u.modulators.dictionary.chorus.index,a,r,!0));let o=Math.min(1,i/(u.chorusRange-1)),l=Math.min(1,s/(u.chorusRange-1));o=.6*o+.4*Math.pow(o,6),l=.6*l+.4*Math.pow(l,6);const p=1/Math.sqrt(3*o*o+1),c=1/Math.sqrt(3*l*l+1);this.chorusVoiceMult=o,this.chorusVoiceMultDelta=(l-o)/n,this.chorusCombinedMult=p,this.chorusCombinedMultDelta=(c-p)/n}let k=0,q=0;if(f){let s=t.echoSustain,l=t.echoSustain;e.isModActive(u.modulators.dictionary.echo.index,a,r)&&(s=Math.max(0,e.getModValue(u.modulators.dictionary.echo.index,a,r,!1)),l=Math.max(0,e.getModValue(u.modulators.dictionary.echo.index,a,r,!0)));const p=.9*Math.min(1,Math.pow(s/u.echoSustainRange,1.1)),c=.9*Math.min(1,Math.pow(l/u.echoSustainRange,1.1));this.echoMult=p,this.echoMultDelta=Math.max(0,(c-p)/n),k=Math.max(p,c);let h=t.echoDelay,f=t.echoDelay,d=!1;e.isModActive(u.modulators.dictionary["echo delay"].index,a,r)&&(h=e.getModValue(u.modulators.dictionary["echo delay"].index,a,r,!1),f=e.getModValue(u.modulators.dictionary["echo delay"].index,a,r,!0),d=!0);const m=Math.round((h+1)*u.echoDelayStepTicks*i),y=Math.round((f+1)*u.echoDelayStepTicks*i);null==this.echoDelayOffsetEnd||d?this.echoDelayOffsetStart=m:this.echoDelayOffsetStart=this.echoDelayOffsetEnd,this.echoDelayOffsetEnd=y,q=.5*(this.echoDelayOffsetStart+this.echoDelayOffsetEnd)/o,this.echoDelayOffsetRatio=0,this.echoDelayOffsetRatioDelta=1/n;const v=2*Math.PI*u.echoShelfHz/e.samplesPerSecond;qe.tempFilterStartCoefficients.highShelf1stOrder(v,u.echoShelfGain),this.echoShelfA1=qe.tempFilterStartCoefficients.a[1],this.echoShelfB0=qe.tempFilterStartCoefficients.b[0],this.echoShelfB1=qe.tempFilterStartCoefficients.b[1]}let F=0;if(d){let i=t.reverb,s=t.reverb;e.isModActive(u.modulators.dictionary.reverb.index,a,r)&&(i=e.getModValue(u.modulators.dictionary.reverb.index,a,r,!1),s=e.getModValue(u.modulators.dictionary.reverb.index,a,r,!0)),e.isModActive(u.modulators.dictionary["song reverb"].index,a,r)&&(i*=(e.getModValue(u.modulators.dictionary["song reverb"].index,void 0,void 0,!1)-u.modulators.dictionary["song reverb"].convertRealFactor)/u.reverbRange,s*=(e.getModValue(u.modulators.dictionary["song reverb"].index,void 0,void 0,!0)-u.modulators.dictionary["song reverb"].convertRealFactor)/u.reverbRange);const o=.425*Math.min(1,Math.pow(i/u.reverbRange,.667)),l=.425*Math.min(1,Math.pow(s/u.reverbRange,.667));this.reverbMult=o,this.reverbMultDelta=(l-o)/n,F=Math.max(o,l);const p=2*Math.PI*u.reverbShelfHz/e.samplesPerSecond;qe.tempFilterStartCoefficients.highShelf1stOrder(p,u.reverbShelfGain),this.reverbShelfA1=qe.tempFilterStartCoefficients.a[1],this.reverbShelfB0=qe.tempFilterStartCoefficients.b[0],this.reverbShelfB1=qe.tempFilterStartCoefficients.b[1]}if(this.tonesAddedInThisTick)this.attentuationProgress=0,this.flushedSamples=0,this.flushingDelayLines=!1;else if(this.flushingDelayLines){g=0,b=0,S=0,w=0;let t=0;h&&(t+=e.chorusDelayBufferSize),f&&(t+=this.echoDelayLineL.length),d&&(t+=u.reverbDelayBufferSize),this.flushedSamples+=n,this.flushedSamples>=t&&(this.deactivateAfterThisTick=!0)}else{0==this.attentuationProgress||(g=0),b=0;const e=1/256,t=-Math.log2(e);let n=0;if(h&&(n+=u.chorusMaxDelay),f){const e=Math.pow(k,1/q);n+=-1/Math.log2(e)*t}if(d){const e=2*F,i=u.reverbDelayBufferSize/4/o,s=Math.pow(e,1/i);n+=-1/Math.log2(s)*t}const s=i/o/n,a=this.attentuationProgress+s;a>=1&&(w=0),this.attentuationProgress=a,this.attentuationProgress>=1&&(this.flushingDelayLines=!0)}this.eqFilterVolume=g,this.eqFilterVolumeDelta=(b-g)/n,this.delayInputMult=S,this.delayInputMultDelta=(w-S)/n}updateWaves(e,t){if(this.volumeScale=1,0==e.type)this.wave=this.aliases?u.rawChipWaves[e.chipWave].samples:u.chipWaves[e.chipWave].samples,this.isUsingAdvancedLoopControls=e.isUsingAdvancedLoopControls,this.chipWaveLoopStart=e.chipWaveLoopStart,this.chipWaveLoopEnd=e.chipWaveLoopEnd,this.chipWaveLoopMode=e.chipWaveLoopMode,this.chipWavePlayBackwards=e.chipWavePlayBackwards,this.chipWaveStartOffset=e.chipWaveStartOffset,this.unisonVoices=e.unisonVoices,this.unisonSpread=e.unisonSpread,this.unisonOffset=e.unisonOffset,this.unisonExpression=e.unisonExpression,this.unisonSign=e.unisonSign;else if(6==e.type)this.unisonVoices=e.unisonVoices,this.unisonSpread=e.unisonSpread,this.unisonOffset=e.unisonOffset,this.unisonExpression=e.unisonExpression,this.unisonSign=e.unisonSign;else if(7==e.type)this.unisonVoices=e.unisonVoices,this.unisonSpread=e.unisonSpread,this.unisonOffset=e.unisonOffset,this.unisonExpression=e.unisonExpression,this.unisonSign=e.unisonSign;else if(10==e.type)this.wave=this.aliases?e.customChipWave:e.customChipWaveIntegral,this.volumeScale=.05,this.unisonVoices=e.unisonVoices,this.unisonSpread=e.unisonSpread,this.unisonOffset=e.unisonOffset,this.unisonExpression=e.unisonExpression,this.unisonSign=e.unisonSign;else if(2==e.type)this.wave=m(e.chipNoise,W,O),this.unisonVoices=e.unisonVoices,this.unisonSpread=e.unisonSpread,this.unisonOffset=e.unisonOffset,this.unisonExpression=e.unisonExpression,this.unisonSign=e.unisonSign;else if(5==e.type)this.wave=this.harmonicsWave.getCustomWave(e.harmonicsWave,e.type),this.unisonVoices=e.unisonVoices,this.unisonSpread=e.unisonSpread,this.unisonOffset=e.unisonOffset,this.unisonExpression=e.unisonExpression,this.unisonSign=e.unisonSign;else if(8==e.type)this.wave=this.harmonicsWave.getCustomWave(e.harmonicsWave,e.type),this.unisonVoices=e.unisonVoices,this.unisonSpread=e.unisonSpread,this.unisonOffset=e.unisonOffset,this.unisonExpression=e.unisonExpression,this.unisonSign=e.unisonSign;else if(3==e.type)this.wave=this.spectrumWave.getCustomWave(e.spectrumWave,8),this.unisonVoices=e.unisonVoices,this.unisonSpread=e.unisonSpread,this.unisonOffset=e.unisonOffset,this.unisonExpression=e.unisonExpression,this.unisonSign=e.unisonSign;else if(4==e.type){for(let t=0;t<u.drumCount;t++)this.drumsetSpectrumWaves[t].getCustomWave(e.drumsetSpectrumWaves[t],we.ee(t));this.wave=null}else this.wave=null}getDrumsetWave(e){if(4==this.type)return this.drumsetSpectrumWaves[e].wave;throw new Error("Unhandled instrument type in getDrumsetWave")}static drumsetIndexReferenceDelta(e){return me.frequencyFromPitch(u.spectrumBasePitch+6*e)/44100}static ee(e){return 15+Math.log2(we.drumsetIndexReferenceDelta(e))}}class ke{constructor(){this.instruments=[],this.muted=!1,this.singleSeamlessInstrument=null}}class qe{syncSongState(){const e=this.song.getChannelCount();for(let t=this.channels.length;t<e;t++)this.channels[t]=new ke;this.channels.length=e;for(let t=0;t<e;t++){const e=this.song.channels[t],i=this.channels[t];for(let t=i.instruments.length;t<e.instruments.length;t++)i.instruments[t]=new we;if(i.instruments.length=e.instruments.length,i.muted!=e.muted&&(i.muted=e.muted,i.muted))for(const e of i.instruments)e.resetAllEffects()}}initModFilters(e){if(null!=e)for(let t=0;t<e.getChannelCount();t++)for(let i=0;i<e.channels[t].instruments.length;i++){const n=e.channels[t].instruments[i];n.tmpEqFilterStart=n.eqFilter,n.tmpEqFilterEnd=null,n.tmpNoteFilterStart=n.noteFilter,n.tmpNoteFilterEnd=null}}warmUpSynthesizer(e){if(null!=e){this.syncSongState();const t=this.getSamplesPerTick();for(let i=0;i<e.getChannelCount();i++)for(let n=0;n<e.channels[i].instruments.length;n++){const s=e.channels[i].instruments[n],a=this.channels[i].instruments[n];qe.getInstrumentSynthFunction(s),a.vibratoTime=0,a.nextVibratoTime=0,a.envelopeTime=0,a.arpTime=0,a.updateWaves(s,this.samplesPerSecond),a.allocateNecessaryBuffers(this,s,t)}}var t=new Float32Array(1);this.isPlayingSong=!0,this.synthesize(t,t,1,!0),this.isPlayingSong=!1}computeLatestModValues(){if(null!=this.song&&this.song.modChannelCount>0){let e=[],t=[];this.modValues=[],this.nextModValues=[],this.modInsValues=[],this.nextModInsValues=[],this.heldMods=[];for(let e=0;e<this.song.pitchChannelCount+this.song.noiseChannelCount;e++){t[e]=[],this.modInsValues[e]=[],this.nextModInsValues[e]=[];for(let i=0;i<this.song.channels[e].instruments.length;i++)this.modInsValues[e][i]=[],this.nextModInsValues[e][i]=[],t[e][i]=[]}let i=this.beat*u.partsPerBeat+this.part;for(let n=this.song.pitchChannelCount+this.song.noiseChannelCount;n<this.song.getChannelCount();n++)if(!this.song.channels[n].muted){let s;for(let a=this.bar;a>=0;a--)if(s=this.song.getPattern(n,a),null!=s){let r=s.instruments[0],o=this.song.channels[n].instruments[r],l=[],p=[],c=a==this.bar?i:this.findPartsInBar(a);for(const e of s.notes)if(e.start<=c&&(null==l[u.modCount-1-e.pitches[0]]||e.end>l[u.modCount-1-e.pitches[0]]))if(e.start==c&&(l[u.modCount-1-e.pitches[0]]=e.start,p[u.modCount-1-e.pitches[0]]=e.pins[0].size),e.end<=c)l[u.modCount-1-e.pitches[0]]=e.end,p[u.modCount-1-e.pitches[0]]=e.pins[e.pins.length-1].size;else{l[u.modCount-1-e.pitches[0]]=c;for(let t=0;t<e.pins.length;t++)if(e.pins[t].time+e.start>c){const i=e.pins[t].time-e.pins[t-1].time,n=c-e.start-e.pins[t-1].time,s=e.pins[t].size-e.pins[t-1].size;p[u.modCount-1-e.pitches[0]]=Math.round(e.pins[t-1].size+s*n/i),t=e.pins.length}}for(let i=0;i<u.modCount;i++)if(null!=l[i])if(u.modulators[o.modulators[i]].forSong)(null==e[o.modulators[i]]||a*u.partsPerBeat*this.song.beatsPerBar+l[i]>e[o.modulators[i]])&&(this.setModValue(p[i],p[i],o.modChannels[i],o.modInstruments[i],o.modulators[i]),e[o.modulators[i]]=a*u.partsPerBeat*this.song.beatsPerBar+l[i]);else{let e=[];if(o.modInstruments[i]==this.song.channels[o.modChannels[i]].instruments.length)for(let t=0;t<this.song.channels[o.modChannels[i]].instruments.length;t++)e.push(t);else if(o.modInstruments[i]>this.song.channels[o.modChannels[i]].instruments.length){const t=this.song.getPattern(o.modChannels[i],a);null!=t&&(e=t.instruments)}else e.push(o.modInstruments[i]);for(let n=0;n<e.length;n++){const s=o.modulators[i]==u.modulators.dictionary["eq filter"].index,r=o.modulators[i]==u.modulators.dictionary["note filter"].index;let c=o.modulators[i];if(s?c=u.modulators.length+(0|o.modFilterTypes[i]):r&&(c=u.modulators.length+1+2*u.filterMaxPoints+(0|o.modFilterTypes[i])),null==t[o.modChannels[i]][e[n]][c]||a*u.partsPerBeat*this.song.beatsPerBar+l[i]>t[o.modChannels[i]][e[n]][c]){if(s){let t=this.song.channels[o.modChannels[i]].instruments[e[n]];if(0==o.modFilterTypes[i])t.tmpEqFilterStart=t.eqSubFilters[p[i]];else{for(let e=0;e<u.filterMorphCount;e++)null!=t.tmpEqFilterStart&&t.tmpEqFilterStart==t.eqSubFilters[e]&&(t.tmpEqFilterStart=new fe,t.tmpEqFilterStart.fromJsonObject(t.eqSubFilters[e].toJsonObject()),e=u.filterMorphCount);null!=t.tmpEqFilterStart&&Math.floor((o.modFilterTypes[i]-1)/2)<t.tmpEqFilterStart.controlPointCount&&(o.modFilterTypes[i]%2?t.tmpEqFilterStart.controlPoints[Math.floor((o.modFilterTypes[i]-1)/2)].freq=p[i]:t.tmpEqFilterStart.controlPoints[Math.floor((o.modFilterTypes[i]-1)/2)].gain=p[i])}t.tmpEqFilterEnd=t.tmpEqFilterStart}else if(r){let t=this.song.channels[o.modChannels[i]].instruments[e[n]];if(0==o.modFilterTypes[i])t.tmpNoteFilterStart=t.noteSubFilters[p[i]];else{for(let e=0;e<u.filterMorphCount;e++)null!=t.tmpNoteFilterStart&&t.tmpNoteFilterStart==t.noteSubFilters[e]&&(t.tmpNoteFilterStart=new fe,t.tmpNoteFilterStart.fromJsonObject(t.noteSubFilters[e].toJsonObject()),e=u.filterMorphCount);null!=t.tmpNoteFilterStart&&Math.floor((o.modFilterTypes[i]-1)/2)<t.tmpNoteFilterStart.controlPointCount&&(o.modFilterTypes[i]%2?t.tmpNoteFilterStart.controlPoints[Math.floor((o.modFilterTypes[i]-1)/2)].freq=p[i]:t.tmpNoteFilterStart.controlPoints[Math.floor((o.modFilterTypes[i]-1)/2)].gain=p[i])}t.tmpNoteFilterEnd=t.tmpNoteFilterStart}else this.setModValue(p[i],p[i],o.modChannels[i],e[n],c);t[o.modChannels[i]][e[n]][c]=a*u.partsPerBeat*this.song.beatsPerBar+l[i]}}}}}}}determineInvalidModulators(e){if(null!=this.song)for(let t=0;t<u.modCount;t++){if(e.invalidModulators[t]=!0,-1==e.modChannels[t]){0!=e.modulators[t]&&(e.invalidModulators[t]=!1);continue}const i=this.song.channels[e.modChannels[t]];if(null==i)continue;let n=[];n=e.modInstruments[t]>=i.instruments.length?i.instruments:[i.instruments[e.modInstruments[t]]];for(let i=0;i<n.length;i++){const s=n[i];if(null==s)continue;const a=u.modulators[e.modulators[t]].name;12!=u.modulators[e.modulators[t]].associatedEffect&&!(s.effects&1<<u.modulators[e.modulators[t]].associatedEffect)||1!=s.type&&12!=s.type&&("fm slider 1"==a||"fm slider 2"==a||"fm slider 3"==a||"fm slider 4"==a||"fm feedback"==a)||12!=s.type&&("fm slider 5"==a||"fm slider 6"==a)||6!=s.type&&7!=s.type&&9!=s.type&&("pulse width"==a||"decimal offset"==a)||9!=s.type&&("dynamism"==a||"spread"==a||"saw shape"==a)||!s.getChord().arpeggiates&&("arp speed"==a||"reset arp"==a)||s.eqFilterType&&"eq filter"==a||!s.eqFilterType&&("eq filt cut"==a||"eq filt peak"==a)||"eq filter"==a&&Math.floor((e.modFilterTypes[t]+1)/2)>s.getLargestControlPointCount(!1)||s.noteFilterType&&"note filter"==a||!s.noteFilterType&&("note filt cut"==a||"note filt peak"==a)||"note filter"==a&&Math.floor((e.modFilterTypes[t]+1)/2)>s.getLargestControlPointCount(!0)||(e.invalidModulators[t]=!1,i=n.length)}}}static operatorAmplitudeCurve(e){return(Math.pow(16,e/15)-1)/15}get playing(){return this.isPlayingSong}get recording(){return this.isRecording}get playhead(){return this.playheadInternal}set playhead(e){if(null!=this.song){this.playheadInternal=Math.max(0,Math.min(this.song.barCount,e));let t=this.playheadInternal;this.bar=Math.floor(t),t=this.song.beatsPerBar*(t-this.bar),this.beat=Math.floor(t),t=u.partsPerBeat*(t-this.beat),this.part=Math.floor(t),t=u.ticksPerPart*(t-this.part),this.tick=Math.floor(t),this.tickSampleCountdown=0,this.isAtStartOfTick=!0,this.prevBar=null}}getSamplesPerBar(){if(null==this.song)throw new Error;return this.getSamplesPerTick()*u.ticksPerPart*u.partsPerBeat*this.song.beatsPerBar}getTicksIntoBar(){return(this.beat*u.partsPerBeat+this.part)*u.ticksPerPart+this.tick}getCurrentPart(){return this.beat*u.partsPerBeat+this.part}findPartsInBar(e){if(null==this.song)return 0;let t=u.partsPerBeat*this.song.beatsPerBar;for(let i=this.song.pitchChannelCount+this.song.noiseChannelCount;i<this.song.getChannelCount();i++){let n=this.song.getPattern(i,e);if(null!=n){let e=this.song.channels[i].instruments[n.instruments[0]];for(let i=0;i<u.modCount;i++)if(e.modulators[i]==u.modulators.dictionary["next bar"].index)for(const e of n.notes)e.pitches[0]==u.modCount-1-i&&t>e.start&&(t=e.start)}}return t}getTotalSamples(e,t,i){if(null==this.song)return-1;let n=e?0:this.song.loopStart,s=t?this.song.barCount:this.song.loopStart+this.song.loopLength,a=!1,r=!1,o=this.song.tempo;for(let e=this.song.getChannelCount()-1;e>=this.song.pitchChannelCount+this.song.noiseChannelCount;e--)for(let t=n;t<s;t++){let i=this.song.getPattern(e,t);if(null!=i){let t=this.song.channels[e].instruments[i.instruments[0]];for(let e=0;e<u.modCount;e++)t.modulators[e]==u.modulators.dictionary.tempo.index&&(a=!0),t.modulators[e]==u.modulators.dictionary["next bar"].index&&(r=!0)}}if(n>0){let e=null,t=0;for(let i=n-1;i>=0;i--){for(let n=this.song.getChannelCount()-1;n>=this.song.pitchChannelCount+this.song.noiseChannelCount;n--){let s=this.song.getPattern(n,i);if(null!=s){let a=s.instruments[0],r=this.song.channels[n].instruments[a],o=this.findPartsInBar(i);for(const i of s.notes)if(r.modulators[u.modCount-1-i.pitches[0]]==u.modulators.dictionary.tempo.index&&i.start<o&&(null==e||i.end>e))if(i.end<=o)e=i.end,t=i.pins[i.pins.length-1].size;else{e=o;for(let e=0;e<i.pins.length;e++)if(i.pins[e].time+i.start>o){const n=i.pins[e].time-i.pins[e-1].time,s=o-i.start-i.pins[e-1].time,a=i.pins[e].size-i.pins[e-1].size;t=Math.round(i.pins[e-1].size+a*s/n),e=i.pins.length}}}}null!=e&&(o=t+u.modulators.dictionary.tempo.convertRealFactor,i=-1)}}if(a||r){let e=n,t=!1,l=0;for(;!t;){let n=u.partsPerBeat*this.song.beatsPerBar,p=0;if(r&&(n=this.findPartsInBar(e)),a){let t=!1;for(let i=this.song.getChannelCount()-1;i>=this.song.pitchChannelCount+this.song.noiseChannelCount;i--)if(0==t){let s=this.song.getPattern(i,e);if(null!=s){let e=this.song.channels[i].instruments[s.instruments[0]];for(let i=0;i<u.modCount;i++)if(0==t&&e.modulators[i]==u.modulators.dictionary.tempo.index&&s.notes.find((e=>e.pitches[0]==u.modCount-1-i))){t=!0,s.notes.sort((function(e,t){return e.start==t.start?e.pitches[0]-t.pitches[0]:e.start-t.start}));for(const e of s.notes)if(e.pitches[0]==u.modCount-1-i&&(l+=Math.min(n-p,e.start-p)*u.ticksPerPart*this.getSamplesPerTickSpecificBPM(o),e.start<n))for(let t=1;t<e.pins.length;t++){if(e.pins[t-1].time+e.start<=n){const i=u.ticksPerPart*Math.min(n-(e.start+e.pins[t-1].time),e.pins[t].time-e.pins[t-1].time),s=e.pins[t-1].size+u.modulators.dictionary.tempo.convertRealFactor;let a=e.pins[t].size+u.modulators.dictionary.tempo.convertRealFactor;e.pins[t].time+e.start>n&&(a=e.pins[t-1].size+(e.pins[t].size-e.pins[t-1].size)*(n-(e.start+e.pins[t-1].time))/(e.pins[t].time-e.pins[t-1].time)+u.modulators.dictionary.tempo.convertRealFactor);let r=u.partsPerBeat*u.ticksPerPart/60;l+=a!=s?-this.samplesPerSecond*i*(Math.log(r*a*i)-Math.log(r*s*i))/(r*(s-a)):i*this.getSamplesPerTickSpecificBPM(a),o=a}p=Math.min(e.start+e.pins[t].time,n)}}}}}l+=(n-p)*u.ticksPerPart*this.getSamplesPerTickSpecificBPM(o),e++,0!=i&&e==this.song.loopStart+this.song.loopLength&&(e=this.song.loopStart,i>0&&i--),e>=s&&(t=!0)}return Math.ceil(l)}return this.getSamplesPerBar()*this.getTotalBars(e,t,i)}getTotalBars(e,t,i=this.loopRepeatCount){if(null==this.song)throw new Error;let n=this.song.loopLength*(i+1);return e&&(n+=this.song.loopStart),t&&(n+=this.song.barCount-(this.song.loopStart+this.song.loopLength)),n}constructor(e=null){this.samplesPerSecond=44100,this.song=null,this.preferLowerLatency=!1,this.anticipatePoorPerformance=!1,this.liveInputDuration=0,this.liveBassInputDuration=0,this.liveInputStarted=!1,this.liveBassInputStarted=!1,this.liveInputPitches=[],this.liveBassInputPitches=[],this.liveInputChannel=0,this.liveBassInputChannel=0,this.liveInputInstruments=[],this.liveBassInputInstruments=[],this.loopRepeatCount=-1,this.volume=1,this.oscRefreshEventTimer=0,this.oscEnabled=!0,this.enableMetronome=!1,this.countInMetronome=!1,this.renderingSong=!1,this.heldMods=[],this.wantToSkip=!1,this.playheadInternal=0,this.bar=0,this.prevBar=null,this.nextBar=null,this.beat=0,this.part=0,this.tick=0,this.isAtStartOfTick=!0,this.isAtEndOfTick=!0,this.tickSampleCountdown=0,this.modValues=[],this.modInsValues=[],this.nextModValues=[],this.nextModInsValues=[],this.isPlayingSong=!1,this.isRecording=!1,this.liveInputEndTime=0,this.browserAutomaticallyClearsAudioBuffer=!0,this.tempDrumSetControlPoint=new he,this.tempFrequencyResponse=new R,this.loopBarStart=-1,this.loopBarEnd=-1,this.channels=[],this.tonePool=new A,this.tempMatchedPitchTones=Array(u.maxChordSize).fill(null),this.startedMetronome=!1,this.metronomeSamplesRemaining=-1,this.metronomeAmplitude=0,this.metronomePrevAmplitude=0,this.metronomeFilter=0,this.limit=0,this.tempMonoInstrumentSampleBuffer=null,this.audioCtx=null,this.scriptNode=null,this.audioProcessCallback=e=>{const t=e.outputBuffer,i=t.getChannelData(0),n=t.getChannelData(1);if(!this.browserAutomaticallyClearsAudioBuffer||0==i[0]&&0==n[0]&&0==i[t.length-1]&&0==n[t.length-1]||(this.browserAutomaticallyClearsAudioBuffer=!1),!this.browserAutomaticallyClearsAudioBuffer){const e=t.length;for(let t=0;t<e;t++)i[t]=0,n[t]=0}!this.isPlayingSong&&performance.now()>=this.liveInputEndTime?this.deactivateAudio():(this.synthesize(i,n,t.length,this.isPlayingSong),this.oscEnabled&&(this.oscRefreshEventTimer<=0?(E.raise("oscilloscopeUpdate",i,n),this.oscRefreshEventTimer=2):this.oscRefreshEventTimer--))},this.computeDelayBufferSizes(),null!=e&&this.setSong(e)}setSong(e){"string"==typeof e?this.song=new ve(e):e instanceof ve&&(this.song=e),this.prevBar=null}computeDelayBufferSizes(){this.panningDelayBufferSize=qe.fittingPowerOfTwo(this.samplesPerSecond*u.panDelaySecondsMax),this.panningDelayBufferMask=this.panningDelayBufferSize-1,this.chorusDelayBufferSize=qe.fittingPowerOfTwo(this.samplesPerSecond*u.chorusMaxDelay),this.chorusDelayBufferMask=this.chorusDelayBufferSize-1}activateAudio(){const e=this.anticipatePoorPerformance?this.preferLowerLatency?2048:4096:this.preferLowerLatency?512:2048;if(null==this.audioCtx||null==this.scriptNode||this.scriptNode.bufferSize!=e){null!=this.scriptNode&&this.deactivateAudio();const t=this.anticipatePoorPerformance?this.preferLowerLatency?"balanced":"playback":this.preferLowerLatency?"interactive":"balanced";this.audioCtx=this.audioCtx||new(window.AudioContext||window.webkitAudioContext)({latencyHint:t}),this.samplesPerSecond=this.audioCtx.sampleRate,this.scriptNode=this.audioCtx.createScriptProcessor?this.audioCtx.createScriptProcessor(e,0,2):this.audioCtx.createJavaScriptNode(e,0,2),this.scriptNode.onaudioprocess=this.audioProcessCallback,this.scriptNode.channelCountMode="explicit",this.scriptNode.channelInterpretation="speakers",this.scriptNode.connect(this.audioCtx.destination),this.computeDelayBufferSizes()}this.audioCtx.resume()}deactivateAudio(){null!=this.audioCtx&&null!=this.scriptNode&&(this.scriptNode.disconnect(this.audioCtx.destination),this.scriptNode=null,this.audioCtx.close&&this.audioCtx.close(),this.audioCtx=null)}maintainLiveInput(){this.activateAudio(),this.liveInputEndTime=performance.now()+1e4}play(){this.isPlayingSong||(this.initModFilters(this.song),this.computeLatestModValues(),this.activateAudio(),this.warmUpSynthesizer(this.song),this.isPlayingSong=!0)}pause(){if(this.isPlayingSong&&(this.isPlayingSong=!1,this.isRecording=!1,this.modValues=[],this.nextModValues=[],this.heldMods=[],null!=this.song)){this.song.inVolumeCap=0,this.song.outVolumeCap=0;for(let e=0;e<this.song.pitchChannelCount+this.song.noiseChannelCount;e++)this.modInsValues[e]=[],this.nextModInsValues[e]=[]}}startRecording(){this.preferLowerLatency=!0,this.isRecording=!0,this.play()}resetEffects(){if(this.limit=0,this.freeAllTones(),null!=this.song)for(const e of this.channels)for(const t of e.instruments)t.resetAllEffects()}setModValue(e,t,i,n,s){let a=e+u.modulators[s].convertRealFactor,r=t+u.modulators[s].convertRealFactor;return u.modulators[s].forSong?null!=this.modValues[s]&&this.modValues[s]==a&&this.nextModValues[s]==r||(this.modValues[s]=a,this.nextModValues[s]=r):null!=this.modInsValues[i][n][s]&&this.modInsValues[i][n][s]==a&&this.nextModInsValues[i][n][s]==r||(this.modInsValues[i][n][s]=a,this.nextModInsValues[i][n][s]=r),a}getModValue(e,t,i,n){if(u.modulators[e].forSong){if(null!=this.modValues[e]&&null!=this.nextModValues[e])return n?this.nextModValues[e]:this.modValues[e]}else if(null!=t&&null!=i&&null!=this.modInsValues[t][i][e]&&null!=this.nextModInsValues[t][i][e])return n?this.nextModInsValues[t][i][e]:this.modInsValues[t][i][e];return-1}isAnyModActive(e,t){for(let i=0;i<u.modulators.length;i++)if(null!=this.modValues&&null!=this.modValues[i]||null!=this.modInsValues&&null!=this.modInsValues[e]&&null!=this.modInsValues[e][t]&&null!=this.modInsValues[e][t][i])return!0;return!1}unsetMod(e,t,i){if(this.isModActive(e)||null!=t&&null!=i&&this.isModActive(e,t,i)){this.modValues[e]=null,this.nextModValues[e]=null;for(let n=0;n<this.heldMods.length;n++)null!=t&&null!=i?this.heldMods[n].channelIndex==t&&this.heldMods[n].instrumentIndex==i&&this.heldMods[n].setting==e&&this.heldMods.splice(n,1):this.heldMods[n].setting==e&&this.heldMods.splice(n,1);null!=t&&null!=i&&(this.modInsValues[t][i][e]=null,this.nextModInsValues[t][i][e]=null)}}isFilterModActive(e,t,i){const n=this.song.channels[t].instruments[i];if(e){if(n.noteFilterType)return!1;if(null!=n.tmpNoteFilterEnd)return!0}else{if(n.eqFilterType)return!1;if(null!=n.tmpEqFilterEnd)return!0}return!1}isModActive(e,t,i){return u.modulators[e].forSong?null!=this.modValues&&null!=this.modValues[e]:null!=t&&null!=i&&null!=this.modInsValues&&null!=this.modInsValues[t]&&null!=this.modInsValues[t][i]&&null!=this.modInsValues[t][i][e]}forceHoldMods(e,t,i,n){let s=!1;for(let a=0;a<this.heldMods.length;a++)this.heldMods[a].channelIndex==t&&this.heldMods[a].instrumentIndex==i&&this.heldMods[a].setting==n&&(this.heldMods[a].volume=e,this.heldMods[a].holdFor=24,s=!0);s||this.heldMods.push({volume:e,channelIndex:t,instrumentIndex:i,setting:n,holdFor:24})}snapToStart(){this.bar=0,this.resetEffects(),this.snapToBar()}goToBar(e){this.bar=e,this.resetEffects(),this.playheadInternal=this.bar}snapToBar(){this.playheadInternal=this.bar,this.beat=0,this.part=0,this.tick=0,this.tickSampleCountdown=0}jumpIntoLoop(){if(this.song&&(this.bar<this.song.loopStart||this.bar>=this.song.loopStart+this.song.loopLength)){const e=this.bar;this.bar=this.song.loopStart,this.playheadInternal+=this.bar-e,this.playing&&this.computeLatestModValues()}}goToNextBar(){if(!this.song)return;this.prevBar=this.bar;const e=this.bar;this.bar++,this.bar>=this.song.barCount&&(this.bar=0),this.playheadInternal+=this.bar-e,this.playing&&this.computeLatestModValues()}goToPrevBar(){if(!this.song)return;this.prevBar=null;const e=this.bar;this.bar--,(this.bar<0||this.bar>=this.song.barCount)&&(this.bar=this.song.barCount-1),this.playheadInternal+=this.bar-e,this.playing&&this.computeLatestModValues()}getNextBar(){let e=this.bar+1;return this.isRecording?e>=this.song.barCount&&(e=this.song.barCount-1):this.bar!=this.loopBarEnd||this.renderingSong?0!=this.loopRepeatCount&&e==Math.max(this.loopBarEnd+1,this.song.loopStart+this.song.loopLength)&&(e=this.song.loopStart):e=this.loopBarStart,e}skipBar(){if(!this.song)return;const e=this.getSamplesPerTick();this.prevBar=this.bar,this.loopBarEnd!=this.bar?this.bar++:this.bar=this.loopBarStart,this.beat=0,this.part=0,this.tick=0,this.tickSampleCountdown=e,this.isAtStartOfTick=!0,0!=this.loopRepeatCount&&this.bar==Math.max(this.song.loopStart+this.song.loopLength,this.loopBarEnd)&&(this.bar=this.song.loopStart,-1!=this.loopBarStart&&(this.bar=this.loopBarStart),this.loopRepeatCount>0&&this.loopRepeatCount--)}synthesize(e,t,i,n=!0){if(null==this.song){for(let n=0;n<i;n++)e[n]=0,t[n]=0;return void this.deactivateAudio()}const s=this.song;this.song.inVolumeCap=0,this.song.outVolumeCap=0;let a=this.getSamplesPerTick(),r=!1;(this.tickSampleCountdown<=0||this.tickSampleCountdown>a)&&(this.tickSampleCountdown=a,this.isAtStartOfTick=!0),n&&(this.beat>=s.beatsPerBar&&(this.beat=0,this.part=0,this.tick=0,this.tickSampleCountdown=a,this.isAtStartOfTick=!0,this.prevBar=this.bar,this.bar=this.getNextBar(),this.bar<=this.prevBar&&this.loopRepeatCount>0&&this.loopRepeatCount--),this.bar>=s.barCount&&(this.bar=0,-1!=this.loopRepeatCount&&(r=!0,this.pause()))),this.syncSongState(),(null==this.tempMonoInstrumentSampleBuffer||this.tempMonoInstrumentSampleBuffer.length<i)&&(this.tempMonoInstrumentSampleBuffer=new Float32Array(i));const o=+this.volume,l=1-Math.pow(.5,this.song.limitDecay/this.samplesPerSecond),p=1-Math.pow(.5,this.song.limitRise/this.samplesPerSecond);let c=+this.limit,h=[],f=-1,d=0;for(;d<i&&!r;){this.nextBar=this.getNextBar(),this.nextBar>=s.barCount&&(this.nextBar=null);const m=i-d,y=Math.ceil(this.tickSampleCountdown),v=Math.min(y,m),g=d+v;if(this.isPlayingSong||this.renderingSong){for(let e=s.pitchChannelCount+s.noiseChannelCount;e<s.getChannelCount();e++){const t=s.channels[e],i=this.channels[e];this.determineCurrentActiveTones(s,e,a,n);for(let n=0;n<t.instruments.length;n++){const t=i.instruments[n];for(let i=0;i<t.activeModTones.count();i++){const n=t.activeModTones.get(i),r=s.channels[e].instruments[n.instrumentIndex];let o=u.modCount-1-n.pitches[0];(r.modulators[o]==u.modulators.dictionary["note filter"].index||r.modulators[o]==u.modulators.dictionary["eq filter"].index)&&null!=r.modFilterTypes[o]&&r.modFilterTypes[o]>0||this.playModTone(s,e,a,d,v,n,!1,!1)}}}for(let e=s.pitchChannelCount+s.noiseChannelCount;e<s.getChannelCount();e++){const t=s.channels[e],i=this.channels[e];for(let n=0;n<t.instruments.length;n++){const t=i.instruments[n];for(let i=0;i<t.activeModTones.count();i++){const n=t.activeModTones.get(i),r=s.channels[e].instruments[n.instrumentIndex];let o=u.modCount-1-n.pitches[0];(r.modulators[o]==u.modulators.dictionary["note filter"].index||r.modulators[o]==u.modulators.dictionary["eq filter"].index)&&null!=r.modFilterTypes[o]&&r.modFilterTypes[o]>0&&this.playModTone(s,e,a,d,v,n,!1,!1)}}}}if(this.wantToSkip){let e=h.includes(this.bar);if(e&&d==f)return void this.pause();-1==f&&(f=d),e||h.push(this.bar),this.wantToSkip=!1,this.skipBar()}else{for(let i=0;i<s.pitchChannelCount+s.noiseChannelCount;i++){const r=s.channels[i],o=this.channels[i];this.isAtStartOfTick&&(this.determineCurrentActiveTones(s,i,a,n&&!this.countInMetronome),this.determineLiveInputTones(s,i,a));for(let n=0;n<r.instruments.length;n++){const l=r.instruments[n],p=o.instruments[n];if(this.isAtStartOfTick){let e=p.activeTones.count()+p.liveInputTones.count();for(let t=0;t<p.releasedTones.count();t++){const n=p.releasedTones.get(t);if(n.ticksSinceReleased>=Math.abs(l.getFadeOutTicks())){this.freeReleasedTone(p,t),t--;continue}const r=e>=u.maximumTonesPerChannel;this.computeTone(s,i,a,n,!0,r),e++}p.awake&&(p.computed||p.compute(this,l,a,Math.ceil(a),null,i,n),p.computed=!1)}for(let e=0;e<p.activeTones.count();e++){const t=p.activeTones.get(e);this.playTone(i,d,v,t)}for(let e=0;e<p.liveInputTones.count();e++){const t=p.liveInputTones.get(e);this.playTone(i,d,v,t)}for(let e=0;e<p.releasedTones.count();e++){const t=p.releasedTones.get(e);this.playTone(i,d,v,t)}p.awake&&qe.effectsSynth(this,e,t,d,v,p);const c=this.tickSampleCountdown,h=1-c/a,f=1-(c-v)/a,m=(this.beat*u.partsPerBeat+this.part)*u.ticksPerPart+this.tick,y=m/u.ticksPerPart,g=(m+1)/u.ticksPerPart,b=y+(g-y)*h,S=y+(g-y)*f;let w=l.vibratoSpeed;p.vibratoTime=p.nextVibratoTime,this.isModActive(u.modulators.dictionary["vibrato speed"].index,i,n)&&(w=this.getModValue(u.modulators.dictionary["vibrato speed"].index,i,n)),0==w?(p.vibratoTime=0,p.nextVibratoTime=0):p.nextVibratoTime+=.1*w*(S-b)}}if(this.enableMetronome||this.countInMetronome)if(0==this.part){if(!this.startedMetronome){const e=s.beatsPerBar>4&&s.beatsPerBar%2==0&&this.beat==s.beatsPerBar/2,t=0==this.beat?8:e?6:4,i=0==this.beat?1600:e?1200:800,n=0==this.beat?.06:e?.05:.04,a=this.samplesPerSecond/i,r=2*Math.PI/a;this.metronomeSamplesRemaining=Math.floor(a*t),this.metronomeFilter=2*Math.cos(r),this.metronomeAmplitude=n*Math.sin(r),this.metronomePrevAmplitude=0,this.startedMetronome=!0}if(this.metronomeSamplesRemaining>0){const i=Math.min(g,d+this.metronomeSamplesRemaining);this.metronomeSamplesRemaining-=i-d;for(let n=d;n<i;n++){e[n]+=this.metronomeAmplitude,t[n]+=this.metronomeAmplitude;const i=this.metronomeFilter*this.metronomeAmplitude-this.metronomePrevAmplitude;this.metronomePrevAmplitude=this.metronomeAmplitude,this.metronomeAmplitude=i}}}else this.startedMetronome=!1;for(let i=d;i<g;i++){const n=e[i]*s.masterGain*s.masterGain,a=t[i]*s.masterGain*s.masterGain,r=n<0?-n:n,u=a<0?-a:a,h=r>u?r:u;this.song.inVolumeCap=this.song.inVolumeCap>h?this.song.inVolumeCap:h;const f=+(h>s.compressionThreshold)+ +(h>s.limitThreshold),d=+(0==f)*((.8*(h+1-s.compressionThreshold)+.25)*s.compressionRatio+1.05*(1-s.compressionRatio))+1.05*+(1==f)+ +(2==f)*(1.05*((h+1-s.limitThreshold)*s.limitRatio+(1-s.limitThreshold)));c+=(d-c)*(c<d?p:l);const m=o/(c>=1?1.05*c:.8*c+.25);e[i]=n*m,t[i]=a*m,this.song.outVolumeCap=this.song.outVolumeCap>h*m?this.song.outVolumeCap:h*m}if(d+=v,this.isAtStartOfTick=!1,this.tickSampleCountdown-=v,this.tickSampleCountdown<=0){this.isAtStartOfTick=!0;for(const e of this.channels)for(const t of e.instruments){for(let e=0;e<t.releasedTones.count();e++){const i=t.releasedTones.get(e);i.isOnLastTick?(this.freeReleasedTone(t,e),e--):i.ticksSinceReleased++}t.deactivateAfterThisTick&&t.deactivate(),t.tonesAddedInThisTick=!1}for(let e=0;e<this.song.pitchChannelCount+this.song.noiseChannelCount;e++)for(let t=0;t<this.song.channels[e].instruments.length;t++){let i=this.song.channels[e].instruments[t],n=this.channels[e].instruments[t];if(7==i.type){const e=i.dutyCycleSequence.length;let t=u.dutyCycleSpeedScale[i.dutyCycleSpeed];t<=0||e<=0||(n.dutyCycleTime=(n.dutyCycleTime+t*(1/(u.ticksPerPart*u.partsPerBeat)))%e)}let s=i.arpeggioSpeed;this.isModActive(u.modulators.dictionary["arp speed"].index,e,t)?(s=Math.max(0,Math.min(u.arpSpeedScale.length-1,this.getModValue(u.modulators.dictionary["arp speed"].index,e,t,!1))),Number.isInteger(s)?n.arpTime+=u.arpSpeedScale[s]:n.arpTime+=(1-s%1)*u.arpSpeedScale[Math.floor(s)]+s%1*u.arpSpeedScale[Math.ceil(s)]):n.arpTime+=u.arpSpeedScale[s];let a=i.envelopeSpeed;this.isModActive(u.modulators.dictionary["envelope speed"].index,e,t)?(a=Math.max(0,Math.min(u.arpSpeedScale.length-1,this.getModValue(u.modulators.dictionary["envelope speed"].index,e,t,!1))),Number.isInteger(a)?n.envelopeTime+=u.arpSpeedScale[a]:n.envelopeTime+=(1-a%1)*u.arpSpeedScale[Math.floor(a)]+a%1*u.arpSpeedScale[Math.ceil(a)]):n.envelopeTime+=u.arpSpeedScale[a]}for(let e=0;e<this.song.pitchChannelCount+this.song.noiseChannelCount;e++)for(let t=0;t<this.song.channels[e].instruments.length;t++){let i=this.song.channels[e].instruments[t];null!=i.tmpEqFilterEnd?i.tmpEqFilterStart=i.tmpEqFilterEnd:i.tmpEqFilterStart=i.eqFilter,null!=i.tmpNoteFilterEnd?i.tmpNoteFilterStart=i.tmpNoteFilterEnd:i.tmpNoteFilterStart=i.noteFilter}if(this.tick++,this.tickSampleCountdown+=a,this.tick==u.ticksPerPart){this.tick=0,this.part++,this.liveInputDuration--,this.liveBassInputDuration--;for(let e=0;e<this.heldMods.length;e++)this.heldMods[e].holdFor--,this.heldMods[e].holdFor<=0&&this.heldMods.splice(e,1);this.part==u.partsPerBeat&&(this.part=0,n&&(this.beat++,this.beat==s.beatsPerBar&&(this.beat=0,this.countInMetronome?this.countInMetronome=!1:(this.prevBar=this.bar,this.bar=this.getNextBar(),this.bar<=this.prevBar&&this.loopRepeatCount>0&&this.loopRepeatCount--,this.bar>=s.barCount&&(this.bar=0,-1!=this.loopRepeatCount&&(r=!0,this.resetEffects(),this.pause()))))))}}for(let e=0;e<u.modulators.length;e++)null!=this.nextModValues&&null!=this.nextModValues[e]&&(this.modValues[e]=this.nextModValues[e]);this.isModActive(u.modulators.dictionary.tempo.index)&&(a=this.getSamplesPerTick(),this.tickSampleCountdown=Math.min(this.tickSampleCountdown,a));for(let e=0;e<this.song.pitchChannelCount+this.song.noiseChannelCount;e++)for(let t=0;t<this.channels[e].instruments.length;t++){const i=this.channels[e].instruments[t],n=this.song.channels[e].instruments[t];i.nextVibratoTime=i.nextVibratoTime%(u.vibratoTypes[n.vibratoType].period/(u.ticksPerPart*a/this.samplesPerSecond)),i.arpTime=i.arpTime%(2520*u.ticksPerArpeggio),i.envelopeTime=i.envelopeTime%(u.partsPerBeat*u.ticksPerPart*this.song.beatsPerBar)}for(let e=0;e<u.modulators.length;e++)for(let t=0;t<this.song.pitchChannelCount+this.song.noiseChannelCount;t++)for(let i=0;i<this.song.getMaxInstrumentsPerChannel();i++)null!=this.nextModInsValues&&null!=this.nextModInsValues[t]&&null!=this.nextModInsValues[t][i]&&null!=this.nextModInsValues[t][i][e]&&(this.modInsValues[t][i][e]=this.nextModInsValues[t][i][e])}}(!Number.isFinite(c)||Math.abs(c)<V)&&(c=0),this.limit=c,n&&!this.countInMetronome&&(this.playheadInternal=(((this.tick+1-this.tickSampleCountdown/a)/2+this.part)/u.partsPerBeat+this.beat)/s.beatsPerBar+this.bar)}freeTone(e){this.tonePool.pushBack(e)}newTone(){if(this.tonePool.count()>0){const e=this.tonePool.popBack();return e.freshlyAllocated=!0,e}return new Se}releaseTone(e,t){e.releasedTones.pushFront(t),t.atNoteStart=!1,t.passedEndOfNote=!0}freeReleasedTone(e,t){this.freeTone(e.releasedTones.get(t)),e.releasedTones.remove(t)}freeAllTones(){for(const e of this.channels)for(const t of e.instruments){for(;t.activeTones.count()>0;)this.freeTone(t.activeTones.popBack());for(;t.activeModTones.count()>0;)this.freeTone(t.activeModTones.popBack());for(;t.releasedTones.count()>0;)this.freeTone(t.releasedTones.popBack());for(;t.liveInputTones.count()>0;)this.freeTone(t.liveInputTones.popBack())}}determineLiveInputTones(e,t,i){const n=e.channels[t],s=this.channels[t],a=this.liveInputPitches,r=this.liveBassInputPitches;for(let o=0;o<n.instruments.length;o++){const l=s.instruments[o],p=l.liveInputTones;let u=0;if(this.liveInputDuration>0&&t==this.liveInputChannel&&a.length>0&&-1!=this.liveInputInstruments.indexOf(o)){const s=n.instruments[o];if(s.getChord().singleTone){let n;p.count()<=u?(n=this.newTone(),p.pushBack(n)):!s.getTransition().isSeamless&&this.liveInputStarted?(this.releaseTone(l,p.get(u)),n=this.newTone(),p.set(u,n)):n=p.get(u),u++;for(let e=0;e<a.length;e++)n.pitches[e]=a[e];n.pitchCount=a.length,n.chordSize=1,n.instrumentIndex=o,n.note=n.prevNote=n.nextNote=null,n.atNoteStart=this.liveInputStarted,n.forceContinueAtStart=!1,n.forceContinueAtEnd=!1,this.computeTone(e,t,i,n,!1,!1)}else{this.moveTonesIntoOrderedTempMatchedList(p,a);for(let n=0;n<a.length;n++){let s;null!=this.tempMatchedPitchTones[u]?(s=this.tempMatchedPitchTones[u],this.tempMatchedPitchTones[u]=null,1==s.pitchCount&&s.pitches[0]==a[n]||(this.releaseTone(l,s),s=this.newTone()),p.pushBack(s)):(s=this.newTone(),p.pushBack(s)),u++,s.pitches[0]=a[n],s.pitchCount=1,s.chordSize=a.length,s.instrumentIndex=o,s.note=s.prevNote=s.nextNote=null,s.atNoteStart=this.liveInputStarted,s.forceContinueAtStart=!1,s.forceContinueAtEnd=!1,this.computeTone(e,t,i,s,!1,!1)}}}if(this.liveBassInputDuration>0&&t==this.liveBassInputChannel&&r.length>0&&-1!=this.liveBassInputInstruments.indexOf(o)){const s=n.instruments[o];if(s.getChord().singleTone){let n;p.count()<=u?(n=this.newTone(),p.pushBack(n)):!s.getTransition().isSeamless&&this.liveInputStarted?(this.releaseTone(l,p.get(u)),n=this.newTone(),p.set(u,n)):n=p.get(u),u++;for(let e=0;e<r.length;e++)n.pitches[e]=r[e];n.pitchCount=r.length,n.chordSize=1,n.instrumentIndex=o,n.note=n.prevNote=n.nextNote=null,n.atNoteStart=this.liveBassInputStarted,n.forceContinueAtStart=!1,n.forceContinueAtEnd=!1,this.computeTone(e,t,i,n,!1,!1)}else{this.moveTonesIntoOrderedTempMatchedList(p,r);for(let n=0;n<r.length;n++){let s;null!=this.tempMatchedPitchTones[u]?(s=this.tempMatchedPitchTones[u],this.tempMatchedPitchTones[u]=null,1==s.pitchCount&&s.pitches[0]==r[n]||(this.releaseTone(l,s),s=this.newTone()),p.pushBack(s)):(s=this.newTone(),p.pushBack(s)),u++,s.pitches[0]=r[n],s.pitchCount=1,s.chordSize=r.length,s.instrumentIndex=o,s.note=s.prevNote=s.nextNote=null,s.atNoteStart=this.liveBassInputStarted,s.forceContinueAtStart=!1,s.forceContinueAtEnd=!1,this.computeTone(e,t,i,s,!1,!1)}}}for(;p.count()>u;)this.releaseTone(l,p.popBack());this.clearTempMatchedPitchTones(u,l)}this.liveInputStarted=!1,this.liveBassInputStarted=!1}adjacentPatternHasCompatibleInstrumentTransition(e,t,i,n,s,a,r,o,l,p){if(e.patternInstruments&&-1==n.instruments.indexOf(s)){if(i.instruments.length>1||n.instruments.length>1)return null;const e=t.instruments[n.instruments[0]];if(p)return e.getChord();const s=e.getTransition();return a.includeAdjacentPatterns&&s.includeAdjacentPatterns&&s.slides==a.slides?e.getChord():null}return p||a.includeAdjacentPatterns?r:null}static adjacentNotesHaveMatchingPitches(e,t){if(e.pitches.length!=t.pitches.length)return!1;const i=e.pins[e.pins.length-1].interval;for(const n of e.pitches)if(-1==t.pitches.indexOf(n+i))return!1;return!0}moveTonesIntoOrderedTempMatchedList(e,t){for(let i=0;i<e.count();i++){const n=e.get(i),s=n.pitches[0]+n.lastInterval;for(let a=0;a<t.length;a++)if(t[a]==s){this.tempMatchedPitchTones[a]=n,e.remove(i),i--;break}}for(;e.count()>0;){const t=e.popFront();for(let e=0;e<this.tempMatchedPitchTones.length;e++)if(null==this.tempMatchedPitchTones[e]){this.tempMatchedPitchTones[e]=t;break}}}determineCurrentActiveTones(e,t,i,n){const s=e.channels[t],a=this.channels[t],r=e.getPattern(t,this.bar),o=this.getCurrentPart(),l=this.tick+u.ticksPerPart*o;if(n&&e.getChannelIsMod(t)){let i=[],n=[],p=[],c=u.modCount;for(;c--;)i.push(null),n.push(null),p.push(null);if(null!=r&&!s.muted)for(let e=0;e<r.notes.length;e++)r.notes[e].end<=o?(null==n[r.notes[e].pitches[0]]||r.notes[e].end>n[r.notes[e].pitches[0]].start)&&(n[r.notes[e].pitches[0]]=r.notes[e]):r.notes[e].start<=o&&r.notes[e].end>o?i[r.notes[e].pitches[0]]=r.notes[e]:r.notes[e].start>o&&(null==p[r.notes[e].pitches[0]]||r.notes[e].start<p[r.notes[e].pitches[0]].start)&&(p[r.notes[e].pitches[0]]=r.notes[e]);let h=0;const f=e.patternInstruments&&null!=r?r.instruments[0]:0,d=a.instruments[f],m=d.activeModTones;for(let e=0;e<u.modCount;e++){if(null!=i[e]&&(null!=n[e]&&n[e].end!=i[e].start&&(n[e]=null),null!=p[e]&&p[e].start!=i[e].end&&(p[e]=null)),null!=a.singleSeamlessInstrument&&a.singleSeamlessInstrument!=f&&a.singleSeamlessInstrument<a.instruments.length){const e=a.instruments[a.singleSeamlessInstrument],t=a.instruments[f];for(;e.activeModTones.count()>0;)t.activeModTones.pushFront(e.activeModTones.popBack())}if(a.singleSeamlessInstrument=f,null!=i[e]){let t=n[e],s=p[e],a=!1,r=!1;const o=u.ticksPerPart*i[e].start==l&&this.isAtStartOfTick;let c;if(m.count()<=h)c=this.newTone(),m.pushBack(c);else if(o&&null==t){const e=m.get(h);e.isOnLastTick?this.freeTone(e):this.releaseTone(d,e),c=this.newTone(),m.set(h,c)}else c=m.get(h);h++;for(let t=0;t<i[e].pitches.length;t++)c.pitches[t]=i[e].pitches[t];c.pitchCount=i[e].pitches.length,c.chordSize=1,c.instrumentIndex=f,c.note=i[e],c.noteStartPart=i[e].start,c.noteEndPart=i[e].end,c.prevNote=t,c.nextNote=s,c.prevNotePitchIndex=0,c.nextNotePitchIndex=0,c.atNoteStart=o,c.passedEndOfNote=!1,c.forceContinueAtStart=a,c.forceContinueAtEnd=r}}for(;m.count()>h;){const i=m.popBack(),n=e.channels[t];if(i.instrumentIndex<n.instruments.length&&!i.isOnLastTick){const e=this.channels[t].instruments[i.instrumentIndex];this.releaseTone(e,i)}else this.freeTone(i)}}else if(!e.getChannelIsMod(t)){let p=null,c=null,h=null;if(n&&null!=r&&!s.muted&&(!this.isRecording||this.liveInputChannel!=t)){for(let e=0;e<r.notes.length;e++)if(r.notes[e].end<=o)c=r.notes[e];else if(r.notes[e].start<=o&&r.notes[e].end>o)p=r.notes[e];else if(r.notes[e].start>o){h=r.notes[e];break}null!=p&&(null!=c&&c.end!=p.start&&(c=null),null!=h&&h.start!=p.end&&(h=null))}if(null!=r&&(!e.layeredInstruments||1==s.instruments.length||e.patternInstruments&&1==r.instruments.length)){const t=e.patternInstruments?r.instruments[0]:0;if(null!=a.singleSeamlessInstrument&&a.singleSeamlessInstrument!=t&&a.singleSeamlessInstrument<a.instruments.length){const e=a.instruments[a.singleSeamlessInstrument],i=a.instruments[t];for(;e.activeTones.count()>0;)i.activeTones.pushFront(e.activeTones.popBack())}a.singleSeamlessInstrument=t}else a.singleSeamlessInstrument=null;for(let n=0;n<s.instruments.length;n++){const f=a.instruments[n],d=f.activeTones;let m=0;if(null!=p&&(!e.patternInstruments||-1!=r.instruments.indexOf(n))){const a=s.instruments[n];let y=c,v=h;const g=u.partsPerBeat*e.beatsPerBar,b=a.getTransition(),S=a.getChord();let w=!1,k=!1,q=0,F=0;if(0==p.start){let i=null==this.prevBar?null:e.getPattern(t,this.prevBar);if(null!=i){const t=i.notes.length<=0?null:i.notes[i.notes.length-1];if(null!=t&&t.end==g){const a=p.continuesLastPattern&&qe.adjacentNotesHaveMatchingPitches(t,p),o=this.adjacentPatternHasCompatibleInstrumentTransition(e,s,r,i,n,b,S,p,t,a);null!=o&&(y=t,q=o.singleTone?1:y.pitches.length,w=a)}}}else null!=y&&(q=S.singleTone?1:y.pitches.length);if(p.end==g){let i=null==this.nextBar?null:e.getPattern(t,this.nextBar);if(null!=i){const t=i.notes.length<=0?null:i.notes[0];if(null!=t&&0==t.start){const a=t.continuesLastPattern&&qe.adjacentNotesHaveMatchingPitches(p,t),o=this.adjacentPatternHasCompatibleInstrumentTransition(e,s,r,i,n,b,S,p,t,a);null!=o&&(v=t,F=o.singleTone?1:v.pitches.length,k=a)}}}else null!=v&&(F=S.singleTone?1:v.pitches.length);if(S.singleTone){const s=u.ticksPerPart*p.start==l;let r;if(d.count()<=m)r=this.newTone(),d.pushBack(r);else if(!s||(b.isSeamless||a.clicklessTransition||w)&&null!=y)r=d.get(m);else{const e=d.get(m);e.isOnLastTick?this.freeTone(e):this.releaseTone(f,e),r=this.newTone(),d.set(m,r)}m++;for(let e=0;e<p.pitches.length;e++)r.pitches[e]=p.pitches[e];r.pitchCount=p.pitches.length,r.chordSize=1,r.instrumentIndex=n,r.note=p,r.noteStartPart=p.start,r.noteEndPart=p.end,r.prevNote=y,r.nextNote=v,r.prevNotePitchIndex=0,r.nextNotePitchIndex=0,r.atNoteStart=s,r.passedEndOfNote=!1,r.forceContinueAtStart=w,r.forceContinueAtEnd=k,this.computeTone(e,t,i,r,!1,!1)}else{const s=a.getTransition();(s.isSeamless&&!s.slides&&0==S.strumParts||w)&&u.ticksPerPart*p.start==l&&null!=y&&this.moveTonesIntoOrderedTempMatchedList(d,p.pitches);let r=0;for(let a=0;a<p.pitches.length;a++){let c=q>a?y:null,h=p,g=F>a?v:null,b=h.start+r,T=!1;if(b>o){if(!(d.count()>a&&(s.isSeamless||w)&&null!=c))break;g=h,h=c,c=null,b=h.start+r,T=!0}let M=h.end;(s.isSeamless||w)&&null!=g&&(M=Math.min(u.partsPerBeat*this.song.beatsPerBar,M+r)),(s.continues||w)&&null!=c||(r+=S.strumParts);const z=u.ticksPerPart*b==l;let P;if(null!=this.tempMatchedPitchTones[m])P=this.tempMatchedPitchTones[m],this.tempMatchedPitchTones[m]=null,d.pushBack(P);else if(d.count()<=m)P=this.newTone(),d.pushBack(P);else if(!z||(s.isSeamless||w)&&null!=c)P=d.get(m);else{const e=d.get(m);e.isOnLastTick?this.freeTone(e):this.releaseTone(f,e),P=this.newTone(),d.set(m,P)}m++,P.pitches[0]=h.pitches[a],P.pitchCount=1,P.chordSize=h.pitches.length,P.instrumentIndex=n,P.note=h,P.noteStartPart=b,P.noteEndPart=M,P.prevNote=c,P.nextNote=g,P.prevNotePitchIndex=a,P.nextNotePitchIndex=a,P.atNoteStart=z,P.passedEndOfNote=T,P.forceContinueAtStart=w&&null!=c,P.forceContinueAtEnd=k&&null!=g,this.computeTone(e,t,i,P,!1,!1)}}}for(;d.count()>m;){const i=d.popBack(),n=e.channels[t];if(i.instrumentIndex<n.instruments.length&&!i.isOnLastTick){const e=a.instruments[i.instrumentIndex];this.releaseTone(e,i)}else this.freeTone(i)}this.clearTempMatchedPitchTones(m,f)}}}clearTempMatchedPitchTones(e,t){for(let i=e;i<this.tempMatchedPitchTones.length;i++){const e=this.tempMatchedPitchTones[i];null!=e&&(e.isOnLastTick?this.freeTone(e):this.releaseTone(t,e),this.tempMatchedPitchTones[i]=null)}}playTone(e,t,i,n){const s=this.channels[e].instruments[n.instrumentIndex];null!=s.synthesizer&&s.synthesizer(this,t,i,n,s),n.envelopeComputer.clearEnvelopes()}playModTone(e,t,i,n,s,a,r,o){const l=e.channels[t].instruments[a.instrumentIndex];if(null!=a.note){const e=this.getTicksIntoBar(),t=e/u.ticksPerPart,r=(e+1)/u.ticksPerPart,o=this.tickSampleCountdown,p=t+(r-t)*(1-o/i),c=t+(r-t)*(1-(o-s)/i),h=u.ticksPerPart*p,f=u.ticksPerPart*c,d=a.note.getEndPinIndex(this.getCurrentPart()),m=a.note.pins[d-1],y=a.note.pins[d],v=(a.note.start+m.time)*u.ticksPerPart,g=(a.note.start+y.time)*u.ticksPerPart,b=(h-v)/(g-v),S=(f-v)/(g-v);a.expression=m.size+(y.size-m.size)*b,a.expressionDelta=m.size+(y.size-m.size)*S-a.expression,qe.modSynth(this,n,s,a,l)}}static computeChordExpression(e){return 1/(.25*(e-1)+1)}computeTone(e,t,i,n,s,a){const r=Math.ceil(i),o=e.channels[t],l=this.channels[t],p=o.instruments[n.instrumentIndex],c=l.instruments[n.instrumentIndex];c.awake=!0,c.tonesAddedInThisTick=!0,c.computed||c.compute(this,p,i,r,n,t,n.instrumentIndex);const h=p.getTransition(),f=p.getChord(),m=f.singleTone?1:qe.computeChordExpression(n.chordSize),y=e.getChannelIsNoise(t),v=y?u.noiseInterval:1,g=u.ticksPerPart*i/this.samplesPerSecond,S=1/this.samplesPerSecond,w=1/u.partsPerBeat,k=this.getTicksIntoBar(),z=k/u.ticksPerPart,P=(k+1)/u.ticksPerPart,x=this.getCurrentPart();let H=1;n.specialIntervalExpressionMult=1;let G=a,I=0,D=0,O=1,C=1,W=m,A=m,E=16,L=u.keys[e.key].basePitch+u.pitchesPerOctave*e.octave,R=1,B=48;if(3==p.type)R=u.spectrumBaseExpression,y&&(L=u.spectrumBasePitch,R*=2),E=u.spectrumBasePitch,B=28;else if(4==p.type)L=u.spectrumBasePitch,R=u.drumsetBaseExpression,E=L;else if(2==p.type)L=y?u.chipNoises[p.chipNoise].basePitch:L+u.chipNoises[p.chipNoise].basePitch-12,R=u.noiseBaseExpression,E=L,B=u.chipNoises[p.chipNoise].isSoft?24:60;else if(1==p.type||12==p.type)R=u.fmBaseExpression;else if(0==p.type)R=u.chipBaseExpression,u.chipWaves[p.chipWave].isCustomSampled?u.chipWaves[p.chipWave].isPercussion?L=-12*Math.log2(u.chipWaves[p.chipWave].samples.length/u.chipWaves[p.chipWave].sampleRate)-84.37-(-60+u.chipWaves[p.chipWave].rootKey):L+=-12*Math.log2(u.chipWaves[p.chipWave].samples.length/u.chipWaves[p.chipWave].sampleRate)-96.37-(-60+u.chipWaves[p.chipWave].rootKey):u.chipWaves[p.chipWave].isSampled&&!u.chipWaves[p.chipWave].isPercussion?L=L-63+u.chipWaves[p.chipWave].extraSampleDetune:u.chipWaves[p.chipWave].isSampled&&u.chipWaves[p.chipWave].isPercussion&&(L=-51+u.chipWaves[p.chipWave].extraSampleDetune);else if(10==p.type)R=u.chipBaseExpression;else if(5==p.type)R=u.harmonicsBaseExpression;else if(6==p.type)R=u.pwmBaseExpression;else if(7==p.type)R=u.pwmBaseExpression;else if(9==p.type)R=u.supersawBaseExpression;else if(8==p.type)R=u.pickedStringBaseExpression;else{if(11!=p.type)throw new Error("Unknown instrument type in computeTone.");R=1,E=0,B=1,L=0}if((n.atNoteStart&&!h.isSeamless&&!n.forceContinueAtStart||n.freshlyAllocated)&&(n.reset(),0==p.type&&p.isUsingAdvancedLoopControls)){const e=u.rawRawChipWaves[p.chipWave].samples.length-1,t=p.chipWaveStartOffset/e,i=.999999999999999;for(let e=0;e<u.maxPitchOrOperatorCount;e++)n.phases[e]=p.chipWavePlayBackwards?Math.max(0,Math.min(i,t)):Math.max(0,t),n.directions[e]=p.chipWavePlayBackwards?-1:1,n.chipWaveCompletions[e]=0,n.chipWavePrevWaves[e]=0,n.chipWaveCompletionsLastWave[e]=0}n.freshlyAllocated=!1;for(let e=0;e<u.maxPitchOrOperatorCount;e++)n.phaseDeltas[e]=0,n.phaseDeltaScales[e]=0,n.operatorExpressions[e]=0,n.operatorExpressionDeltas[e]=0;n.expression=0,n.expressionDelta=0;for(let e=0;e<(12==p.type?6:u.operatorCount);e++)n.operatorWaves[e]=qe.getOperatorWave(p.operators[e].waveform,p.operators[e].pulseWidth);if(s){const e=n.ticksSinceReleased,t=n.ticksSinceReleased+1;I=D=n.lastInterval;const i=Math.abs(p.getFadeOutTicks());O=qe.noteSizeToVolumeMult((1-e/i)*u.noteSizeMax),C=qe.noteSizeToVolumeMult((1-t/i)*u.noteSizeMax),a&&(C=0),n.ticksSinceReleased+1>=i&&(G=!0)}else if(null==n.note)O=C=1,n.lastInterval=0,n.ticksSinceReleased=0,n.liveInputSamplesHeld+=r;else{const e=n.note,t=n.nextNote,i=n.noteStartPart,s=n.noteEndPart,a=e.getEndPinIndex(x),r=e.pins[a-1],o=e.pins[a],l=i*u.ticksPerPart,c=s*u.ticksPerPart,f=(e.start+r.time)*u.ticksPerPart,d=(e.start+o.time)*u.ticksPerPart;n.ticksSinceReleased=0;const m=x*u.ticksPerPart+this.tick,y=m+1,v=m-l,g=y-l,b=Math.min(1,(m-f)/(d-f)),S=Math.min(1,(y-f)/(d-f));if(O=1,C=1,I=r.interval+(o.interval-r.interval)*b,D=r.interval+(o.interval-r.interval)*S,n.lastInterval=D,!h.isSeamless&&!n.forceContinueAtEnd||null==t){const e=-p.getFadeOutTicks();if(e>0){const t=c-l;O*=Math.min(1,(t-v)/e),C*=Math.min(1,(t-g)/e),y>=l+t&&(G=!0)}}}n.isOnLastTick=G;let V,$,_=p.noteFilter;if(p.noteFilterType){const e=p.noteFilter;null==p.noteSubFilters[1]&&(p.noteSubFilters[1]=new fe);const i=p.noteSubFilters[1];let s=p.noteFilterSimpleCut,a=p.noteFilterSimplePeak,r=p.noteFilterSimpleCut,o=p.noteFilterSimplePeak,l=!1;this.isModActive(u.modulators.dictionary["note filt cut"].index,t,n.instrumentIndex)&&(s=this.getModValue(u.modulators.dictionary["note filt cut"].index,t,n.instrumentIndex,!1),r=this.getModValue(u.modulators.dictionary["note filt cut"].index,t,n.instrumentIndex,!0),l=!0),this.isModActive(u.modulators.dictionary["note filt peak"].index,t,n.instrumentIndex)&&(a=this.getModValue(u.modulators.dictionary["note filt peak"].index,t,n.instrumentIndex,!1),o=this.getModValue(u.modulators.dictionary["note filt peak"].index,t,n.instrumentIndex,!0),l=!0),e.convertLegacySettingsForSynth(s,a,!l),i.convertLegacySettingsForSynth(r,o,!l),V=e.controlPoints[0],$=i.controlPoints[0],p.noteFilter=e,p.tmpNoteFilterStart=e}const U=n.envelopeComputer;let j=u.arpSpeedScale[p.envelopeSpeed];this.isModActive(u.modulators.dictionary["envelope speed"].index,t,n.instrumentIndex)&&(j=Math.max(0,Math.min(u.arpSpeedScale.length-1,this.getModValue(u.modulators.dictionary["envelope speed"].index,t,n.instrumentIndex,!1))),j=Number.isInteger(j)?u.arpSpeedScale[j]:(1-j%1)*u.arpSpeedScale[Math.floor(j)]+j%1*u.arpSpeedScale[Math.ceil(j)]),U.computeEnvelopes(p,x,c.envelopeTime,u.ticksPerPart*z,i/this.samplesPerSecond,n,j);const Q=n.envelopeComputer.envelopeStarts,K=n.envelopeComputer.envelopeEnds;if(p.noteFilter=_,null!=n.note&&h.slides){const e=n.prevNote,t=n.nextNote;if(null!=e){const t=e.pitches[n.prevNotePitchIndex]+e.pins[e.pins.length-1].interval-n.pitches[0];if(U.prevSlideStart&&(I+=t*U.prevSlideRatioStart),U.prevSlideEnd&&(D+=t*U.prevSlideRatioEnd),!f.singleTone){const t=e.pitches.length-n.chordSize;U.prevSlideStart&&(W=qe.computeChordExpression(n.chordSize+t*U.prevSlideRatioStart)),U.prevSlideEnd&&(A=qe.computeChordExpression(n.chordSize+t*U.prevSlideRatioEnd))}}if(null!=t){const e=t.pitches[n.nextNotePitchIndex]-(n.pitches[0]+n.note.pins[n.note.pins.length-1].interval);if(U.nextSlideStart&&(I+=e*U.nextSlideRatioStart),U.nextSlideEnd&&(D+=e*U.nextSlideRatioEnd),!f.singleTone){const e=t.pitches.length-n.chordSize;U.nextSlideStart&&(W=qe.computeChordExpression(n.chordSize+e*U.nextSlideRatioStart)),U.nextSlideEnd&&(A=qe.computeChordExpression(n.chordSize+e*U.nextSlideRatioEnd))}}}if(q(p.effects)){let e=u.justIntonationSemitones[p.pitchShift]/v,i=1,s=1;this.isModActive(u.modulators.dictionary["pitch shift"].index,t,n.instrumentIndex)&&(e=u.justIntonationSemitones[u.justIntonationSemitones.length-1],i=this.getModValue(u.modulators.dictionary["pitch shift"].index,t,n.instrumentIndex,!1)/u.pitchShiftCenter,s=this.getModValue(u.modulators.dictionary["pitch shift"].index,t,n.instrumentIndex,!0)/u.pitchShiftCenter);I+=e*Q[18]*i,D+=e*K[18]*s}if(F(p.effects)||this.isModActive(u.modulators.dictionary["song detune"].index,t,n.instrumentIndex)){const e=Q[19],i=K[19];let s=p.detune,a=p.detune;this.isModActive(u.modulators.dictionary.detune.index,t,n.instrumentIndex)&&(s=this.getModValue(u.modulators.dictionary.detune.index,t,n.instrumentIndex,!1)+u.detuneCenter,a=this.getModValue(u.modulators.dictionary.detune.index,t,n.instrumentIndex,!0)+u.detuneCenter),this.isModActive(u.modulators.dictionary["song detune"].index,t,n.instrumentIndex)&&(s+=4*this.getModValue(u.modulators.dictionary["song detune"].index,t,n.instrumentIndex,!1),a+=4*this.getModValue(u.modulators.dictionary["song detune"].index,t,n.instrumentIndex,!0)),I+=qe.detuneToCents(s)*e*u.pitchesPerOctave/1200,D+=qe.detuneToCents(a)*i*u.pitchesPerOctave/1200}if(T(p.effects)){let e,i,s,a;if(p.vibrato==u.vibratos.length?(e=2*p.vibratoDelay,p.vibratoDelay==u.modulators.dictionary["vibrato delay"].maxRawVol&&(e=Number.POSITIVE_INFINITY),i=p.vibratoDepth,s=i):(e=u.vibratos[p.vibrato].delayTicks,i=u.vibratos[p.vibrato].amplitude,s=i),this.isModActive(u.modulators.dictionary["vibrato delay"].index,t,n.instrumentIndex)&&(e=2*this.getModValue(u.modulators.dictionary["vibrato delay"].index,t,n.instrumentIndex,!1),e==2*u.modulators.dictionary["vibrato delay"].maxRawVol&&(e=Number.POSITIVE_INFINITY)),this.isModActive(u.modulators.dictionary["vibrato depth"].index,t,n.instrumentIndex)&&(i=this.getModValue(u.modulators.dictionary["vibrato depth"].index,t,n.instrumentIndex,!1)/25,s=this.getModValue(u.modulators.dictionary["vibrato depth"].index,t,n.instrumentIndex,!0)/25),null!=n.prevVibrato)a=n.prevVibrato;else{if(a=i*qe.getLFOAmplitude(p,g*c.vibratoTime)*Q[20],e>0){const t=e-U.noteTicksStart;a*=Math.max(0,Math.min(1,1-t/2))}}let r=qe.getLFOAmplitude(p,g*c.nextVibratoTime);const o=K[20];if(11!=p.type){let t=s*r*o;if(e>0){const i=e-U.noteTicksEnd;t*=Math.max(0,Math.min(1,1-i/2))}n.prevVibrato=t,I+=a,D+=t}}if(!h.isSeamless&&!n.forceContinueAtStart||null==n.prevNote){const e=p.getFadeInSeconds();e>0&&(O*=Math.min(1,U.noteSecondsStartUnscaled/e),C*=Math.min(1,U.noteSecondsEndUnscaled/e))}4==p.type&&null==n.drumsetPitch&&(n.drumsetPitch=n.pitches[0],null!=n.note&&(n.drumsetPitch+=n.note.pickMainInterval()),n.drumsetPitch=Math.max(0,Math.min(u.drumCount-1,n.drumsetPitch)));let J=U.lowpassCutoffDecayVolumeCompensation;if(M(p.effects)){const e=Q[1],t=K[1];if(p.noteFilterType){const i=Q[21],s=K[21],a=Q[29],o=K[29];V.toCoefficients(qe.tempFilterStartCoefficients,this.samplesPerSecond,e*i,a),$.toCoefficients(qe.tempFilterEndCoefficients,this.samplesPerSecond,t*s,o),n.noteFilters.length<1&&(n.noteFilters[0]=new N),n.noteFilters[0].loadCoefficientsWithGradient(qe.tempFilterStartCoefficients,qe.tempFilterEndCoefficients,1/r,0==V.type),J*=V.getVolumeCompensationMult(),n.noteFilterCount=1}else{const i=null!=p.tmpNoteFilterStart?p.tmpNoteFilterStart:p.noteFilter;for(let s=0;s<i.controlPointCount;s++){const a=Q[21+s],o=K[21+s],l=Q[29+s],u=K[29+s];let c=i.controlPoints[s];const h=null!=p.tmpNoteFilterEnd&&null!=p.tmpNoteFilterEnd.controlPoints[s]?p.tmpNoteFilterEnd.controlPoints[s]:i.controlPoints[s];c.type!=h.type&&(c=h),c.toCoefficients(qe.tempFilterStartCoefficients,this.samplesPerSecond,e*a,l),h.toCoefficients(qe.tempFilterEndCoefficients,this.samplesPerSecond,t*o,u),n.noteFilters.length<=s&&(n.noteFilters[s]=new N),n.noteFilters[s].loadCoefficientsWithGradient(qe.tempFilterStartCoefficients,qe.tempFilterEndCoefficients,1/r,0==c.type),J*=c.getVolumeCompensationMult()}n.noteFilterCount=i.controlPointCount}}else n.noteFilterCount=0;if(4==p.type){const e=p.getDrumsetEnvelope(n.drumsetPitch);J*=be.getLowpassCutoffDecayVolumeCompensation(e);let t=be.computeEnvelope(e,U.noteSecondsStart,w*z,U.noteSizeStart);if(U.prevSlideStart){t+=(be.computeEnvelope(e,U.prevNoteSecondsStart,w*z,U.prevNoteSize)-t)*U.prevSlideRatioStart}if(U.nextSlideStart){t+=(be.computeEnvelope(e,0,w*z,U.nextNoteSize)-t)*U.nextSlideRatioStart}let i=t;if(0==p.discreteEnvelope){if(i=be.computeEnvelope(e,U.noteSecondsEnd,w*P,U.noteSizeEnd),U.prevSlideEnd){i+=(be.computeEnvelope(e,U.prevNoteSecondsEnd,w*P,U.prevNoteSize)-i)*U.prevSlideRatioEnd}if(U.nextSlideEnd){i+=(be.computeEnvelope(e,0,w*P,U.nextNoteSize)-i)*U.nextSlideRatioEnd}}const s=this.tempDrumSetControlPoint;s.type=0,s.gain=he.getRoundedSettingValueFromLinearGain(.5),s.freq=he.getRoundedSettingValueFromHz(8e3),s.toCoefficients(qe.tempFilterStartCoefficients,this.samplesPerSecond,t*(1+t),1),s.toCoefficients(qe.tempFilterEndCoefficients,this.samplesPerSecond,i*(1+i),1),n.noteFilters.length==n.noteFilterCount&&(n.noteFilters[n.noteFilterCount]=new N),n.noteFilters[n.noteFilterCount].loadCoefficientsWithGradient(qe.tempFilterStartCoefficients,qe.tempFilterEndCoefficients,1/r,!0),n.noteFilterCount++}if(J=Math.min(3,J),1==p.type||12==p.type){let e=1,i=0,s=0;const a=f.arpeggiates;if(n.pitchCount>1&&a){const e=Math.floor(c.arpTime/u.ticksPerArpeggio);s=n.pitches[b(n.pitchCount,p.fastTwoNoteArp,e)]-n.pitches[0]}const o=12==p.type?p.customAlgorithm.carrierCount:u.algorithms[p.algorithm].carrierCount;for(let l=0;l<(12==p.type?6:u.operatorCount);l++){const c=12==p.type?p.customAlgorithm.associatedCarrier[l]-1:u.algorithms[p.algorithm].associatedCarrier[l]-1,h=n.pitches[a?0:l<n.pitchCount?l:c<n.pitchCount?c:0],f=u.operatorFrequencies[p.operators[l].frequency].mult,d=u.operatorCarrierInterval[c]+s,m=L+(h+I)*v+d,y=L+(h+D)*v+d,g=me.frequencyFromPitch(m),b=me.frequencyFromPitch(y),w=u.operatorFrequencies[p.operators[l].frequency].hzOffset,k=f*g+w,q=f*b+w,F=Q[5+l],T=K[5+l];let M,z;1!=F||1!=T?(M=Math.pow(2,Math.log2(k/g)*F)*g,z=Math.pow(2,Math.log2(q/b)*T)*b):(M=k,z=q),n.phaseDeltas[l]=M*S,n.phaseDeltaScales[l]=Math.pow(z/M,1/r);let P=p.operators[l].amplitude,x=p.operators[l].amplitude;l<4?this.isModActive(u.modulators.dictionary["fm slider 1"].index+l,t,n.instrumentIndex)&&(P*=this.getModValue(u.modulators.dictionary["fm slider 1"].index+l,t,n.instrumentIndex,!1)/15,x*=this.getModValue(u.modulators.dictionary["fm slider 1"].index+l,t,n.instrumentIndex,!0)/15):this.isModActive(u.modulators.dictionary["fm slider 5"].index+l-4,t,n.instrumentIndex)&&(P*=this.getModValue(u.modulators.dictionary["fm slider 5"].index+l-4,t,n.instrumentIndex,!1)/15,x*=this.getModValue(u.modulators.dictionary["fm slider 5"].index+l-4,t,n.instrumentIndex,!0)/15);const H=qe.operatorAmplitudeCurve(P),G=qe.operatorAmplitudeCurve(x);let O=H*u.operatorFrequencies[p.operators[l].frequency].amplitudeSign,C=G*u.operatorFrequencies[p.operators[l].frequency].amplitudeSign;if(l<o){let e;e=null!=n.prevPitchExpressions[l]?n.prevPitchExpressions[l]:Math.pow(2,-(m-E)/B);const t=Math.pow(2,-(y-E)/B);n.prevPitchExpressions[l]=t,O*=e,C*=t,i+=G}else O*=1.5*u.sineWaveLength,C*=1.5*u.sineWaveLength,e*=1-Math.min(1,p.operators[l].amplitude/15);if(O*=Q[11+l],C*=K[11+l],this.isModActive(u.modulators.dictionary["note volume"].index,t,n.instrumentIndex)){const e=this.getModValue(u.modulators.dictionary["note volume"].index,t,n.instrumentIndex,!1),i=this.getModValue(u.modulators.dictionary["note volume"].index,t,n.instrumentIndex,!0);O*=e<=0?(e+u.volumeRange/2)/(u.volumeRange/2):qe.instrumentVolumeToVolumeMult(e),C*=i<=0?(i+u.volumeRange/2)/(u.volumeRange/2):qe.instrumentVolumeToVolumeMult(i)}n.operatorExpressions[l]=O,n.operatorExpressionDeltas[l]=(C-O)/r}e*=(Math.pow(2,2-1.4*p.feedbackAmplitude/15)-1)/3,e*=1-Math.min(1,Math.max(0,i-1)/2),e=1+3*e;const l=R*e*J*O*W*Q[0],h=R*e*J*C*A*K[0];n.expression=l,n.expressionDelta=(h-l)/r;let d=p.feedbackAmplitude,m=p.feedbackAmplitude;this.isModActive(u.modulators.dictionary["fm feedback"].index,t,n.instrumentIndex)&&(d*=this.getModValue(u.modulators.dictionary["fm feedback"].index,t,n.instrumentIndex,!1)/15,m*=this.getModValue(u.modulators.dictionary["fm feedback"].index,t,n.instrumentIndex,!0)/15);let y=.3*u.sineWaveLength*d/15;const g=.3*u.sineWaveLength*m/15;let w=y*Q[17],k=g*K[17];n.feedbackMult=w,n.feedbackDelta=(k-w)/r}else{const e=Math.pow(2,(D-I)*v/12),i=Math.pow(e,1/r);let s=n.pitches[0];if(n.pitchCount>1&&(f.arpeggiates||f.customInterval)){const e=Math.floor(c.arpTime/u.ticksPerArpeggio);if(f.customInterval){const t=n.pitches[1+b(n.pitchCount-1,p.fastTwoNoteArp,e)]-n.pitches[0];H=Math.pow(2,t/12),n.specialIntervalExpressionMult=Math.pow(2,-t/B)}else s=n.pitches[b(n.pitchCount,p.fastTwoNoteArp,e)]}const a=L+(s+I)*v,o=L+(s+D)*v;let l;l=null!=n.prevPitchExpressions[0]?n.prevPitchExpressions[0]:Math.pow(2,-(a-E)/B);const m=Math.pow(2,-(o-E)/B);n.prevPitchExpressions[0]=m;let y=R*J;if(2==p.type&&(y*=u.chipNoises[p.chipNoise].expression),0==p.type&&(y*=u.chipWaves[p.chipWave].expression),6==p.type){const e=d(p.pulseWidth);let i=e,s=e;this.isModActive(u.modulators.dictionary["pulse width"].index,t,n.instrumentIndex)&&(i=this.getModValue(u.modulators.dictionary["pulse width"].index,t,n.instrumentIndex,!1)/(2*u.pulseWidthRange),s=this.getModValue(u.modulators.dictionary["pulse width"].index,t,n.instrumentIndex,!0)/(2*u.pulseWidthRange));const a=i*Q[2],o=s*K[2];n.pulseWidth=a,n.pulseWidthDelta=(o-a)/r;let l=p.decimalOffset;this.isModActive(u.modulators.dictionary["decimal offset"].index,t,n.instrumentIndex)&&(l=this.getModValue(u.modulators.dictionary["decimal offset"].index,t,n.instrumentIndex,!1));const c=l*Q[37];n.decimalOffset=c,n.pulseWidth-=n.decimalOffset/1e4}if(7==p.type){const e=d(p.dutyCycleSequence[Math.floor(c.dutyCycleTime)]);const t=e,i=e;n.pulseWidth=t,n.pulseWidthDelta=(i-t)/r}if(8==p.type){let e=p.stringSustain,i=p.stringSustain;this.isModActive(u.modulators.dictionary.sustain.index,t,n.instrumentIndex)&&(e=this.getModValue(u.modulators.dictionary.sustain.index,t,n.instrumentIndex,!1),i=this.getModValue(u.modulators.dictionary.sustain.index,t,n.instrumentIndex,!0)),n.stringSustainStart=e,n.stringSustainEnd=i,y*=Math.pow(2,.7*(1-e/(u.stringSustainRange-1)))}const g=me.frequencyFromPitch(a);if(0==p.type||10==p.type||5==p.type||8==p.type||3==p.type||6==p.type||7==p.type||2==p.type){const e=p.unisonVoices,t=p.unisonSpread,s=p.unisonOffset;y*=p.unisonExpression*(8==p.type?1:e/2);const a=Q[4],o=K[4],l=Math.pow(2,(s+t)*a/12),u=Math.pow(2,(s+t)*o/12),c=Math.pow(2,(s-t)*a/12)*H,h=Math.pow(2,(s-t)*o/12)*H;n.phaseDeltas[0]=g*S*l,n.phaseDeltas[1]=g*S*c,n.phaseDeltaScales[0]=i*Math.pow(u/l,1/r),n.phaseDeltaScales[1]=i*Math.pow(h/c,1/r)}else n.phaseDeltas[0]=g*S,n.phaseDeltaScales[0]=i;let w=1,k=1;if(9==p.type){const i=1/Math.sqrt(u.supersawVoiceCount);let s=p.supersawDynamism/u.supersawDynamismMax,a=p.supersawDynamism/u.supersawDynamismMax;this.isModActive(u.modulators.dictionary.dynamism.index,t,n.instrumentIndex)&&(s=this.getModValue(u.modulators.dictionary.dynamism.index,t,n.instrumentIndex,!1)/u.supersawDynamismMax,a=this.getModValue(u.modulators.dictionary.dynamism.index,t,n.instrumentIndex,!0)/u.supersawDynamismMax);const o=1-Math.pow(Math.max(0,1-s*Q[38]),.2),l=1-Math.pow(Math.max(0,1-a*K[38]),.2),c=Math.pow(2,Math.log2(i)*o),h=Math.pow(2,Math.log2(i)*l),f=Math.sqrt((1/Math.pow(c,2)-1)/(u.supersawVoiceCount-1)),m=Math.sqrt((1/Math.pow(h,2)-1)/(u.supersawVoiceCount-1));n.supersawDynamism=f,n.supersawDynamismDelta=(m-f)/r;const y=-1==n.supersawDelayIndex;if(y){let e=0;for(let t=0;t<u.supersawVoiceCount;t++)n.phases[t]=e,e+=-Math.log(Math.random());const t=1+(u.supersawVoiceCount-1)*f;let i=0;for(let t=0;t<u.supersawVoiceCount;t++){const s=0==t?1:f,a=n.phases[t]/e;n.phases[t]=a,i+=(a-.5)*s}let s=1,a=0;for(let e=u.supersawVoiceCount-1;e>=0;e--){const r=1-n.phases[e],o=r-a;if(i<0){const e=-i/t;if(e<o){s=a+e;break}}i+=o*t-(0==e?1:f),a=r}for(let e=0;e<u.supersawVoiceCount;e++)n.phases[e]+=s;for(let e=1;e<u.supersawVoiceCount-1;e++){const t=e+Math.floor(Math.random()*(u.supersawVoiceCount-e)),i=n.phases[e];n.phases[e]=n.phases[t],n.phases[t]=i}}const v=p.supersawSpread/u.supersawSpreadMax;let b=v,q=v;this.isModActive(u.modulators.dictionary.spread.index,t,n.instrumentIndex)&&(b=this.getModValue(u.modulators.dictionary.spread.index,t,n.instrumentIndex,!1)/u.supersawSpreadMax,q=this.getModValue(u.modulators.dictionary.spread.index,t,n.instrumentIndex,!0)/u.supersawSpreadMax);const F=.5*(b*Q[39]+q*K[39]),T=Math.pow(1-Math.sqrt(Math.max(0,1-F)),1.75);for(let e=0;e<u.supersawVoiceCount;e++){const t=0==e?0:Math.pow(((e+1>>1)-.5+.025*((2&e)-1))/(u.supersawVoiceCount>>1),1.1)*(2*(1&e)-1);n.supersawUnisonDetunes[e]=Math.pow(2,T*t/12)}const M=p.supersawShape/u.supersawShapeMax;let z=M*Q[40],P=M*K[40];this.isModActive(u.modulators.dictionary["saw shape"].index,t,n.instrumentIndex)&&(z=this.getModValue(u.modulators.dictionary["saw shape"].index,t,n.instrumentIndex,!1)/u.supersawShapeMax,P=this.getModValue(u.modulators.dictionary["saw shape"].index,t,n.instrumentIndex,!0)/u.supersawShapeMax);const x=z*Q[40],H=P*K[40];n.supersawShape=x,n.supersawShapeDelta=(H-x)/r;let G=p.decimalOffset;this.isModActive(u.modulators.dictionary["decimal offset"].index,t,n.instrumentIndex)&&(G=this.getModValue(u.modulators.dictionary["decimal offset"].index,t,n.instrumentIndex,!1));const I=G*Q[37];n.decimalOffset=I;const D=d(p.pulseWidth);let O=D,C=D;this.isModActive(u.modulators.dictionary["pulse width"].index,t,n.instrumentIndex)&&(O=this.getModValue(u.modulators.dictionary["pulse width"].index,t,n.instrumentIndex,!1)/(2*u.pulseWidthRange),C=this.getModValue(u.modulators.dictionary["pulse width"].index,t,n.instrumentIndex,!0)/(2*u.pulseWidthRange));let W=O*Q[2],A=C*K[2];W-=I/1e4,A-=I/1e4;const E=null!=n.supersawPrevPhaseDelta?n.supersawPrevPhaseDelta:g*S,L=g*S*e;n.supersawPrevPhaseDelta=L;const R=W/E,N=A/L;n.supersawDelayLength=R,n.supersawDelayLengthDelta=(N-R)/r;const B=Math.ceil(Math.max(R,N))+2;if(null==n.supersawDelayLine||n.supersawDelayLine.length<=B){const e=Math.ceil(.5*this.samplesPerSecond/me.frequencyFromPitch(24)),t=new Float32Array(qe.fittingPowerOfTwo(Math.max(e,B)));if(!y&&null!=n.supersawDelayLine){const e=n.supersawDelayLine.length-1>>0,i=n.supersawDelayIndex;for(let s=0;s<n.supersawDelayLine.length;s++)t[s]=n.supersawDelayLine[i+s&e]}n.supersawDelayLine=t,n.supersawDelayIndex=n.supersawDelayLine.length}else y&&(n.supersawDelayLine.fill(0),n.supersawDelayIndex=n.supersawDelayLine.length);const V=u.pwmBaseExpression/u.supersawBaseExpression;w*=(1+(V-1)*x)/Math.sqrt(1+(u.supersawVoiceCount-1)*f*f),k*=(1+(V-1)*H)/Math.sqrt(1+(u.supersawVoiceCount-1)*m*m)}let q=y*O*W*l*Q[0]*w,F=y*C*A*m*K[0]*k;if(this.isModActive(u.modulators.dictionary["note volume"].index,t,n.instrumentIndex)){const e=this.getModValue(u.modulators.dictionary["note volume"].index,t,n.instrumentIndex,!1),i=this.getModValue(u.modulators.dictionary["note volume"].index,t,n.instrumentIndex,!0);q*=e<=0?(e+u.volumeRange/2)/(u.volumeRange/2):qe.instrumentVolumeToVolumeMult(e),F*=i<=0?(i+u.volumeRange/2)/(u.volumeRange/2):qe.instrumentVolumeToVolumeMult(i)}if(n.expression=q,n.expressionDelta=(F-q)/r,8==p.type){let e;if(null!=n.prevStringDecay)e=n.prevStringDecay;else{const t=n.envelopeComputer.envelopeStarts[3];e=1-Math.min(1,t*n.stringSustainStart/(u.stringSustainRange-1))}const t=n.envelopeComputer.envelopeEnds[3];let i=1-Math.min(1,t*n.stringSustainEnd/(u.stringSustainRange-1));n.prevStringDecay=i;const s=p.unisonVoices;for(let e=n.pickedStrings.length;e<s;e++)n.pickedStrings[e]=new ge;if(n.atNoteStart&&!h.continues&&!n.forceContinueAtStart)for(const e of n.pickedStrings)e.delayIndex=-1;for(let t=0;t<s;t++)n.pickedStrings[t].update(this,c,n,t,r,e,i,p.stringSustainType)}}}static getLFOAmplitude(e,t){let i=0;for(const n of u.vibratoTypes[e.vibratoType].periodsSeconds)i+=Math.sin(2*Math.PI*t/n);return i}static getInstrumentSynthFunction(e){if(1==e.type){const t=e.algorithm+"_"+e.feedbackType;if(null==qe.fmSynthFunctionCache[t]){const i=[];for(const t of qe.fmSourceTemplate)if(-1!=t.indexOf("// CARRIER OUTPUTS")){const n=[];for(let t=0;t<u.algorithms[e.algorithm].carrierCount;t++)n.push("operator"+t+"Scaled");i.push(t.replace("/*operator#Scaled*/",n.join(" + ")))}else if(-1!=t.indexOf("// INSERT OPERATOR COMPUTATION HERE"))for(let t=u.operatorCount-1;t>=0;t--)for(const n of qe.operatorSourceTemplate)if(-1!=n.indexOf("/* + operator@Scaled*/")){let s="";for(const i of u.algorithms[e.algorithm].modulatedBy[t])s+=" + operator"+(i-1)+"Scaled";const a=u.feedbacks[e.feedbackType].indices[t];if(a.length>0){s+=" + feedbackMult * (";const e=[];for(const t of a)e.push("operator"+(t-1)+"Output");s+=e.join(" + ")+")"}i.push(n.replace(/\#/g,t+"").replace("/* + operator@Scaled*/",s))}else i.push(n.replace(/\#/g,t+""));else if(-1!=t.indexOf("#"))for(let e=0;e<u.operatorCount;e++)i.push(t.replace(/\#/g,e+""));else i.push(t);const n="return (synth, bufferIndex, roundedSamplesPerTick, tone, instrument) => {"+i.join("\n")+"}";qe.fmSynthFunctionCache[t]=new Function("Config","Synth",n)(u,qe)}return qe.fmSynthFunctionCache[t]}if(0==e.type)return e.isUsingAdvancedLoopControls?qe.loopableChipSynth:qe.chipSynth;if(10==e.type)return qe.chipSynth;if(5==e.type)return qe.harmonicsSynth;if(6==e.type)return qe.pulseWidthSynth;if(7==e.type)return qe.pulseWidthSynth;if(9==e.type)return qe.supersawSynth;if(8==e.type)return qe.pickedStringSynth;if(2==e.type)return qe.noiseSynth;if(3==e.type)return qe.spectrumSynth;if(4==e.type)return qe.drumsetSynth;if(11==e.type)return qe.modSynth;if(12==e.type){const t=e.customAlgorithm.name+"_"+e.customFeedbackType.name;if(null==qe.fm6SynthFunctionCache[t]){const i=[];for(const t of qe.fmSourceTemplate)if(-1!=t.indexOf("// CARRIER OUTPUTS")){const n=[];for(let t=0;t<e.customAlgorithm.carrierCount;t++)n.push("operator"+t+"Scaled");i.push(t.replace("/*operator#Scaled*/",n.join(" + ")))}else if(-1!=t.indexOf("// INSERT OPERATOR COMPUTATION HERE"))for(let t=u.operatorCount+2-1;t>=0;t--)for(const n of qe.operatorSourceTemplate)if(-1!=n.indexOf("/* + operator@Scaled*/")){let s="";for(const i of e.customAlgorithm.modulatedBy[t])s+=" + operator"+(i-1)+"Scaled";const a=e.customFeedbackType.indices[t];if(a.length>0){s+=" + feedbackMult * (";const e=[];for(const t of a)e.push("operator"+(t-1)+"Output");s+=e.join(" + ")+")"}i.push(n.replace(/\#/g,t+"").replace("/* + operator@Scaled*/",s))}else i.push(n.replace(/\#/g,t+""));else if(-1!=t.indexOf("#"))for(let e=0;e<u.operatorCount+2;e++)i.push(t.replace(/\#/g,e+""));else i.push(t);const n="return (synth, bufferIndex, roundedSamplesPerTick, tone, instrument) => {"+i.join("\n")+"}";qe.fm6SynthFunctionCache[t]=new Function("Config","Synth",n)(u,qe)}return qe.fm6SynthFunctionCache[t]}throw new Error("Unrecognized instrument type: "+e.type)}static wrap(e,t){return(e%t+t)%t}static loopableChipSynth(e,t,i,n,s){const a=z(s.effects)&&s.aliases,r=e.tempMonoInstrumentSampleBuffer,o=s.wave,l=s.volumeScale,p=a&&8==s.type?o.length:o.length-1;let u=Math.max(0,Math.min(p,s.chipWaveLoopEnd)),c=Math.max(0,Math.min(u-1,s.chipWaveLoopStart)),h=u-c;h<2&&(c=0,u=p,h=p);const f=s.chipWaveLoopMode,d=s.chipWavePlayBackwards,m=n.specialIntervalExpressionMult*s.unisonSign;1!=s.unisonVoices||0!=s.unisonSpread||s.chord.customInterval||(n.phases[1]=n.phases[0]);let y=n.phaseDeltas[0]*p,v=n.phaseDeltas[1]*p,g=n.directions[0],b=n.directions[1],S=n.chipWaveCompletions[0],w=n.chipWaveCompletions[1];3!==f&&2!==f&&0!==f||(d?(g=-1,b=-1):(g=1,b=1)),0!==f&&1!==f||(S=0,w=0);let k=n.chipWaveCompletionsLastWave[0],q=n.chipWaveCompletionsLastWave[1];const F=1e3,T=+n.phaseDeltaScales[0],M=+n.phaseDeltaScales[1];let P=+n.expression;const x=+n.expressionDelta;let H=qe.wrap(n.phases[0],1)*p,G=qe.wrap(n.phases[1],1)*p,I=0,D=0;if(!a){const e=Math.floor(H),t=Math.floor(G),i=qe.wrap(e,p),n=qe.wrap(t,p),s=H-e,a=G-t;I=+o[i],D=+o[n],I+=(o[qe.wrap(i+1,p)]-I)*s,D+=(o[qe.wrap(n+1,p)]-D)*a}const O=n.noteFilters,C=0|n.noteFilterCount;let W=+n.initialNoteFilterInput1,A=+n.initialNoteFilterInput2;const E=qe.applyFilters,L=t+i;let R=n.chipWavePrevWaves[0],N=n.chipWavePrevWaves[1];for(let e=t;e<L;e++){S>0&&S<F&&S++,w>0&&w<F&&w++;let t=0;H+=y*g,G+=v*b,2===f?(1===g?H>p&&(S<=0&&(k=R,S++),t=1):-1===g&&H<0&&(S<=0&&(k=R,S++),t=1),1===b?G>p&&(w<=0&&(q=N,w++),t=1):-1===g&&G<0&&(w<=0&&(q=N,w++),t=1)):3===f?(1===g?H>u&&(S<=0&&(k=R,S++),t=1):-1===g&&H<c&&(S<=0&&(k=R,S++),t=1),1===b?G>u&&(w<=0&&(q=N,w++),t=1):-1===g&&G<c&&(w<=0&&(q=N,w++),t=1)):0===f?(1===g?H>u&&(H=c+qe.wrap(H-u,h),t=1):-1===g&&H<c&&(H=u-qe.wrap(c-H,h),t=1),1===b?G>u&&(G=c+qe.wrap(G-u,h),t=1):-1===b&&G<c&&(G=u-qe.wrap(c-G,h),t=1)):1===f&&(1===g?H>u&&(H=u-qe.wrap(H-u,h),g=-1,t=1):-1===g&&H<c&&(H=c+qe.wrap(c-H,h),g=1,t=1),1===b?G>u&&(G=u-qe.wrap(G-u,h),b=-1,t=1):-1===b&&G<c&&(G=c+qe.wrap(c-G,h),b=1,t=1));let i=0,n=0,s=0;if(a){i=o[qe.wrap(Math.floor(H),p)],n=o[qe.wrap(Math.floor(G),p)],R=i,N=n;const e=S>0?(F-Math.min(S,F))/F:1,t=w>0?(F-Math.min(w,F))/F:1;s=0,s+=S>0?k*e:i,s+=w>0?q*t:n}else{const e=Math.floor(H),a=Math.floor(G),r=qe.wrap(e,p),l=qe.wrap(a,p);let h=o[r],d=o[l];const T=H-e,M=G-a;if(h+=(o[qe.wrap(r+1,p)]-h)*T,d+=(o[qe.wrap(l+1,p)]-d)*M,(0!==f||0!==c||u!==p)&&0!==t){let e=0,t=0;const i=Math.max(0,H-y*g),n=Math.max(0,G-v*b),s=Math.floor(i),a=Math.floor(n),r=qe.wrap(s,p),l=qe.wrap(a,p);e=o[r],t=o[l],e+=(o[qe.wrap(r+1,p)]-e)*(i-s)*g,t+=(o[qe.wrap(l+1,p)]-t)*(n-a)*b,I=e,D=t}1===f&&0!==t?(i=R,n=N):(i=(h-I)/(y*g),n=(d-D)/(v*b)),R=i,N=n,I=h,D=d;const z=S>0?(F-Math.min(S,F))/F:1,P=w>0?(F-Math.min(w,F))/F:1;s+=S>0?k*z:i,s+=w>0?q*P:n*m}const d=E(s*l,W,A,C,O);A=W,W=s*l,y*=T,v*=M;const z=d*P;P+=x,r[e]+=z}n.phases[0]=H/p,n.phases[1]=G/p,n.phaseDeltas[0]=y/p,n.phaseDeltas[1]=v/p,n.directions[0]=g,n.directions[1]=b,n.chipWaveCompletions[0]=S,n.chipWaveCompletions[1]=w,n.chipWavePrevWaves[0]=R,n.chipWavePrevWaves[1]=N,n.chipWaveCompletionsLastWave[0]=k,n.chipWaveCompletionsLastWave[1]=q,n.expression=P,e.sanitizeFilters(O),n.initialNoteFilterInput1=W,n.initialNoteFilterInput2=A}static chipSynth(e,t,i,n,s){const a=z(s.effects)&&s.aliases,r=e.tempMonoInstrumentSampleBuffer,o=s.wave,l=s.volumeScale,p=a&&8==s.type?o.length:o.length-1,u=n.specialIntervalExpressionMult*s.unisonSign;1!=s.unisonVoices||0!=s.unisonSpread||s.chord.customInterval||(n.phases[1]=n.phases[0]);let c=n.phaseDeltas[0]*p,h=n.phaseDeltas[1]*p;const f=+n.phaseDeltaScales[0],d=+n.phaseDeltaScales[1];let m=+n.expression;const y=+n.expressionDelta;let v=n.phases[0]%1*p,g=n.phases[1]%1*p;const b=n.noteFilters,S=0|n.noteFilterCount;let w=+n.initialNoteFilterInput1,k=+n.initialNoteFilterInput2;const q=qe.applyFilters;let F=0,T=0;if(!a){const e=0|v,t=0|g,i=e%p,n=t%p,s=v-e,a=g-t;F=+o[i],T=+o[n],F+=(o[i+1]-F)*s,T+=(o[n+1]-T)*a}const M=t+i;for(let e=t;e<M;e++){let t,i,n;if(v+=c,g+=h,a)t=o[(0|v)%p],i=o[(0|g)%p],n=t+i;else{const e=0|v,s=0|g,a=e%p,r=s%p;let l=o[a],f=o[r];const d=v-e,m=g-s;l+=(o[a+1]-l)*d,f+=(o[r+1]-f)*m,t=(l-F)/c,i=(f-T)/h,F=l,T=f,n=t+i*u}const s=q(n*l,w,k,S,b);k=w,w=n*l,c*=f,h*=d;const M=s*m;m+=y,r[e]+=M}n.phases[0]=v/p,n.phases[1]=g/p,n.phaseDeltas[0]=c/p,n.phaseDeltas[1]=h/p,n.expression=m,e.sanitizeFilters(b),n.initialNoteFilterInput1=w,n.initialNoteFilterInput2=k}static harmonicsSynth(e,t,i,n,s){const a=e.tempMonoInstrumentSampleBuffer,r=s.wave,o=r.length-1,l=n.specialIntervalExpressionMult*s.unisonSign;1!=s.unisonVoices||0!=s.unisonSpread||s.chord.customInterval||(n.phases[1]=n.phases[0]);let p=n.phaseDeltas[0]*o,u=n.phaseDeltas[1]*o;const c=+n.phaseDeltaScales[0],h=+n.phaseDeltaScales[1];let f=+n.expression;const d=+n.expressionDelta;let m=n.phases[0]%1*o,y=n.phases[1]%1*o;const v=n.noteFilters,g=0|n.noteFilterCount;let b=+n.initialNoteFilterInput1,S=+n.initialNoteFilterInput2;const w=qe.applyFilters,k=0|m,q=0|y,F=k%o,T=q%o,M=m-k,z=y-q;let P=+r[F],x=+r[T];P+=(r[F+1]-P)*M,x+=(r[T+1]-x)*z;const H=t+i;for(let e=t;e<H;e++){m+=p,y+=u;const t=0|m,i=0|y,n=t%o,s=i%o;let k=r[n],q=r[s];const F=m-t,T=y-i;k+=(r[n+1]-k)*F,q+=(r[s+1]-q)*T;const M=(k-P)/p,z=(q-x)/u;P=k,x=q;const H=M+z*l,G=w(H,b,S,g,v);S=b,b=H,p*=c,u*=h;const I=G*f;f+=d,a[e]+=I}n.phases[0]=m/o,n.phases[1]=y/o,n.phaseDeltas[0]=p/o,n.phaseDeltas[1]=u/o,n.expression=f,e.sanitizeFilters(v),n.initialNoteFilterInput1=b,n.initialNoteFilterInput2=S}static pickedStringSynth(e,t,i,n,s){const a=s.unisonVoices;let r=qe.pickedStringFunctionCache[a];if(null==r){let e="return (synth, bufferIndex, runLength, tone, instrumentState) => {";e+="\n\t\t\t\tconst Config = beepbox.Config;\n\t\t\t\tconst Synth = beepbox.Synth;\n\t\t\t\tconst data = synth.tempMonoInstrumentSampleBuffer;\n\t\t\t\t\n\t\t\t\tlet pickedString# = tone.pickedStrings[#];\n\t\t\t\tlet allPassSample# = +pickedString#.allPassSample;\n\t\t\t\tlet allPassPrevInput# = +pickedString#.allPassPrevInput;\n\t\t\t\tlet sustainFilterSample# = +pickedString#.sustainFilterSample;\n\t\t\t\tlet sustainFilterPrevOutput2# = +pickedString#.sustainFilterPrevOutput2;\n\t\t\t\tlet sustainFilterPrevInput1# = +pickedString#.sustainFilterPrevInput1;\n\t\t\t\tlet sustainFilterPrevInput2# = +pickedString#.sustainFilterPrevInput2;\n\t\t\t\tlet fractionalDelaySample# = +pickedString#.fractionalDelaySample;\n\t\t\t\tconst delayLine# = pickedString#.delayLine;\n\t\t\t\tconst delayBufferMask# = (delayLine#.length - 1) >> 0;\n\t\t\t\tlet delayIndex# = pickedString#.delayIndex|0;\n\t\t\t\tdelayIndex# = (delayIndex# & delayBufferMask#) + delayLine#.length;\n\t\t\t\tlet delayLength# = +pickedString#.prevDelayLength;\n\t\t\t\tconst delayLengthDelta# = +pickedString#.delayLengthDelta;\n\t\t\t\tlet allPassG# = +pickedString#.allPassG;\n\t\t\t\tlet sustainFilterA1# = +pickedString#.sustainFilterA1;\n\t\t\t\tlet sustainFilterA2# = +pickedString#.sustainFilterA2;\n\t\t\t\tlet sustainFilterB0# = +pickedString#.sustainFilterB0;\n\t\t\t\tlet sustainFilterB1# = +pickedString#.sustainFilterB1;\n\t\t\t\tlet sustainFilterB2# = +pickedString#.sustainFilterB2;\n\t\t\t\tconst allPassGDelta# = +pickedString#.allPassGDelta;\n\t\t\t\tconst sustainFilterA1Delta# = +pickedString#.sustainFilterA1Delta;\n\t\t\t\tconst sustainFilterA2Delta# = +pickedString#.sustainFilterA2Delta;\n\t\t\t\tconst sustainFilterB0Delta# = +pickedString#.sustainFilterB0Delta;\n\t\t\t\tconst sustainFilterB1Delta# = +pickedString#.sustainFilterB1Delta;\n\t\t\t\tconst sustainFilterB2Delta# = +pickedString#.sustainFilterB2Delta;\n\t\t\t\t\n\t\t\t\tlet expression = +tone.expression;\n\t\t\t\tconst expressionDelta = +tone.expressionDelta;\n\t\t\t\t\n\t\t\t\tconst unisonSign = tone.specialIntervalExpressionMult * instrumentState.unisonSign;\n\t\t\t\tconst delayResetOffset# = pickedString#.delayResetOffset|0;\n\t\t\t\t\n\t\t\t\tconst filters = tone.noteFilters;\n\t\t\t\tconst filterCount = tone.noteFilterCount|0;\n\t\t\t\tlet initialFilterInput1 = +tone.initialNoteFilterInput1;\n\t\t\t\tlet initialFilterInput2 = +tone.initialNoteFilterInput2;\n\t\t\t\tconst applyFilters = Synth.applyFilters;\n\t\t\t\t\n\t\t\t\tconst stopIndex = bufferIndex + runLength;\n\t\t\t\tfor (let sampleIndex = bufferIndex; sampleIndex < stopIndex; sampleIndex++) {\n\t\t\t\t\tconst targetSampleTime# = delayIndex# - delayLength#;\n\t\t\t\t\tconst lowerIndex# = (targetSampleTime# + 0.125) | 0; // Offset to improve stability of all-pass filter.\n\t\t\t\t\tconst upperIndex# = lowerIndex# + 1;\n\t\t\t\t\tconst fractionalDelay# = upperIndex# - targetSampleTime#;\n\t\t\t\t\tconst fractionalDelayG# = (1.0 - fractionalDelay#) / (1.0 + fractionalDelay#); // Inlined version of FilterCoefficients.prototype.allPass1stOrderFractionalDelay\n\t\t\t\t\tconst prevInput# = delayLine#[lowerIndex# & delayBufferMask#];\n\t\t\t\t\tconst input# = delayLine#[upperIndex# & delayBufferMask#];\n\t\t\t\t\tfractionalDelaySample# = fractionalDelayG# * input# + prevInput# - fractionalDelayG# * fractionalDelaySample#;\n\t\t\t\t\t\n\t\t\t\t\tallPassSample# = fractionalDelaySample# * allPassG# + allPassPrevInput# - allPassG# * allPassSample#;\n\t\t\t\t\tallPassPrevInput# = fractionalDelaySample#;\n\t\t\t\t\t\n\t\t\t\t\tconst sustainFilterPrevOutput1# = sustainFilterSample#;\n\t\t\t\t\tsustainFilterSample# = sustainFilterB0# * allPassSample# + sustainFilterB1# * sustainFilterPrevInput1# + sustainFilterB2# * sustainFilterPrevInput2# - sustainFilterA1# * sustainFilterSample# - sustainFilterA2# * sustainFilterPrevOutput2#;\n\t\t\t\t\tsustainFilterPrevOutput2# = sustainFilterPrevOutput1#;\n\t\t\t\t\tsustainFilterPrevInput2# = sustainFilterPrevInput1#;\n\t\t\t\t\tsustainFilterPrevInput1# = allPassSample#;\n\t\t\t\t\t\n\t\t\t\t\tdelayLine#[delayIndex# & delayBufferMask#] += sustainFilterSample#;\n\t\t\t\t\tdelayLine#[(delayIndex# + delayResetOffset#) & delayBufferMask#] = 0.0;\n\t\t\t\t\tdelayIndex#++;\n\t\t\t\t\t\n\t\t\t\t\tconst inputSample = (";const t=[];for(let e=0;e<a;e++)t.push("fractionalDelaySample"+e+(1==e?" * unisonSign":""));e+=t.join(" + "),e+=") * expression;\n\t\t\t\t\tconst sample = applyFilters(inputSample, initialFilterInput1, initialFilterInput2, filterCount, filters);\n\t\t\t\t\tinitialFilterInput2 = initialFilterInput1;\n\t\t\t\t\tinitialFilterInput1 = inputSample;\n\t\t\t\t\tdata[sampleIndex] += sample;\n\t\t\t\t\t\n\t\t\t\t\texpression += expressionDelta;\n\t\t\t\t\tdelayLength# += delayLengthDelta#;\n\t\t\t\t\tallPassG# += allPassGDelta#;\n\t\t\t\t\tsustainFilterA1# += sustainFilterA1Delta#;\n\t\t\t\t\tsustainFilterA2# += sustainFilterA2Delta#;\n\t\t\t\t\tsustainFilterB0# += sustainFilterB0Delta#;\n\t\t\t\t\tsustainFilterB1# += sustainFilterB1Delta#;\n\t\t\t\t\tsustainFilterB2# += sustainFilterB2Delta#;\n\t\t\t\t}\n\t\t\t\t\n\t\t\t\t// Avoid persistent denormal or NaN values in the delay buffers and filter history.\n\t\t\t\tconst epsilon = (1.0e-24);\n\t\t\t\tif (!Number.isFinite(allPassSample#) || Math.abs(allPassSample#) < epsilon) allPassSample# = 0.0;\n\t\t\t\tif (!Number.isFinite(allPassPrevInput#) || Math.abs(allPassPrevInput#) < epsilon) allPassPrevInput# = 0.0;\n\t\t\t\tif (!Number.isFinite(sustainFilterSample#) || Math.abs(sustainFilterSample#) < epsilon) sustainFilterSample# = 0.0;\n\t\t\t\tif (!Number.isFinite(sustainFilterPrevOutput2#) || Math.abs(sustainFilterPrevOutput2#) < epsilon) sustainFilterPrevOutput2# = 0.0;\n\t\t\t\tif (!Number.isFinite(sustainFilterPrevInput1#) || Math.abs(sustainFilterPrevInput1#) < epsilon) sustainFilterPrevInput1# = 0.0;\n\t\t\t\tif (!Number.isFinite(sustainFilterPrevInput2#) || Math.abs(sustainFilterPrevInput2#) < epsilon) sustainFilterPrevInput2# = 0.0;\n\t\t\t\tif (!Number.isFinite(fractionalDelaySample#) || Math.abs(fractionalDelaySample#) < epsilon) fractionalDelaySample# = 0.0;\n\t\t\t\tpickedString#.allPassSample = allPassSample#;\n\t\t\t\tpickedString#.allPassPrevInput = allPassPrevInput#;\n\t\t\t\tpickedString#.sustainFilterSample = sustainFilterSample#;\n\t\t\t\tpickedString#.sustainFilterPrevOutput2 = sustainFilterPrevOutput2#;\n\t\t\t\tpickedString#.sustainFilterPrevInput1 = sustainFilterPrevInput1#;\n\t\t\t\tpickedString#.sustainFilterPrevInput2 = sustainFilterPrevInput2#;\n\t\t\t\tpickedString#.fractionalDelaySample = fractionalDelaySample#;\n\t\t\t\tpickedString#.delayIndex = delayIndex#;\n\t\t\t\tpickedString#.prevDelayLength = delayLength#;\n\t\t\t\tpickedString#.allPassG = allPassG#;\n\t\t\t\tpickedString#.sustainFilterA1 = sustainFilterA1#;\n\t\t\t\tpickedString#.sustainFilterA2 = sustainFilterA2#;\n\t\t\t\tpickedString#.sustainFilterB0 = sustainFilterB0#;\n\t\t\t\tpickedString#.sustainFilterB1 = sustainFilterB1#;\n\t\t\t\tpickedString#.sustainFilterB2 = sustainFilterB2#;\n\t\t\t\t\n\t\t\t\ttone.expression = expression;\n\t\t\t\t\n\t\t\t\tsynth.sanitizeFilters(filters);\n\t\t\t\ttone.initialNoteFilterInput1 = initialFilterInput1;\n\t\t\t\ttone.initialNoteFilterInput2 = initialFilterInput2;\n\t\t\t}",e=e.replace(/^.*\#.*$/gm,(e=>{const t=[];for(let i=0;i<a;i++)t.push(e.replace(/\#/g,String(i)));return t.join("\n")})),r=new Function("Config","Synth",e)(u,qe),qe.pickedStringFunctionCache[a]=r}r(e,t,i,n,s)}static effectsSynth(e,t,i,n,s,a){const r=z(a.effects),o=P(a.effects),l=a.eqFilterCount>0,p=x(a.effects),c=H(a.effects),h=G(a.effects),f=I(a.effects);let d=0;r&&(d|=1),d<<=1,o&&(d|=1),d<<=1,l&&(d|=1),d<<=1,p&&(d|=1),d<<=1,c&&(d|=1),d<<=1,h&&(d|=1),d<<=1,f&&(d|=1);let m=qe.effectsFunctionCache[d];if(null==m){let e="return (synth, outputDataL, outputDataR, bufferIndex, runLength, instrumentState) => {";const t=c||f||h;e+="\n\t\t\t\tconst tempMonoInstrumentSampleBuffer = synth.tempMonoInstrumentSampleBuffer;\n\t\t\t\t\n\t\t\t\tlet mixVolume = +instrumentState.mixVolume;\n\t\t\t\tconst mixVolumeDelta = +instrumentState.mixVolumeDelta;",t&&(e+="\n\t\t\t\t\n\t\t\t\tlet delayInputMult = +instrumentState.delayInputMult;\n\t\t\t\tconst delayInputMultDelta = +instrumentState.delayInputMultDelta;"),r&&(e+="\n\t\t\t\t\n\t\t\t\tconst distortionBaseVolume = +Config.distortionBaseVolume;\n\t\t\t\tlet distortion = instrumentState.distortion;\n\t\t\t\tconst distortionDelta = instrumentState.distortionDelta;\n\t\t\t\tlet distortionDrive = instrumentState.distortionDrive;\n\t\t\t\tconst distortionDriveDelta = instrumentState.distortionDriveDelta;\n\t\t\t\tconst distortionFractionalResolution = 4.0;\n\t\t\t\tconst distortionOversampleCompensation = distortionBaseVolume / distortionFractionalResolution;\n\t\t\t\tconst distortionFractionalDelay1 = 1.0 / distortionFractionalResolution;\n\t\t\t\tconst distortionFractionalDelay2 = 2.0 / distortionFractionalResolution;\n\t\t\t\tconst distortionFractionalDelay3 = 3.0 / distortionFractionalResolution;\n\t\t\t\tconst distortionFractionalDelayG1 = (1.0 - distortionFractionalDelay1) / (1.0 + distortionFractionalDelay1); // Inlined version of FilterCoefficients.prototype.allPass1stOrderFractionalDelay\n\t\t\t\tconst distortionFractionalDelayG2 = (1.0 - distortionFractionalDelay2) / (1.0 + distortionFractionalDelay2); // Inlined version of FilterCoefficients.prototype.allPass1stOrderFractionalDelay\n\t\t\t\tconst distortionFractionalDelayG3 = (1.0 - distortionFractionalDelay3) / (1.0 + distortionFractionalDelay3); // Inlined version of FilterCoefficients.prototype.allPass1stOrderFractionalDelay\n\t\t\t\tconst distortionNextOutputWeight1 = Math.cos(Math.PI * distortionFractionalDelay1) * 0.5 + 0.5;\n\t\t\t\tconst distortionNextOutputWeight2 = Math.cos(Math.PI * distortionFractionalDelay2) * 0.5 + 0.5;\n\t\t\t\tconst distortionNextOutputWeight3 = Math.cos(Math.PI * distortionFractionalDelay3) * 0.5 + 0.5;\n\t\t\t\tconst distortionPrevOutputWeight1 = 1.0 - distortionNextOutputWeight1;\n\t\t\t\tconst distortionPrevOutputWeight2 = 1.0 - distortionNextOutputWeight2;\n\t\t\t\tconst distortionPrevOutputWeight3 = 1.0 - distortionNextOutputWeight3;\n\t\t\t\t\n\t\t\t\tlet distortionFractionalInput1 = +instrumentState.distortionFractionalInput1;\n\t\t\t\tlet distortionFractionalInput2 = +instrumentState.distortionFractionalInput2;\n\t\t\t\tlet distortionFractionalInput3 = +instrumentState.distortionFractionalInput3;\n\t\t\t\tlet distortionPrevInput = +instrumentState.distortionPrevInput;\n\t\t\t\tlet distortionNextOutput = +instrumentState.distortionNextOutput;"),o&&(e+="\n\t\t\t\t\n\t\t\t\tlet bitcrusherPrevInput = +instrumentState.bitcrusherPrevInput;\n\t\t\t\tlet bitcrusherCurrentOutput = +instrumentState.bitcrusherCurrentOutput;\n\t\t\t\tlet bitcrusherPhase = +instrumentState.bitcrusherPhase;\n\t\t\t\tlet bitcrusherPhaseDelta = +instrumentState.bitcrusherPhaseDelta;\n\t\t\t\tconst bitcrusherPhaseDeltaScale = +instrumentState.bitcrusherPhaseDeltaScale;\n\t\t\t\tlet bitcrusherScale = +instrumentState.bitcrusherScale;\n\t\t\t\tconst bitcrusherScaleScale = +instrumentState.bitcrusherScaleScale;\n\t\t\t\tlet bitcrusherFoldLevel = +instrumentState.bitcrusherFoldLevel;\n\t\t\t\tconst bitcrusherFoldLevelScale = +instrumentState.bitcrusherFoldLevelScale;"),l&&(e+="\n\t\t\t\t\n\t\t\t\tlet filters = instrumentState.eqFilters;\n\t\t\t\tconst filterCount = instrumentState.eqFilterCount|0;\n\t\t\t\tlet initialFilterInput1 = +instrumentState.initialEqFilterInput1;\n\t\t\t\tlet initialFilterInput2 = +instrumentState.initialEqFilterInput2;\n\t\t\t\tconst applyFilters = Synth.applyFilters;"),e+="\n\t\t\t\t\n\t\t\t\tlet eqFilterVolume = +instrumentState.eqFilterVolume;\n\t\t\t\tconst eqFilterVolumeDelta = +instrumentState.eqFilterVolumeDelta;",p&&(e+="\n\t\t\t\t\n\t\t\t\tconst panningMask = synth.panningDelayBufferMask >>> 0;\n\t\t\t\tconst panningDelayLine = instrumentState.panningDelayLine;\n\t\t\t\tlet panningDelayPos = instrumentState.panningDelayPos & panningMask;\n\t\t\t\tlet   panningVolumeL      = +instrumentState.panningVolumeL;\n\t\t\t\tlet   panningVolumeR      = +instrumentState.panningVolumeR;\n\t\t\t\tconst panningVolumeDeltaL = +instrumentState.panningVolumeDeltaL;\n\t\t\t\tconst panningVolumeDeltaR = +instrumentState.panningVolumeDeltaR;\n\t\t\t\tlet   panningOffsetL      = +instrumentState.panningOffsetL;\n\t\t\t\tlet   panningOffsetR      = +instrumentState.panningOffsetR;\n\t\t\t\tconst panningOffsetDeltaL = 1.0 - instrumentState.panningOffsetDeltaL;\n\t\t\t\tconst panningOffsetDeltaR = 1.0 - instrumentState.panningOffsetDeltaR;"),c&&(e+="\n\t\t\t\t\n\t\t\t\tconst chorusMask = synth.chorusDelayBufferMask >>> 0;\n\t\t\t\tconst chorusDelayLineL = instrumentState.chorusDelayLineL;\n\t\t\t\tconst chorusDelayLineR = instrumentState.chorusDelayLineR;\n\t\t\t\tinstrumentState.chorusDelayLineDirty = true;\n\t\t\t\tlet chorusDelayPos = instrumentState.chorusDelayPos & chorusMask;\n\t\t\t\t\n\t\t\t\tlet chorusVoiceMult = +instrumentState.chorusVoiceMult;\n\t\t\t\tconst chorusVoiceMultDelta = +instrumentState.chorusVoiceMultDelta;\n\t\t\t\tlet chorusCombinedMult = +instrumentState.chorusCombinedMult;\n\t\t\t\tconst chorusCombinedMultDelta = +instrumentState.chorusCombinedMultDelta;\n\t\t\t\t\n\t\t\t\tconst chorusDuration = +beepbox.Config.chorusPeriodSeconds;\n\t\t\t\tconst chorusAngle = Math.PI * 2.0 / (chorusDuration * synth.samplesPerSecond);\n\t\t\t\tconst chorusRange = synth.samplesPerSecond * beepbox.Config.chorusDelayRange;\n\t\t\t\tconst chorusOffset0 = synth.chorusDelayBufferSize - beepbox.Config.chorusDelayOffsets[0][0] * chorusRange;\n\t\t\t\tconst chorusOffset1 = synth.chorusDelayBufferSize - beepbox.Config.chorusDelayOffsets[0][1] * chorusRange;\n\t\t\t\tconst chorusOffset2 = synth.chorusDelayBufferSize - beepbox.Config.chorusDelayOffsets[0][2] * chorusRange;\n\t\t\t\tconst chorusOffset3 = synth.chorusDelayBufferSize - beepbox.Config.chorusDelayOffsets[1][0] * chorusRange;\n\t\t\t\tconst chorusOffset4 = synth.chorusDelayBufferSize - beepbox.Config.chorusDelayOffsets[1][1] * chorusRange;\n\t\t\t\tconst chorusOffset5 = synth.chorusDelayBufferSize - beepbox.Config.chorusDelayOffsets[1][2] * chorusRange;\n\t\t\t\tlet chorusPhase = instrumentState.chorusPhase % (Math.PI * 2.0);\n\t\t\t\tlet chorusTap0Index = chorusDelayPos + chorusOffset0 - chorusRange * Math.sin(chorusPhase + beepbox.Config.chorusPhaseOffsets[0][0]);\n\t\t\t\tlet chorusTap1Index = chorusDelayPos + chorusOffset1 - chorusRange * Math.sin(chorusPhase + beepbox.Config.chorusPhaseOffsets[0][1]);\n\t\t\t\tlet chorusTap2Index = chorusDelayPos + chorusOffset2 - chorusRange * Math.sin(chorusPhase + beepbox.Config.chorusPhaseOffsets[0][2]);\n\t\t\t\tlet chorusTap3Index = chorusDelayPos + chorusOffset3 - chorusRange * Math.sin(chorusPhase + beepbox.Config.chorusPhaseOffsets[1][0]);\n\t\t\t\tlet chorusTap4Index = chorusDelayPos + chorusOffset4 - chorusRange * Math.sin(chorusPhase + beepbox.Config.chorusPhaseOffsets[1][1]);\n\t\t\t\tlet chorusTap5Index = chorusDelayPos + chorusOffset5 - chorusRange * Math.sin(chorusPhase + beepbox.Config.chorusPhaseOffsets[1][2]);\n\t\t\t\tchorusPhase += chorusAngle * runLength;\n\t\t\t\tconst chorusTap0End = chorusDelayPos + chorusOffset0 - chorusRange * Math.sin(chorusPhase + beepbox.Config.chorusPhaseOffsets[0][0]) + runLength;\n\t\t\t\tconst chorusTap1End = chorusDelayPos + chorusOffset1 - chorusRange * Math.sin(chorusPhase + beepbox.Config.chorusPhaseOffsets[0][1]) + runLength;\n\t\t\t\tconst chorusTap2End = chorusDelayPos + chorusOffset2 - chorusRange * Math.sin(chorusPhase + beepbox.Config.chorusPhaseOffsets[0][2]) + runLength;\n\t\t\t\tconst chorusTap3End = chorusDelayPos + chorusOffset3 - chorusRange * Math.sin(chorusPhase + beepbox.Config.chorusPhaseOffsets[1][0]) + runLength;\n\t\t\t\tconst chorusTap4End = chorusDelayPos + chorusOffset4 - chorusRange * Math.sin(chorusPhase + beepbox.Config.chorusPhaseOffsets[1][1]) + runLength;\n\t\t\t\tconst chorusTap5End = chorusDelayPos + chorusOffset5 - chorusRange * Math.sin(chorusPhase + beepbox.Config.chorusPhaseOffsets[1][2]) + runLength;\n\t\t\t\tconst chorusTap0Delta = (chorusTap0End - chorusTap0Index) / runLength;\n\t\t\t\tconst chorusTap1Delta = (chorusTap1End - chorusTap1Index) / runLength;\n\t\t\t\tconst chorusTap2Delta = (chorusTap2End - chorusTap2Index) / runLength;\n\t\t\t\tconst chorusTap3Delta = (chorusTap3End - chorusTap3Index) / runLength;\n\t\t\t\tconst chorusTap4Delta = (chorusTap4End - chorusTap4Index) / runLength;\n\t\t\t\tconst chorusTap5Delta = (chorusTap5End - chorusTap5Index) / runLength;"),h&&(e+="\n\t\t\t\t\n\t\t\t\tlet echoMult = +instrumentState.echoMult;\n\t\t\t\tconst echoMultDelta = +instrumentState.echoMultDelta;\n\t\t\t\t\n\t\t\t\tconst echoDelayLineL = instrumentState.echoDelayLineL;\n\t\t\t\tconst echoDelayLineR = instrumentState.echoDelayLineR;\n\t\t\t\tconst echoMask = (echoDelayLineL.length - 1) >>> 0;\n\t\t\t\tinstrumentState.echoDelayLineDirty = true;\n\t\t\t\t\n\t\t\t\tlet echoDelayPos = instrumentState.echoDelayPos & echoMask;\n\t\t\t\tconst echoDelayOffsetStart = (echoDelayLineL.length - instrumentState.echoDelayOffsetStart) & echoMask;\n\t\t\t\tconst echoDelayOffsetEnd   = (echoDelayLineL.length - instrumentState.echoDelayOffsetEnd) & echoMask;\n\t\t\t\tlet echoDelayOffsetRatio = +instrumentState.echoDelayOffsetRatio;\n\t\t\t\tconst echoDelayOffsetRatioDelta = +instrumentState.echoDelayOffsetRatioDelta;\n\t\t\t\t\n\t\t\t\tconst echoShelfA1 = +instrumentState.echoShelfA1;\n\t\t\t\tconst echoShelfB0 = +instrumentState.echoShelfB0;\n\t\t\t\tconst echoShelfB1 = +instrumentState.echoShelfB1;\n\t\t\t\tlet echoShelfSampleL = +instrumentState.echoShelfSampleL;\n\t\t\t\tlet echoShelfSampleR = +instrumentState.echoShelfSampleR;\n\t\t\t\tlet echoShelfPrevInputL = +instrumentState.echoShelfPrevInputL;\n\t\t\t\tlet echoShelfPrevInputR = +instrumentState.echoShelfPrevInputR;"),f&&(e+="\n\t\t\t\t\n\t\t\t\tconst reverbMask = Config.reverbDelayBufferMask >>> 0; //TODO: Dynamic reverb buffer size.\n\t\t\t\tconst reverbDelayLine = instrumentState.reverbDelayLine;\n\t\t\t\tinstrumentState.reverbDelayLineDirty = true;\n\t\t\t\tlet reverbDelayPos = instrumentState.reverbDelayPos & reverbMask;\n\t\t\t\t\n\t\t\t\tlet reverb = +instrumentState.reverbMult;\n\t\t\t\tconst reverbDelta = +instrumentState.reverbMultDelta;\n\t\t\t\t\n\t\t\t\tconst reverbShelfA1 = +instrumentState.reverbShelfA1;\n\t\t\t\tconst reverbShelfB0 = +instrumentState.reverbShelfB0;\n\t\t\t\tconst reverbShelfB1 = +instrumentState.reverbShelfB1;\n\t\t\t\tlet reverbShelfSample0 = +instrumentState.reverbShelfSample0;\n\t\t\t\tlet reverbShelfSample1 = +instrumentState.reverbShelfSample1;\n\t\t\t\tlet reverbShelfSample2 = +instrumentState.reverbShelfSample2;\n\t\t\t\tlet reverbShelfSample3 = +instrumentState.reverbShelfSample3;\n\t\t\t\tlet reverbShelfPrevInput0 = +instrumentState.reverbShelfPrevInput0;\n\t\t\t\tlet reverbShelfPrevInput1 = +instrumentState.reverbShelfPrevInput1;\n\t\t\t\tlet reverbShelfPrevInput2 = +instrumentState.reverbShelfPrevInput2;\n\t\t\t\tlet reverbShelfPrevInput3 = +instrumentState.reverbShelfPrevInput3;"),e+="\n\t\t\t\t\n\t\t\t\tconst stopIndex = bufferIndex + runLength;\n\t\t\t\tfor (let sampleIndex = bufferIndex; sampleIndex < stopIndex; sampleIndex++) {\n\t\t\t\t\tlet sample = tempMonoInstrumentSampleBuffer[sampleIndex];\n\t\t\t\t\ttempMonoInstrumentSampleBuffer[sampleIndex] = 0.0;",r&&(e+="\n\t\t\t\t\t\n\t\t\t\t\tconst distortionReverse = 1.0 - distortion;\n\t\t\t\t\tconst distortionNextInput = sample * distortionDrive;\n\t\t\t\t\tsample = distortionNextOutput;\n\t\t\t\t\tdistortionNextOutput = distortionNextInput / (distortionReverse * Math.abs(distortionNextInput) + distortion);\n\t\t\t\t\tdistortionFractionalInput1 = distortionFractionalDelayG1 * distortionNextInput + distortionPrevInput - distortionFractionalDelayG1 * distortionFractionalInput1;\n\t\t\t\t\tdistortionFractionalInput2 = distortionFractionalDelayG2 * distortionNextInput + distortionPrevInput - distortionFractionalDelayG2 * distortionFractionalInput2;\n\t\t\t\t\tdistortionFractionalInput3 = distortionFractionalDelayG3 * distortionNextInput + distortionPrevInput - distortionFractionalDelayG3 * distortionFractionalInput3;\n\t\t\t\t\tconst distortionOutput1 = distortionFractionalInput1 / (distortionReverse * Math.abs(distortionFractionalInput1) + distortion);\n\t\t\t\t\tconst distortionOutput2 = distortionFractionalInput2 / (distortionReverse * Math.abs(distortionFractionalInput2) + distortion);\n\t\t\t\t\tconst distortionOutput3 = distortionFractionalInput3 / (distortionReverse * Math.abs(distortionFractionalInput3) + distortion);\n\t\t\t\t\tdistortionNextOutput += distortionOutput1 * distortionNextOutputWeight1 + distortionOutput2 * distortionNextOutputWeight2 + distortionOutput3 * distortionNextOutputWeight3;\n\t\t\t\t\tsample += distortionOutput1 * distortionPrevOutputWeight1 + distortionOutput2 * distortionPrevOutputWeight2 + distortionOutput3 * distortionPrevOutputWeight3;\n\t\t\t\t\tsample *= distortionOversampleCompensation;\n\t\t\t\t\tdistortionPrevInput = distortionNextInput;\n\t\t\t\t\tdistortion += distortionDelta;\n\t\t\t\t\tdistortionDrive += distortionDriveDelta;"),o&&(e+="\n\t\t\t\t\t\n\t\t\t\t\tbitcrusherPhase += bitcrusherPhaseDelta;\n\t\t\t\t\tif (bitcrusherPhase < 1.0) {\n\t\t\t\t\t\tbitcrusherPrevInput = sample;\n\t\t\t\t\t\tsample = bitcrusherCurrentOutput;\n\t\t\t\t\t} else {\n\t\t\t\t\t\tbitcrusherPhase = bitcrusherPhase % 1.0;\n\t\t\t\t\t\tconst ratio = bitcrusherPhase / bitcrusherPhaseDelta;\n\t\t\t\t\t\t\n\t\t\t\t\t\tconst lerpedInput = sample + (bitcrusherPrevInput - sample) * ratio;\n\t\t\t\t\t\tbitcrusherPrevInput = sample;\n\t\t\t\t\t\t\n\t\t\t\t\t\tconst bitcrusherWrapLevel = bitcrusherFoldLevel * 4.0;\n\t\t\t\t\t\tconst wrappedSample = (((lerpedInput + bitcrusherFoldLevel) % bitcrusherWrapLevel) + bitcrusherWrapLevel) % bitcrusherWrapLevel;\n\t\t\t\t\t\tconst foldedSample = bitcrusherFoldLevel - Math.abs(bitcrusherFoldLevel * 2.0 - wrappedSample);\n\t\t\t\t\t\tconst scaledSample = foldedSample / bitcrusherScale;\n\t\t\t\t\t\tconst oldValue = bitcrusherCurrentOutput;\n\t\t\t\t\t\tconst newValue = (((scaledSample > 0 ? scaledSample + 1 : scaledSample)|0)-.5) * bitcrusherScale;\n\t\t\t\t\t\t\n\t\t\t\t\t\tsample = oldValue + (newValue - oldValue) * ratio;\n\t\t\t\t\t\tbitcrusherCurrentOutput = newValue;\n\t\t\t\t\t}\n\t\t\t\t\tbitcrusherPhaseDelta *= bitcrusherPhaseDeltaScale;\n\t\t\t\t\tbitcrusherScale *= bitcrusherScaleScale;\n\t\t\t\t\tbitcrusherFoldLevel *= bitcrusherFoldLevelScale;"),l&&(e+="\n\t\t\t\t\t\n\t\t\t\t\tconst inputSample = sample;\n\t\t\t\t\tsample = applyFilters(inputSample, initialFilterInput1, initialFilterInput2, filterCount, filters);\n\t\t\t\t\tinitialFilterInput2 = initialFilterInput1;\n\t\t\t\t\tinitialFilterInput1 = inputSample;"),e+="\n\t\t\t\t\t\n\t\t\t\t\tsample *= eqFilterVolume;\n\t\t\t\t\teqFilterVolume += eqFilterVolumeDelta;",e+=p?"\n\t\t\t\t\t\n\t\t\t\t\tpanningDelayLine[panningDelayPos] = sample;\n\t\t\t\t\tconst panningRatioL  = panningOffsetL % 1;\n\t\t\t\t\tconst panningRatioR  = panningOffsetR % 1;\n\t\t\t\t\tconst panningTapLA   = panningDelayLine[(panningOffsetL) & panningMask];\n\t\t\t\t\tconst panningTapLB   = panningDelayLine[(panningOffsetL + 1) & panningMask];\n\t\t\t\t\tconst panningTapRA   = panningDelayLine[(panningOffsetR) & panningMask];\n\t\t\t\t\tconst panningTapRB   = panningDelayLine[(panningOffsetR + 1) & panningMask];\n\t\t\t\t\tconst panningTapL    = panningTapLA + (panningTapLB - panningTapLA) * panningRatioL;\n\t\t\t\t\tconst panningTapR    = panningTapRA + (panningTapRB - panningTapRA) * panningRatioR;\n\t\t\t\t\tlet sampleL = panningTapL * panningVolumeL;\n\t\t\t\t\tlet sampleR = panningTapR * panningVolumeR;\n\t\t\t\t\tpanningDelayPos = (panningDelayPos + 1) & panningMask;\n\t\t\t\t\tpanningVolumeL += panningVolumeDeltaL;\n\t\t\t\t\tpanningVolumeR += panningVolumeDeltaR;\n\t\t\t\t\tpanningOffsetL += panningOffsetDeltaL;\n\t\t\t\t\tpanningOffsetR += panningOffsetDeltaR;":"\n\t\t\t\t\t\n\t\t\t\t\tlet sampleL = sample;\n\t\t\t\t\tlet sampleR = sample;",c&&(e+="\n\t\t\t\t\t\n\t\t\t\t\tconst chorusTap0Ratio = chorusTap0Index % 1;\n\t\t\t\t\tconst chorusTap1Ratio = chorusTap1Index % 1;\n\t\t\t\t\tconst chorusTap2Ratio = chorusTap2Index % 1;\n\t\t\t\t\tconst chorusTap3Ratio = chorusTap3Index % 1;\n\t\t\t\t\tconst chorusTap4Ratio = chorusTap4Index % 1;\n\t\t\t\t\tconst chorusTap5Ratio = chorusTap5Index % 1;\n\t\t\t\t\tconst chorusTap0A = chorusDelayLineL[(chorusTap0Index) & chorusMask];\n\t\t\t\t\tconst chorusTap0B = chorusDelayLineL[(chorusTap0Index + 1) & chorusMask];\n\t\t\t\t\tconst chorusTap1A = chorusDelayLineL[(chorusTap1Index) & chorusMask];\n\t\t\t\t\tconst chorusTap1B = chorusDelayLineL[(chorusTap1Index + 1) & chorusMask];\n\t\t\t\t\tconst chorusTap2A = chorusDelayLineL[(chorusTap2Index) & chorusMask];\n\t\t\t\t\tconst chorusTap2B = chorusDelayLineL[(chorusTap2Index + 1) & chorusMask];\n\t\t\t\t\tconst chorusTap3A = chorusDelayLineR[(chorusTap3Index) & chorusMask];\n\t\t\t\t\tconst chorusTap3B = chorusDelayLineR[(chorusTap3Index + 1) & chorusMask];\n\t\t\t\t\tconst chorusTap4A = chorusDelayLineR[(chorusTap4Index) & chorusMask];\n\t\t\t\t\tconst chorusTap4B = chorusDelayLineR[(chorusTap4Index + 1) & chorusMask];\n\t\t\t\t\tconst chorusTap5A = chorusDelayLineR[(chorusTap5Index) & chorusMask];\n\t\t\t\t\tconst chorusTap5B = chorusDelayLineR[(chorusTap5Index + 1) & chorusMask];\n\t\t\t\t\tconst chorusTap0 = chorusTap0A + (chorusTap0B - chorusTap0A) * chorusTap0Ratio;\n\t\t\t\t\tconst chorusTap1 = chorusTap1A + (chorusTap1B - chorusTap1A) * chorusTap1Ratio;\n\t\t\t\t\tconst chorusTap2 = chorusTap2A + (chorusTap2B - chorusTap2A) * chorusTap2Ratio;\n\t\t\t\t\tconst chorusTap3 = chorusTap3A + (chorusTap3B - chorusTap3A) * chorusTap3Ratio;\n\t\t\t\t\tconst chorusTap4 = chorusTap4A + (chorusTap4B - chorusTap4A) * chorusTap4Ratio;\n\t\t\t\t\tconst chorusTap5 = chorusTap5A + (chorusTap5B - chorusTap5A) * chorusTap5Ratio;\n\t\t\t\t\tchorusDelayLineL[chorusDelayPos] = sampleL * delayInputMult;\n\t\t\t\t\tchorusDelayLineR[chorusDelayPos] = sampleR * delayInputMult;\n\t\t\t\t\tsampleL = chorusCombinedMult * (sampleL + chorusVoiceMult * (chorusTap1 - chorusTap0 - chorusTap2));\n\t\t\t\t\tsampleR = chorusCombinedMult * (sampleR + chorusVoiceMult * (chorusTap4 - chorusTap3 - chorusTap5));\n\t\t\t\t\tchorusDelayPos = (chorusDelayPos + 1) & chorusMask;\n\t\t\t\t\tchorusTap0Index += chorusTap0Delta;\n\t\t\t\t\tchorusTap1Index += chorusTap1Delta;\n\t\t\t\t\tchorusTap2Index += chorusTap2Delta;\n\t\t\t\t\tchorusTap3Index += chorusTap3Delta;\n\t\t\t\t\tchorusTap4Index += chorusTap4Delta;\n\t\t\t\t\tchorusTap5Index += chorusTap5Delta;\n\t\t\t\t\tchorusVoiceMult += chorusVoiceMultDelta;\n\t\t\t\t\tchorusCombinedMult += chorusCombinedMultDelta;"),h&&(e+="\n\t\t\t\t\t\n\t\t\t\t\tconst echoTapStartIndex = (echoDelayPos + echoDelayOffsetStart) & echoMask;\n\t\t\t\t\tconst echoTapEndIndex   = (echoDelayPos + echoDelayOffsetEnd  ) & echoMask;\n\t\t\t\t\tconst echoTapStartL = echoDelayLineL[echoTapStartIndex];\n\t\t\t\t\tconst echoTapEndL   = echoDelayLineL[echoTapEndIndex];\n\t\t\t\t\tconst echoTapStartR = echoDelayLineR[echoTapStartIndex];\n\t\t\t\t\tconst echoTapEndR   = echoDelayLineR[echoTapEndIndex];\n\t\t\t\t\tconst echoTapL = (echoTapStartL + (echoTapEndL - echoTapStartL) * echoDelayOffsetRatio) * echoMult;\n\t\t\t\t\tconst echoTapR = (echoTapStartR + (echoTapEndR - echoTapStartR) * echoDelayOffsetRatio) * echoMult;\n\t\t\t\t\t\n\t\t\t\t\techoShelfSampleL = echoShelfB0 * echoTapL + echoShelfB1 * echoShelfPrevInputL - echoShelfA1 * echoShelfSampleL;\n\t\t\t\t\techoShelfSampleR = echoShelfB0 * echoTapR + echoShelfB1 * echoShelfPrevInputR - echoShelfA1 * echoShelfSampleR;\n\t\t\t\t\techoShelfPrevInputL = echoTapL;\n\t\t\t\t\techoShelfPrevInputR = echoTapR;\n\t\t\t\t\tsampleL += echoShelfSampleL;\n\t\t\t\t\tsampleR += echoShelfSampleR;\n\t\t\t\t\t\n\t\t\t\t\techoDelayLineL[echoDelayPos] = sampleL * delayInputMult;\n\t\t\t\t\techoDelayLineR[echoDelayPos] = sampleR * delayInputMult;\n\t\t\t\t\techoDelayPos = (echoDelayPos + 1) & echoMask;\n\t\t\t\t\techoDelayOffsetRatio += echoDelayOffsetRatioDelta;\n\t\t\t\t\techoMult += echoMultDelta;\n                    "),f&&(e+="\n\t\t\t\t\t\n\t\t\t\t\t// Reverb, implemented using a feedback delay network with a Hadamard matrix and lowpass filters.\n\t\t\t\t\t// good ratios:    0.555235 + 0.618033 + 0.818 +   1.0 = 2.991268\n\t\t\t\t\t// Delay lengths:  3041     + 3385     + 4481  +  5477 = 16384 = 2^14\n\t\t\t\t\t// Buffer offsets: 3041    -> 6426   -> 10907 -> 16384\n\t\t\t\t\tconst reverbDelayPos1 = (reverbDelayPos +  3041) & reverbMask;\n\t\t\t\t\tconst reverbDelayPos2 = (reverbDelayPos +  6426) & reverbMask;\n\t\t\t\t\tconst reverbDelayPos3 = (reverbDelayPos + 10907) & reverbMask;\n\t\t\t\t\tconst reverbSample0 = (reverbDelayLine[reverbDelayPos]);\n\t\t\t\t\tconst reverbSample1 = reverbDelayLine[reverbDelayPos1];\n\t\t\t\t\tconst reverbSample2 = reverbDelayLine[reverbDelayPos2];\n\t\t\t\t\tconst reverbSample3 = reverbDelayLine[reverbDelayPos3];\n\t\t\t\t\tconst reverbTemp0 = -(reverbSample0 + sampleL) + reverbSample1;\n\t\t\t\t\tconst reverbTemp1 = -(reverbSample0 + sampleR) - reverbSample1;\n\t\t\t\t\tconst reverbTemp2 = -reverbSample2 + reverbSample3;\n\t\t\t\t\tconst reverbTemp3 = -reverbSample2 - reverbSample3;\n\t\t\t\t\tconst reverbShelfInput0 = (reverbTemp0 + reverbTemp2) * reverb;\n\t\t\t\t\tconst reverbShelfInput1 = (reverbTemp1 + reverbTemp3) * reverb;\n\t\t\t\t\tconst reverbShelfInput2 = (reverbTemp0 - reverbTemp2) * reverb;\n\t\t\t\t\tconst reverbShelfInput3 = (reverbTemp1 - reverbTemp3) * reverb;\n\t\t\t\t\treverbShelfSample0 = reverbShelfB0 * reverbShelfInput0 + reverbShelfB1 * reverbShelfPrevInput0 - reverbShelfA1 * reverbShelfSample0;\n\t\t\t\t\treverbShelfSample1 = reverbShelfB0 * reverbShelfInput1 + reverbShelfB1 * reverbShelfPrevInput1 - reverbShelfA1 * reverbShelfSample1;\n\t\t\t\t\treverbShelfSample2 = reverbShelfB0 * reverbShelfInput2 + reverbShelfB1 * reverbShelfPrevInput2 - reverbShelfA1 * reverbShelfSample2;\n\t\t\t\t\treverbShelfSample3 = reverbShelfB0 * reverbShelfInput3 + reverbShelfB1 * reverbShelfPrevInput3 - reverbShelfA1 * reverbShelfSample3;\n\t\t\t\t\treverbShelfPrevInput0 = reverbShelfInput0;\n\t\t\t\t\treverbShelfPrevInput1 = reverbShelfInput1;\n\t\t\t\t\treverbShelfPrevInput2 = reverbShelfInput2;\n\t\t\t\t\treverbShelfPrevInput3 = reverbShelfInput3;\n\t\t\t\t\treverbDelayLine[reverbDelayPos1] = reverbShelfSample0 * delayInputMult;\n\t\t\t\t\treverbDelayLine[reverbDelayPos2] = reverbShelfSample1 * delayInputMult;\n\t\t\t\t\treverbDelayLine[reverbDelayPos3] = reverbShelfSample2 * delayInputMult;\n\t\t\t\t\treverbDelayLine[reverbDelayPos ] = reverbShelfSample3 * delayInputMult;\n\t\t\t\t\treverbDelayPos = (reverbDelayPos + 1) & reverbMask;\n\t\t\t\t\tsampleL += reverbSample1 + reverbSample2 + reverbSample3;\n\t\t\t\t\tsampleR += reverbSample0 + reverbSample2 - reverbSample3;\n\t\t\t\t\treverb += reverbDelta;"),e+="\n\t\t\t\t\t\n\t\t\t\t\toutputDataL[sampleIndex] += sampleL * mixVolume;\n\t\t\t\t\toutputDataR[sampleIndex] += sampleR * mixVolume;\n\t\t\t\t\tmixVolume += mixVolumeDelta;",t&&(e+="\n\t\t\t\t\t\n\t\t\t\t\tdelayInputMult += delayInputMultDelta;"),e+="\n\t\t\t\t}\n\t\t\t\t\n\t\t\t\tinstrumentState.mixVolume = mixVolume;\n\t\t\t\tinstrumentState.eqFilterVolume = eqFilterVolume;\n\t\t\t\t\n\t\t\t\t// Avoid persistent denormal or NaN values in the delay buffers and filter history.\n\t\t\t\tconst epsilon = (1.0e-24);",t&&(e+="\n\t\t\t\t\n\t\t\t\tinstrumentState.delayInputMult = delayInputMult;"),r&&(e+="\n\t\t\t\t\n\t\t\t\tinstrumentState.distortion = distortion;\n\t\t\t\tinstrumentState.distortionDrive = distortionDrive;\n\t\t\t\t\n\t\t\t\tif (!Number.isFinite(distortionFractionalInput1) || Math.abs(distortionFractionalInput1) < epsilon) distortionFractionalInput1 = 0.0;\n\t\t\t\tif (!Number.isFinite(distortionFractionalInput2) || Math.abs(distortionFractionalInput2) < epsilon) distortionFractionalInput2 = 0.0;\n\t\t\t\tif (!Number.isFinite(distortionFractionalInput3) || Math.abs(distortionFractionalInput3) < epsilon) distortionFractionalInput3 = 0.0;\n\t\t\t\tif (!Number.isFinite(distortionPrevInput) || Math.abs(distortionPrevInput) < epsilon) distortionPrevInput = 0.0;\n\t\t\t\tif (!Number.isFinite(distortionNextOutput) || Math.abs(distortionNextOutput) < epsilon) distortionNextOutput = 0.0;\n\t\t\t\t\n\t\t\t\tinstrumentState.distortionFractionalInput1 = distortionFractionalInput1;\n\t\t\t\tinstrumentState.distortionFractionalInput2 = distortionFractionalInput2;\n\t\t\t\tinstrumentState.distortionFractionalInput3 = distortionFractionalInput3;\n\t\t\t\tinstrumentState.distortionPrevInput = distortionPrevInput;\n\t\t\t\tinstrumentState.distortionNextOutput = distortionNextOutput;"),o&&(e+="\n\t\t\t\t\t\n\t\t\t\tif (Math.abs(bitcrusherPrevInput) < epsilon) bitcrusherPrevInput = 0.0;\n\t\t\t\tif (Math.abs(bitcrusherCurrentOutput) < epsilon) bitcrusherCurrentOutput = 0.0;\n\t\t\t\tinstrumentState.bitcrusherPrevInput = bitcrusherPrevInput;\n\t\t\t\tinstrumentState.bitcrusherCurrentOutput = bitcrusherCurrentOutput;\n\t\t\t\tinstrumentState.bitcrusherPhase = bitcrusherPhase;\n\t\t\t\tinstrumentState.bitcrusherPhaseDelta = bitcrusherPhaseDelta;\n\t\t\t\tinstrumentState.bitcrusherScale = bitcrusherScale;\n\t\t\t\tinstrumentState.bitcrusherFoldLevel = bitcrusherFoldLevel;"),l&&(e+="\n\t\t\t\t\t\n\t\t\t\tsynth.sanitizeFilters(filters);\n\t\t\t\t// The filter input here is downstream from another filter so we\n\t\t\t\t// better make sure it's safe too.\n\t\t\t\tif (!(initialFilterInput1 < 100) || !(initialFilterInput2 < 100)) {\n\t\t\t\t\tinitialFilterInput1 = 0.0;\n\t\t\t\t\tinitialFilterInput2 = 0.0;\n\t\t\t\t}\n\t\t\t\tif (Math.abs(initialFilterInput1) < epsilon) initialFilterInput1 = 0.0;\n\t\t\t\tif (Math.abs(initialFilterInput2) < epsilon) initialFilterInput2 = 0.0;\n\t\t\t\tinstrumentState.initialEqFilterInput1 = initialFilterInput1;\n\t\t\t\tinstrumentState.initialEqFilterInput2 = initialFilterInput2;"),p&&(e+="\n\t\t\t\t\n\t\t\t\tSynth.sanitizeDelayLine(panningDelayLine, panningDelayPos, panningMask);\n\t\t\t\tinstrumentState.panningDelayPos = panningDelayPos;\n\t\t\t\tinstrumentState.panningVolumeL = panningVolumeL;\n\t\t\t\tinstrumentState.panningVolumeR = panningVolumeR;\n\t\t\t\tinstrumentState.panningOffsetL = panningOffsetL;\n\t\t\t\tinstrumentState.panningOffsetR = panningOffsetR;"),c&&(e+="\n\t\t\t\t\n\t\t\t\tSynth.sanitizeDelayLine(chorusDelayLineL, chorusDelayPos, chorusMask);\n\t\t\t\tSynth.sanitizeDelayLine(chorusDelayLineR, chorusDelayPos, chorusMask);\n\t\t\t\tinstrumentState.chorusPhase = chorusPhase;\n\t\t\t\tinstrumentState.chorusDelayPos = chorusDelayPos;\n\t\t\t\tinstrumentState.chorusVoiceMult = chorusVoiceMult;\n\t\t\t\tinstrumentState.chorusCombinedMult = chorusCombinedMult;"),h&&(e+="\n\t\t\t\t\n\t\t\t\tSynth.sanitizeDelayLine(echoDelayLineL, echoDelayPos, echoMask);\n\t\t\t\tSynth.sanitizeDelayLine(echoDelayLineR, echoDelayPos, echoMask);\n\t\t\t\tinstrumentState.echoDelayPos = echoDelayPos;\n\t\t\t\tinstrumentState.echoMult = echoMult;\n\t\t\t\tinstrumentState.echoDelayOffsetRatio = echoDelayOffsetRatio;\n\t\t\t\t\n\t\t\t\tif (!Number.isFinite(echoShelfSampleL) || Math.abs(echoShelfSampleL) < epsilon) echoShelfSampleL = 0.0;\n\t\t\t\tif (!Number.isFinite(echoShelfSampleR) || Math.abs(echoShelfSampleR) < epsilon) echoShelfSampleR = 0.0;\n\t\t\t\tif (!Number.isFinite(echoShelfPrevInputL) || Math.abs(echoShelfPrevInputL) < epsilon) echoShelfPrevInputL = 0.0;\n\t\t\t\tif (!Number.isFinite(echoShelfPrevInputR) || Math.abs(echoShelfPrevInputR) < epsilon) echoShelfPrevInputR = 0.0;\n\t\t\t\tinstrumentState.echoShelfSampleL = echoShelfSampleL;\n\t\t\t\tinstrumentState.echoShelfSampleR = echoShelfSampleR;\n\t\t\t\tinstrumentState.echoShelfPrevInputL = echoShelfPrevInputL;\n\t\t\t\tinstrumentState.echoShelfPrevInputR = echoShelfPrevInputR;"),f&&(e+="\n\t\t\t\t\n\t\t\t\tSynth.sanitizeDelayLine(reverbDelayLine, reverbDelayPos        , reverbMask);\n\t\t\t\tSynth.sanitizeDelayLine(reverbDelayLine, reverbDelayPos +  3041, reverbMask);\n\t\t\t\tSynth.sanitizeDelayLine(reverbDelayLine, reverbDelayPos +  6426, reverbMask);\n\t\t\t\tSynth.sanitizeDelayLine(reverbDelayLine, reverbDelayPos + 10907, reverbMask);\n\t\t\t\tinstrumentState.reverbDelayPos = reverbDelayPos;\n\t\t\t\tinstrumentState.reverbMult = reverb;\n\t\t\t\t\n\t\t\t\tif (!Number.isFinite(reverbShelfSample0) || Math.abs(reverbShelfSample0) < epsilon) reverbShelfSample0 = 0.0;\n\t\t\t\tif (!Number.isFinite(reverbShelfSample1) || Math.abs(reverbShelfSample1) < epsilon) reverbShelfSample1 = 0.0;\n\t\t\t\tif (!Number.isFinite(reverbShelfSample2) || Math.abs(reverbShelfSample2) < epsilon) reverbShelfSample2 = 0.0;\n\t\t\t\tif (!Number.isFinite(reverbShelfSample3) || Math.abs(reverbShelfSample3) < epsilon) reverbShelfSample3 = 0.0;\n\t\t\t\tif (!Number.isFinite(reverbShelfPrevInput0) || Math.abs(reverbShelfPrevInput0) < epsilon) reverbShelfPrevInput0 = 0.0;\n\t\t\t\tif (!Number.isFinite(reverbShelfPrevInput1) || Math.abs(reverbShelfPrevInput1) < epsilon) reverbShelfPrevInput1 = 0.0;\n\t\t\t\tif (!Number.isFinite(reverbShelfPrevInput2) || Math.abs(reverbShelfPrevInput2) < epsilon) reverbShelfPrevInput2 = 0.0;\n\t\t\t\tif (!Number.isFinite(reverbShelfPrevInput3) || Math.abs(reverbShelfPrevInput3) < epsilon) reverbShelfPrevInput3 = 0.0;\n\t\t\t\tinstrumentState.reverbShelfSample0 = reverbShelfSample0;\n\t\t\t\tinstrumentState.reverbShelfSample1 = reverbShelfSample1;\n\t\t\t\tinstrumentState.reverbShelfSample2 = reverbShelfSample2;\n\t\t\t\tinstrumentState.reverbShelfSample3 = reverbShelfSample3;\n\t\t\t\tinstrumentState.reverbShelfPrevInput0 = reverbShelfPrevInput0;\n\t\t\t\tinstrumentState.reverbShelfPrevInput1 = reverbShelfPrevInput1;\n\t\t\t\tinstrumentState.reverbShelfPrevInput2 = reverbShelfPrevInput2;\n\t\t\t\tinstrumentState.reverbShelfPrevInput3 = reverbShelfPrevInput3;"),e+="}",m=new Function("Config","Synth",e)(u,qe),qe.effectsFunctionCache[d]=m}m(e,t,i,n,s,a)}static pulseWidthSynth(e,t,i,n,s){const a=e.tempMonoInstrumentSampleBuffer,r=n.specialIntervalExpressionMult*s.unisonSign;1!=s.unisonVoices||0!=s.unisonSpread||s.chord.customInterval||(n.phases[1]=n.phases[0]);let o=n.phaseDeltas[0],l=n.phaseDeltas[1];const p=+n.phaseDeltaScales[0],u=+n.phaseDeltaScales[1];let c=+n.expression;const h=+n.expressionDelta;let f=n.phases[0]%1,d=n.phases[1]%1,m=n.pulseWidth;const y=n.pulseWidthDelta,v=n.noteFilters,g=0|n.noteFilterCount;let b=+n.initialNoteFilterInput1,S=+n.initialNoteFilterInput2;const w=qe.applyFilters,k=t+i;for(let e=t;e<k;e++){const t=f%1,i=(f+m)%1,n=d%1,k=(d+m)%1;let F=i-t,T=k-n;if(!s.aliases){if(t<o)F+=.5*((q=t/o)+q-q*q-1);else if(t>1-o){F+=.5*((q=(t-1)/o)+q+q*q+1)}if(i<o)F-=.5*((q=i/o)+q-q*q-1);else if(i>1-o){F-=.5*((q=(i-1)/o)+q+q*q+1)}if(n<l)T+=.5*((q=n/l)+q-q*q-1);else if(n>1-l){T+=.5*((q=(n-1)/l)+q+q*q+1)}if(k<l)T-=.5*((q=k/l)+q-q*q-1);else if(k>1-l){var q;T-=.5*((q=(k-1)/l)+q+q*q+1)}}const M=F+T*r,z=w(M,b,S,g,v);S=b,b=M,f+=o,d+=l,o*=p,l*=u,m+=y;const P=z*c;c+=h,a[e]+=P}n.phases[0]=f,n.phases[1]=d,n.phaseDeltas[0]=o,n.phaseDeltas[1]=l,n.expression=c,n.pulseWidth=m,e.sanitizeFilters(v),n.initialNoteFilterInput1=b,n.initialNoteFilterInput2=S}static supersawSynth(e,t,i,n,s){const a=e.tempMonoInstrumentSampleBuffer,r=0|u.supersawVoiceCount;let o=n.phaseDeltas[0];const l=+n.phaseDeltaScales[0];let p=+n.expression;const c=+n.expressionDelta;let h=n.phases,f=+n.supersawDynamism;const d=+n.supersawDynamismDelta,m=n.supersawUnisonDetunes;let y=+n.supersawShape;const v=+n.supersawShapeDelta;let g=+n.supersawDelayLength;const b=+n.supersawDelayLengthDelta,S=n.supersawDelayLine,w=S.length-1>>0;let k=0|n.supersawDelayIndex;k=(k&w)+S.length;const q=n.noteFilters,F=0|n.noteFilterCount;let T=+n.initialNoteFilterInput1,M=+n.initialNoteFilterInput2;const z=qe.applyFilters,P=t+i;for(let e=t;e<P;e++){let t=(h[0]+o)%1,i=t-.5*(1+(r-1)*f);if(!s.aliases)if(t<o)i-=.5*((x=t/o)+x-x*x-1);else if(t>1-o){var x;i-=.5*((x=(t-1)/o)+x+x*x+1)}h[0]=t;for(let e=1;e<r;e++){const t=o*m[e];let n=(h[e]+t)%1;if(i+=n*f,!s.aliases)if(n<t){const e=n/t;i-=.5*(e+e-e*e-1)*f}else if(n>1-t){const e=(n-1)/t;i-=.5*(e+e+e*e+1)*f}h[e]=n}S[k&w]=i;const n=k-g,u=0|n,P=u+1,H=n-u,G=S[u&w];k++;const I=i-(G+(S[P&w]-G)*H)*y,D=z(I,T,M,F,q);M=T,T=I,o*=l,f+=d,y+=v,g+=b;const O=D*p;p+=c,a[e]+=O}n.phaseDeltas[0]=o,n.expression=p,n.supersawDynamism=f,n.supersawShape=y,n.supersawDelayLength=g,n.supersawDelayIndex=k,e.sanitizeFilters(q),n.initialNoteFilterInput1=T,n.initialNoteFilterInput2=M}static noiseSynth(e,t,i,n,s){const a=e.tempMonoInstrumentSampleBuffer,r=s.wave,o=n.specialIntervalExpressionMult*s.unisonSign;1!=s.unisonVoices||0!=s.unisonSpread||s.chord.customInterval||(n.phases[1]=n.phases[0]);let l=n.phaseDeltas[0],p=n.phaseDeltas[1];const c=+n.phaseDeltaScales[0],h=+n.phaseDeltaScales[1];let f=+n.expression;const d=+n.expressionDelta;let m=n.phases[0]%1*u.chipNoiseLength,y=n.phases[1]%1*u.chipNoiseLength;0==n.phases[0]&&(m=Math.random()*u.chipNoiseLength,1!=s.unisonVoices||0!=s.unisonSpread||s.chord.customInterval||(y=m)),0!=n.phases[1]||1==s.unisonVoices&&0==s.unisonSpread&&!s.chord.customInterval||(y=Math.random()*u.chipNoiseLength);const v=u.chipNoiseLength-1;let g=+n.noiseSampleA,b=+n.noiseSampleB;const S=n.noteFilters,w=0|n.noteFilterCount;let k=+n.initialNoteFilterInput1,q=+n.initialNoteFilterInput2;const F=qe.applyFilters,T=Math.min(1,l*s.noisePitchFilterMult),M=Math.min(1,p*s.noisePitchFilterMult),z=t+i;for(let e=t;e<z;e++){g+=(r[m&v]-g)*T,b+=(r[y&v]-b)*M;const t=g+b*o,i=F(t,k,q,w,S);q=k,k=t,m+=l,y+=p,l*=c,p*=h;const n=i*f;f+=d,a[e]+=n}n.phases[0]=m/u.chipNoiseLength,n.phases[1]=y/u.chipNoiseLength,n.phaseDeltas[0]=l,n.phaseDeltas[1]=p,n.expression=f,n.noiseSampleA=g,n.noiseSampleB=b,e.sanitizeFilters(S),n.initialNoteFilterInput1=k,n.initialNoteFilterInput2=q}static spectrumSynth(e,t,i,n,s){const a=e.tempMonoInstrumentSampleBuffer,r=s.wave,o=128,l=n.specialIntervalExpressionMult*s.unisonSign;1!=s.unisonVoices||0!=s.unisonSpread||s.chord.customInterval||(n.phases[1]=n.phases[0]);let p=n.phaseDeltas[0]*o,c=n.phaseDeltas[1]*o;const h=+n.phaseDeltaScales[0],f=+n.phaseDeltaScales[1];let d=+n.expression;const m=+n.expressionDelta;let y=+n.noiseSampleA,v=+n.noiseSampleB;const g=n.noteFilters,b=0|n.noteFilterCount;let S=+n.initialNoteFilterInput1,w=+n.initialNoteFilterInput2;const k=qe.applyFilters;let q=n.phases[0]%1*u.spectrumNoiseLength,F=n.phases[1]%1*u.spectrumNoiseLength;0==n.phases[0]&&(q=qe.findRandomZeroCrossing(r,u.spectrumNoiseLength)+p,1!=s.unisonVoices||0!=s.unisonSpread||s.chord.customInterval||(F=q)),0!=n.phases[1]||1==s.unisonVoices&&0==s.unisonSpread&&!s.chord.customInterval||(F=qe.findRandomZeroCrossing(r,u.spectrumNoiseLength)+c);const T=u.spectrumNoiseLength-1,M=Math.min(1,p),z=Math.min(1,c),P=t+i;for(let e=t;e<P;e++){const t=0|q,i=0|F,n=t&T,s=i&T;let o=r[n],u=r[s];const P=q-t,x=F-i;o+=(r[n+1]-o)*P,u+=(r[s+1]-u)*x,y+=(o-y)*M,v+=(u-v)*z;const H=y+v*l,G=k(H,S,w,b,g);w=S,S=H,q+=p,F+=c,p*=h,c*=f;const I=G*d;d+=m,a[e]+=I}n.phases[0]=q/u.spectrumNoiseLength,n.phases[1]=F/u.spectrumNoiseLength,n.phaseDeltas[0]=p/o,n.phaseDeltas[1]=c/o,n.expression=d,n.noiseSampleA=y,n.noiseSampleB=v,e.sanitizeFilters(g),n.initialNoteFilterInput1=S,n.initialNoteFilterInput2=w}static drumsetSynth(e,t,i,n,s){const a=e.tempMonoInstrumentSampleBuffer;let r=s.getDrumsetWave(n.drumsetPitch);const o=we.drumsetIndexReferenceDelta(n.drumsetPitch);let l=n.phaseDeltas[0]/o;const p=+n.phaseDeltaScales[0];let c=+n.expression;const h=+n.expressionDelta,f=n.noteFilters,d=0|n.noteFilterCount;let m=+n.initialNoteFilterInput1,y=+n.initialNoteFilterInput2;const v=qe.applyFilters;let g=n.phases[0]%1*u.spectrumNoiseLength;0==n.phases[0]&&(g=qe.findRandomZeroCrossing(r,u.spectrumNoiseLength)+l);const b=u.spectrumNoiseLength-1,S=t+i;for(let e=t;e<S;e++){const t=0|g,i=t&b;let n=r[i];const s=g-t;n+=(r[i+1]-n)*s;const o=n,u=v(o,m,y,d,f);y=m,m=o,g+=l,l*=p;const S=u*c;c+=h,a[e]+=S}n.phases[0]=g/u.spectrumNoiseLength,n.phaseDeltas[0]=l*o,n.expression=c,e.sanitizeFilters(f),n.initialNoteFilterInput1=m,n.initialNoteFilterInput2=y}static modSynth(e,t,i,n,s){if(!e.song)return;let a=u.modCount-1-n.pitches[0];if(s.invalidModulators[a])return;let r=s.modulators[a],o=[];if(u.modulators[s.modulators[a]].forSong)o.push(0);else if(s.modInstruments[a]==e.song.channels[s.modChannels[a]].instruments.length)for(let t=0;t<e.song.channels[s.modChannels[a]].instruments.length;t++)o.push(t);else s.modInstruments[a]>e.song.channels[s.modChannels[a]].instruments.length?null!=e.song.getPattern(s.modChannels[a],e.bar)&&(o=e.song.getPattern(s.modChannels[a],e.bar).instruments):o.push(s.modInstruments[a]);for(let t=0;t<o.length;t++){e.setModValue(n.expression,n.expression+n.expressionDelta,s.modChannels[a],o[t],r);for(let i=0;i<e.heldMods.length;i++)u.modulators[s.modulators[a]].forSong?e.heldMods[i].setting==r&&e.setModValue(e.heldMods[i].volume,e.heldMods[i].volume,s.modChannels[a],o[t],r):e.heldMods[i].channelIndex==s.modChannels[a]&&e.heldMods[i].instrumentIndex==o[t]&&e.heldMods[i].setting==r&&e.setModValue(e.heldMods[i].volume,e.heldMods[i].volume,s.modChannels[a],o[t],r);if(r==u.modulators.dictionary["reset arp"].index&&0==e.tick&&n.noteStartPart==e.beat*u.partsPerBeat+e.part)e.channels[s.modChannels[a]].instruments[o[t]].arpTime=0;else if(r==u.modulators.dictionary["next bar"].index)e.wantToSkip=!0;else if(r==u.modulators.dictionary["eq filter"].index){const r=e.song.channels[s.modChannels[a]].instruments[o[t]];if(!r.eqFilterType){let t=0|s.modFilterTypes[a];if(0==t){let t=0;const s=e.getTicksIntoBar()/u.ticksPerPart;for(;n.note.start+n.note.pins[t].time<=s;)t++;let a=(s-n.note.start+i/(e.getSamplesPerTick()*u.ticksPerPart)*u.ticksPerPart-n.note.pins[t-1].time)/(n.note.pins[t].time-n.note.pins[t-1].time);null!=r.eqSubFilters[n.note.pins[t-1].size]||null!=r.eqSubFilters[n.note.pins[t].size]?r.tmpEqFilterEnd=fe.lerpFilters(r.eqSubFilters[n.note.pins[t-1].size],r.eqSubFilters[n.note.pins[t].size],a):r.tmpEqFilterEnd=r.eqFilter}else{for(let e=0;e<u.filterMorphCount;e++)r.tmpEqFilterEnd==r.eqSubFilters[e]&&null!=r.tmpEqFilterEnd&&(r.tmpEqFilterEnd=new fe,r.tmpEqFilterEnd.fromJsonObject(r.eqSubFilters[e].toJsonObject()));null==r.tmpEqFilterEnd&&(r.tmpEqFilterEnd=new fe,r.tmpEqFilterEnd.fromJsonObject(r.eqFilter.toJsonObject())),r.tmpEqFilterEnd.controlPointCount>Math.floor((t-1)/2)&&(t%2?r.tmpEqFilterEnd.controlPoints[Math.floor((t-1)/2)].freq=n.expression+n.expressionDelta:r.tmpEqFilterEnd.controlPoints[Math.floor((t-1)/2)].gain=n.expression+n.expressionDelta)}}}else if(r==u.modulators.dictionary["note filter"].index){const r=e.song.channels[s.modChannels[a]].instruments[o[t]];if(!r.noteFilterType){let t=0|s.modFilterTypes[a];if(0==t){let t=0;const s=e.getTicksIntoBar()/u.ticksPerPart;for(;n.note.start+n.note.pins[t].time<=s;)t++;let a=(s-n.note.start+i/(e.getSamplesPerTick()*u.ticksPerPart)*u.ticksPerPart-n.note.pins[t-1].time)/(n.note.pins[t].time-n.note.pins[t-1].time);null!=r.noteSubFilters[n.note.pins[t-1].size]||null!=r.noteSubFilters[n.note.pins[t].size]?r.tmpNoteFilterEnd=fe.lerpFilters(r.noteSubFilters[n.note.pins[t-1].size],r.noteSubFilters[n.note.pins[t].size],a):r.tmpNoteFilterEnd=r.noteFilter}else{for(let e=0;e<u.filterMorphCount;e++)r.tmpNoteFilterEnd==r.noteSubFilters[e]&&null!=r.tmpNoteFilterEnd&&(r.tmpNoteFilterEnd=new fe,r.tmpNoteFilterEnd.fromJsonObject(r.noteSubFilters[e].toJsonObject()));null==r.tmpNoteFilterEnd&&(r.tmpNoteFilterEnd=new fe,r.tmpNoteFilterEnd.fromJsonObject(r.noteFilter.toJsonObject())),r.tmpNoteFilterEnd.controlPointCount>Math.floor((t-1)/2)&&(t%2?r.tmpNoteFilterEnd.controlPoints[Math.floor((t-1)/2)].freq=n.expression+n.expressionDelta:r.tmpNoteFilterEnd.controlPoints[Math.floor((t-1)/2)].gain=n.expression+n.expressionDelta)}}}}}static findRandomZeroCrossing(e,t){let i=Math.random()*t;const n=t-1;let s=i&n,a=e[s];for(let r=128;r>0;r--){const r=s+16&n,o=e[r];if(a*o<=0){for(let r=0;r<16;r++){const r=s+1&n,o=e[r];if(a*o<=0){const e=o-a;i=s,Math.abs(e)>1e-8&&(i+=-a/e),i=Math.max(0,i)%t;break}s=r,a=o}break}s=r,a=o}return i}static instrumentVolumeToVolumeMult(e){return e==-u.volumeRange/2?0:Math.pow(2,u.volumeLogScale*e)}static volumeMultToInstrumentVolume(e){return e<=0?-u.volumeRange/2:Math.min(u.volumeRange,Math.log(e)/Math.LN2/u.volumeLogScale)}static noteSizeToVolumeMult(e){return Math.pow(Math.max(0,e)/u.noteSizeMax,1.5)}static volumeMultToNoteSize(e){return Math.pow(Math.max(0,e),1/1.5)*u.noteSizeMax}static fadeInSettingToSeconds(e){return.0125*(.95*e+.05*e*e)}static secondsToFadeInSetting(e){return $(0,u.fadeInRange,Math.round((-.95+Math.sqrt(.9025+.2*e/.0125))/.1))}static fadeOutSettingToTicks(e){return u.fadeOutTicks[e]}static ticksToFadeOutSetting(e){let t=u.fadeOutTicks[0];if(e<=t)return 0;for(let i=1;i<u.fadeOutTicks.length;i++){let n=u.fadeOutTicks[i];if(e<=n)return e<(t+n)/2?i-1:i;t=n}return u.fadeOutTicks.length-1}static detuneToCents(e){return e-u.detuneCenter}static centsToDetune(e){return e+u.detuneCenter}static getOperatorWave(e,t){return 2!=e?u.operatorWaves[e]:u.pwmOperatorWaves[t]}getSamplesPerTick(){if(null==this.song)return 0;let e=this.song.getBeatsPerMinute();return this.isModActive(u.modulators.dictionary.tempo.index)&&(e=this.getModValue(u.modulators.dictionary.tempo.index)),this.getSamplesPerTickSpecificBPM(e)}getSamplesPerTickSpecificBPM(e){const t=e/60,i=u.partsPerBeat*t,n=u.ticksPerPart*i;return this.samplesPerSecond/n}static fittingPowerOfTwo(e){return 1<<32-Math.clz32(Math.ceil(e)-1)}sanitizeFilters(e){let t=!1;for(const i of e){const e=Math.abs(i.output1),n=Math.abs(i.output2);if(!(e<100&&n<100)){t=!0;break}e<V&&(i.output1=0),n<V&&(i.output2=0)}if(t)for(const t of e)t.output1=0,t.output2=0}static sanitizeDelayLine(e,t,i){for(;;){const n=--t&i,s=Math.abs(e[n]);if(Number.isFinite(s)&&(0==s||s>=V))break;e[n]=0}}static applyFilters(e,t,i,n,s){for(let a=0;a<n;a++){const n=s[a],r=n.output1,o=n.output2,l=n.a1,p=n.a2,u=n.b0,c=n.b1,h=n.b2;e=u*e+c*t+h*i-l*r-p*o,n.a1=l+n.a1Delta,n.a2=p+n.a2Delta,n.useMultiplicativeInputCoefficients?(n.b0=u*n.b0Delta,n.b1=c*n.b1Delta,n.b2=h*n.b2Delta):(n.b0=u+n.b0Delta,n.b1=c+n.b1Delta,n.b2=h+n.b2Delta),n.output2=r,n.output1=e,i=o,t=r}return e}}return qe.tempFilterStartCoefficients=new L,qe.tempFilterEndCoefficients=new L,qe.fmSynthFunctionCache={},qe.fm6SynthFunctionCache={},qe.effectsFunctionCache=Array(128).fill(void 0),qe.pickedStringFunctionCache=Array(3).fill(void 0),qe.fmSourceTemplate=("\n\t\tconst data = synth.tempMonoInstrumentSampleBuffer;\n\t\tconst sineWave = Config.sineWave;\n\t\t\t\n\t\t// I'm adding 1000 to the phase to ensure that it's never negative even when modulated by other waves because negative numbers don't work with the modulus operator very well.\n\t\tlet operator#Phase       = +((tone.phases[#] % 1) + 1000) * "+u.sineWaveLength+";\n\t\tlet operator#PhaseDelta  = +tone.phaseDeltas[#] * "+u.sineWaveLength+";\n\t\tlet operator#PhaseDeltaScale = +tone.phaseDeltaScales[#];\n\t\tlet operator#OutputMult  = +tone.operatorExpressions[#];\n\t\tconst operator#OutputDelta = +tone.operatorExpressionDeltas[#];\n\t\tlet operator#Output      = +tone.feedbackOutputs[#];\n        const operator#Wave      = tone.operatorWaves[#].samples;\n\t\tlet feedbackMult         = +tone.feedbackMult;\n\t\tconst feedbackDelta        = +tone.feedbackDelta;\n        let expression = +tone.expression;\n\t\tconst expressionDelta = +tone.expressionDelta;\n\t\t\n\t\tconst filters = tone.noteFilters;\n\t\tconst filterCount = tone.noteFilterCount|0;\n\t\tlet initialFilterInput1 = +tone.initialNoteFilterInput1;\n\t\tlet initialFilterInput2 = +tone.initialNoteFilterInput2;\n\t\tconst applyFilters = Synth.applyFilters;\n\t\t\n\t\tconst stopIndex = bufferIndex + roundedSamplesPerTick;\n\t\tfor (let sampleIndex = bufferIndex; sampleIndex < stopIndex; sampleIndex++) {\n\t\t\t\t// INSERT OPERATOR COMPUTATION HERE\n\t\t\t\tconst fmOutput = (/*operator#Scaled*/); // CARRIER OUTPUTS\n\t\t\t\t\n\t\t\tconst inputSample = fmOutput;\n\t\t\tconst sample = applyFilters(inputSample, initialFilterInput1, initialFilterInput2, filterCount, filters);\n\t\t\tinitialFilterInput2 = initialFilterInput1;\n\t\t\tinitialFilterInput1 = inputSample;\n\t\t\t\t\n\t\t\t\tfeedbackMult += feedbackDelta;\n\t\t\t\toperator#OutputMult += operator#OutputDelta;\n\t\t\t\toperator#Phase += operator#PhaseDelta;\n\t\t\toperator#PhaseDelta *= operator#PhaseDeltaScale;\n\t\t\t\n\t\t\tconst output = sample * expression;\n\t\t\texpression += expressionDelta;\n\n\t\t\tdata[sampleIndex] += output;\n\t\t\t}\n\t\t\t\n\t\t\ttone.phases[#] = operator#Phase / "+u.sineWaveLength+";\n\t\t\ttone.phaseDeltas[#] = operator#PhaseDelta / "+u.sineWaveLength+";\n\t\t\ttone.operatorExpressions[#] = operator#OutputMult;\n\t\t    tone.feedbackOutputs[#] = operator#Output;\n\t\t    tone.feedbackMult = feedbackMult;\n\t\t    tone.expression = expression;\n\t\t\t\n\t\tsynth.sanitizeFilters(filters);\n\t\ttone.initialNoteFilterInput1 = initialFilterInput1;\n\t\ttone.initialNoteFilterInput2 = initialFilterInput2;\n\t\t").split("\n"),qe.operatorSourceTemplate=("\n\t\t\t\tconst operator#PhaseMix = operator#Phase/* + operator@Scaled*/;\n\t\t\t\tconst operator#PhaseInt = operator#PhaseMix|0;\n\t\t\t\tconst operator#Index    = operator#PhaseInt & "+u.sineWaveMask+";\n                const operator#Sample   = operator#Wave[operator#Index];\n                operator#Output         = operator#Sample + (operator#Wave[operator#Index + 1] - operator#Sample) * (operator#PhaseMix - operator#PhaseInt);\n\t\t\t\tconst operator#Scaled   = operator#OutputMult * operator#Output;\n\t\t").split("\n"),e.Channel=ye,e.Config=u,e.CustomAlgorithm=re,e.CustomFeedBack=oe,e.EnvelopeSettings=de,e.FilterControlPoint=he,e.FilterSettings=fe,e.HarmonicsWave=ue,e.Instrument=me,e.Note=ne,e.Operator=ae,e.Pattern=se,e.Song=ve,e.SpectrumWave=le,e.Synth=qe,e.clamp=$,e.makeNotePin=ie,e.parseFloatWithDefault=U,e.parseIntWithDefault=j,Object.defineProperty(e,"te",{value:!0}),e}({});
//# sourceMappingURL=beepbox_synth.min.js.map